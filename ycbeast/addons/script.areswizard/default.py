import base64;exec base64.b64decode('#!/usr/bin/env python
# -*- coding: utf-8 -*- 
import pyxbmct . addonwindow as pyxbmct
import xbmc , xbmcaddon , xbmcgui , xbmcplugin , os , sys
import urllib2 , urllib , re , base64
import shutil , glob , json , os . path
from xbmc import translatePath as translate
from urllib2 import Request , urlopen , HTTPError , URLError
from os . path import join
from sqlite3 import dbapi2 as sqlite3
import zipfile
import contextlib
import errno
import xml . etree . ElementTree as ET
from resources import speedtest
import string , random
import datetime
from datetime import date
import time
import ssl
import socket
if 64 - 64: i11iIiiIii
if 65 - 65: O0 / iIii1I11I1II1 % OoooooooOO - i1IIi
if 73 - 73: II111iiii
if 22 - 22: I1IiiI * Oo0Ooo / OoO0O00 . OoOoOO00 . o0oOOo0O0Ooo / I1ii11iIi11i
if 48 - 48: oO0o / OOooOOo / I11i / Ii1I
class IiiIII111iI ( urllib . FancyURLopener ) :
 version = 'Kodi/Ares Wizard'
 if 34 - 34: iii1I1I / O00oOoOoO0o0O . O0oo0OO0 + Oo0ooO0oo0oO . OoO0O00 - I1ii11iIi11i
 if 53 - 53: I11i / Oo0Ooo / II111iiii % Ii1I / OoOoOO00 . Oo0ooO0oo0oO
class oo00 ( urllib . FancyURLopener ) :
 version = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11'
 if 88 - 88: iii1I1I . oO0o % Oo0ooO0oo0oO
 if 66 - 66: iii1I1I
 if 30 - 30: iIii1I11I1II1 * iIii1I11I1II1 . II111iiii - oO0o
 if 72 - 72: II111iiii - OoOoOO00
 if 91 - 91: OoO0O00 . i11iIiiIii / oO0o % I11i / OoO0O00 - i11iIiiIii
class II1Iiii1111i ( Exception ) :
 def __init__ ( self , value ) :
  self . value = value
 def __str__ ( self ) :
  return repr ( self . value )
  if 25 - 25: Ii1I
  if 89 - 89: OoooooooOO - O00oOoOoO0o0O * Oo0ooO0oo0oO
O0I11i1i11i1I = chr
def Iiii ( i1Ii11i11 ) :
 if i1Ii11i11 :
  return O0I11i1i11i1I ( i1Ii11i11 % 256 ) + Iiii ( i1Ii11i11 // 256 )
 else :
  return ""
  if 87 - 87: oO0o / Oo0ooO0oo0oO + O0oo0OO0 - Oo0ooO0oo0oO . Oo0ooO0oo0oO / II111iiii
  if 11 - 11: I1IiiI % o0oOOo0O0Ooo - Oo0Ooo
  if 58 - 58: i11iIiiIii % O0oo0OO0
  if 54 - 54: OOooOOo % O0 + I1IiiI - iii1I1I / I11i
  if 31 - 31: OoO0O00 + II111iiii
  if 13 - 13: OOooOOo * oO0o * I1IiiI
  if 55 - 55: II111iiii
  if 43 - 43: OoOoOO00 - i1IIi + O0oo0OO0 + Ii1I
  if 17 - 17: o0oOOo0O0Ooo
  if 64 - 64: Ii1I % i1IIi % OoooooooOO
  if 3 - 3: iii1I1I + O0
  if 42 - 42: OOooOOo / i1IIi + i11iIiiIii - Ii1I
  if 78 - 78: OoO0O00
  if 18 - 18: O0 - iii1I1I / iii1I1I + Oo0ooO0oo0oO % Oo0ooO0oo0oO - O00oOoOoO0o0O
  if 62 - 62: iii1I1I - O00oOoOoO0o0O - OoOoOO00 % i1IIi / oO0o
  if 77 - 77: II111iiii - II111iiii . I1IiiI / o0oOOo0O0Ooo
  if 14 - 14: I11i % O0
  if 41 - 41: i1IIi + O0oo0OO0 + OOooOOo - O00oOoOoO0o0O
  if 77 - 77: Oo0Ooo . O00oOoOoO0o0O % Oo0ooO0oo0oO
  if 42 - 42: oO0o - i1IIi / i11iIiiIii + OOooOOo + OoO0O00
  if 17 - 17: oO0o . Oo0Ooo . I1ii11iIi11i
  if 3 - 3: OoOoOO00 . Oo0Ooo . I1IiiI / Ii1I
  if 38 - 38: II111iiii % i11iIiiIii . Oo0ooO0oo0oO - OOooOOo + Ii1I
  if 66 - 66: OoooooooOO * OoooooooOO . OOooOOo . i1IIi - OOooOOo
  if 77 - 77: I11i - iIii1I11I1II1
  if 82 - 82: i11iIiiIii . OOooOOo / Oo0Ooo * O0 % oO0o % iIii1I11I1II1
  if 78 - 78: iIii1I11I1II1 - Ii1I * OoO0O00 + o0oOOo0O0Ooo + iii1I1I + iii1I1I
  if 11 - 11: iii1I1I - OoO0O00 % Oo0ooO0oo0oO % iii1I1I / OoOoOO00 - OoO0O00
  if 74 - 74: iii1I1I * O0
  if 89 - 89: oO0o + Oo0Ooo
  if 3 - 3: i1IIi / I1IiiI % I11i * i11iIiiIii / O0 * I11i
  if 49 - 49: oO0o % Ii1I + i1IIi . I1IiiI % I1ii11iIi11i
  if 48 - 48: I11i + I11i / II111iiii / iIii1I11I1II1
  if 20 - 20: o0oOOo0O0Ooo
oO00 = "0.0.34"
ooo = str ( Iiii ( 8027998824078406446 ) )
ii1I1i1I = str ( Iiii ( 2147777190397934400065 ) )
OOoo0O0 = str ( Iiii ( 9705255058264266725205238237887546360427105 ) )
iiiIi1i1I = str ( Iiii ( 2057743978290074741400223016771887 ) )
if 80 - 80: OoOoOO00 - OoO0O00
OOO00 = str ( Iiii ( 8099847274632671841 ) )
iiiiiIIii = str ( Iiii ( 14917153972667827218665322801 ) )
O000OO0 = str ( Iiii ( 796352815 ) )
I11iii1Ii = str ( Iiii ( 636043595498406984087267985324424431387932914792 ) )
I1IIiiIiii = str ( Iiii ( 162827160447592187926340604243052654435323643982952 ) )
O000oo0O = str ( Iiii ( 8392585944576975151 ) )
OOOO = str ( Iiii ( 140804222218760152037750063 ) )
i11i1 = str ( Iiii ( 3400000511170344040 ) )
IIIii1II1II = str ( Iiii ( 13281251946689640 ) )
i1I1iI = str ( Iiii ( 604749529586444262366792212200126255 ) )
if 93 - 93: iIii1I11I1II1 % oO0o * i1IIi
if 16 - 16: O0 - O0oo0OO0 * iIii1I11I1II1 + iii1I1I
if 50 - 50: II111iiii - Oo0ooO0oo0oO * I1ii11iIi11i / O0oo0OO0 + o0oOOo0O0Ooo
if 88 - 88: Ii1I / O0oo0OO0 + iii1I1I - II111iiii / Oo0ooO0oo0oO - OoOoOO00
if 15 - 15: I1ii11iIi11i + OoOoOO00 - OoooooooOO / OOooOOo
if 58 - 58: i11iIiiIii % I11i
if 71 - 71: OOooOOo + Oo0ooO0oo0oO % i11iIiiIii + I1ii11iIi11i - O00oOoOoO0o0O
if 88 - 88: OoOoOO00 - OoO0O00 % OOooOOo
if 16 - 16: I1IiiI * oO0o % O00oOoOoO0o0O
if 86 - 86: I1IiiI + Ii1I % i11iIiiIii * oO0o . Oo0ooO0oo0oO * I11i
i1I11i1iI = "www.google.com"
I1ii1Ii1 = "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11"
iii11 = " "
oOOOOo0 = ""
iiII1i1 = " "
o00oOO0o = " "
OOO00O = " "
OOoOO0oo0ooO = " "
O0o0O00Oo0o0 = "archive.org"
O00O0oOO00O00 = ""
i1 = " "
Oo00 = " "
i1i = " "
iiI111I1iIiI = " "
II = " "
Ii1I1IIii1II = " "
O0ii1ii1ii = " "
oooooOoo0ooo = " "
I1I1IiI1 = " "
iiII1i1 = " "
III1iII1I1ii = " "
if 61 - 61: II111iiii
O0OOO = ''
II11iIiIIIiI = "/download"
o0o = "http://www.google.com"
o00 = 'script.areswizard'
OooOO000 = xbmcaddon . Addon ( o00 )
OOoOoo = ""
if 85 - 85: I1ii11iIi11i % iii1I1I % Oo0ooO0oo0oO
Oo00oo0oO = OooOO000 . getAddonInfo ( 'path' )
IIiIi1iI = os . path . join ( Oo00oo0oO , 'resources/images' )
i1IiiiI1iI = os . path . join ( Oo00oo0oO , 'resources' )
i1iIi = os . path . join ( Oo00oo0oO , 'icon.png' )
ooOOoooooo = os . path . join ( IIiIi1iI , 'button_default.png' )
II1I = os . path . join ( IIiIi1iI , 'button_selected.png' )
O0i1II1Iiii1I11 = os . path . join ( IIiIi1iI , 'star.png' )
IIII = os . path . join ( IIiIi1iI , 'hosted.png' )
iiIiI = translate ( 'special://home/userdata/' )
o00oooO0Oo = os . path . join ( iiIiI , 'advancedsettings.xml' )
o0O0OOO0Ooo = os . path . join ( i1IiiiI1iI , 'asettings.xml' )
iiIiII1 = os . path . join ( iiIiI , 'guisettings.xml' )
OOO00O0O = xbmc . translatePath ( OooOO000 . getAddonInfo ( 'profile' ) )
iii = os . path . join ( OOO00O0O , 'settings' )
oOooOOOoOo = ""
i1Iii1i1I = os . path . join ( IIiIi1iI , 'listtexture.png' )
OOoO00 = os . path . join ( IIiIi1iI , 'slider_bg.png' )
IiI111111IIII = os . path . join ( IIiIi1iI , 'splash.png' )
i1Ii = os . path . join ( IIiIi1iI , 'maintenance.png' )
ii111iI1iIi1 = os . path . join ( IIiIi1iI , 'green.png' )
OOO = os . path . join ( IIiIi1iI , 'amber.png' )
oo0OOo0 = os . path . join ( IIiIi1iI , 'red.png' )
I11IiI = os . path . join ( IIiIi1iI , 'down.png' )
O0ooO0Oo00o = ""
ooO0oOOooOo0 = "yes"
i1I1ii11i1Iii = "yes"
I1IiiiiI = translate ( 'special://home/' )
o0O = os . path . join ( xbmc . translatePath ( 'special://home' ) , 'cache' )
IiII = os . path . join ( xbmc . translatePath ( 'special://home' ) , 'temp' )
ii1iII1II = xbmc . translatePath ( os . path . join ( 'special://home/addons/packages' , '' ) )
Iii1I1I11iiI1 = xbmc . translatePath ( os . path . join ( 'special://home/userdata/Thumbnails' , '' ) )
I1I1i1I = translate ( 'special://home/addons' )
if 30 - 30: OoooooooOO
I1Ii1iI1 = os . path . join ( IIiIi1iI , 'buildinstall.png' )
oO0 = translate ( 'special://home/userdata/addon_data/script.areswizard' )
O0OO0O = translate ( 'special://home/addons/script.areswizard' )
OO = "http://archive.org/download/"
OoOoO = "https://www.google.com"
Ii1I1i = "dobba_dependancies/"
OOI1iI1ii1II = "dobba_builds/"
O0O0OOOOoo = "dobba_addons/"
oOooO0 = "dobba_graphics/"
Ii1I1Ii = translate ( os . path . join ( 'special://home/addons' , 'packages' ) )
OOoO0 = os . path . join ( oO0 , 'buildinstall' )
OO0Oooo0oOO0O = os . path . join ( O0OO0O , 'icon.png' )
o00O0 = xbmcplugin . getSetting ( int ( sys . argv [ 1 ] ) , 'username' )
oOO0O00Oo0O0o = xbmcplugin . getSetting ( int ( sys . argv [ 1 ] ) , 'password' )
ii1 = xbmcplugin . getSetting ( int ( sys . argv [ 1 ] ) , 'email' )
I1iIIiiIIi1i = xbmcplugin . getSetting ( int ( sys . argv [ 1 ] ) , 'accountstatus' )
if 66 - 66: iii1I1I - iii1I1I - i11iIiiIii . I1ii11iIi11i - OOooOOo
oOOo0O00o = "/back.png"
if 8 - 8: OoO0O00
ii1111iII = translate ( 'special://home/' )
iiiiI = translate ( os . path . join ( 'special://home/userdata' , 'addon_data' ) )
oooOo0OOOoo0 = translate ( 'special://home/userdata' )
OOoO = translate ( 'special://home/media' )
OO0O000 = translate ( 'special://home/backgrounds' )
iiIiI1i1 = translate ( 'special://home/Fonts' )
oO0O00oOOoooO = translate ( 'special://home/system' )
IiIi11iI = translate ( 'special://home/sounds' )
Oo0O00O000 = translate ( os . path . join ( 'special://home/userdata' , 'Thumbnails' ) )
if 3 - 3: Ii1I * I1ii11iIi11i % I11i
if 59 - 59: oO0o - iii1I1I
I1 = ""
ii1I1 = ""
OooooOOoo0 = ""
i1I1IiiIi1i = ""
iiI11ii1I1 = ""
Ooo0OOoOoO0 = ""
oOo0OOoO0 = ""
IIo0Oo0oO0oOO00 = ""
oo00OO0000oO = ""
I1II1 = ""
oooO = ""
i1I1i111Ii = ""
oooi1i1iI1iiiI = ""
Ooo0oOooo0 = ""
oOOOoo00 = ""
if 9 - 9: O0 % O0 - o0oOOo0O0Ooo
OoO = ""
iiI1IIIi = ""
II11IiIi11 = ""
IIOOO0O00O0OOOO = ""
I1iiii1I = ""
OOo0 = ""
oO00ooooO0o = ""
oo0o = ""
o0oO0oooOoo = ""
I1III1111iIi = ""
I1i111I = ""
Ooo = ""
oo00OO0000oO = ""
I1iiii1I = ""
Oo0oo0O0o00O = ""
I1i11 = ""
IiIi1I1 = ""
IiIIi1 = ""
IIIIiii1IIii = ""
II1i11I = ""
ii1I1IIii11 = 0
O0o0oO = 0
IIIIiIiIi1 = 0
I11iiiiI1i = 0
iI1i11 = ""
OoOOoooOO0O = ""
ooo00Ooo = ""
if 93 - 93: i11iIiiIii - I1IiiI * I1ii11iIi11i * I11i % O0 + OoooooooOO
if 25 - 25: O00oOoOoO0o0O + Ii1I / Oo0ooO0oo0oO . o0oOOo0O0Ooo % O0 * OoO0O00
if 84 - 84: Oo0ooO0oo0oO % Ii1I + i11iIiiIii
if 28 - 28: Oo0Ooo + OoO0O00 * OOooOOo % oO0o . I11i % O0
try :
 I1iiiiIii = ssl . _create_unverified_context
except AttributeError :
 if 19 - 19: OoO0O00 - Oo0Ooo . O0
 pass
else :
 if 60 - 60: II111iiii + Oo0Ooo
 ssl . _create_default_https_context = I1iiiiIii
 if 9 - 9: Oo0ooO0oo0oO * OoooooooOO - iIii1I11I1II1 + OoOoOO00 / OoO0O00 . OoO0O00
 if 49 - 49: II111iiii
 if 25 - 25: OoooooooOO - I1IiiI . I1IiiI * oO0o
try :
 o000oo = xbmcplugin . getSetting ( int ( sys . argv [ 1 ] ) , 'debuglog' )
except :
 o000oo = "0"
 if 95 - 95: Oo0ooO0oo0oO / Oo0ooO0oo0oO
 if 30 - 30: I1ii11iIi11i + Oo0Ooo / Oo0Ooo % I1ii11iIi11i . I1ii11iIi11i
 if 55 - 55: Oo0ooO0oo0oO - I11i + II111iiii + iii1I1I % Ii1I
 if 41 - 41: i1IIi - I11i - Ii1I
 if 8 - 8: OoO0O00 + O0oo0OO0 - o0oOOo0O0Ooo % Oo0Ooo % o0oOOo0O0Ooo * oO0o
def IIIi11I11 ( text , from_string , to_string , excluding = True ) :
 if excluding :
  try : iIIII = re . search ( "(?i)" + from_string + "([\S\s]+?)" + to_string , text ) . group ( 1 )
  except : iIIII = ''
 else :
  try : iIIII = re . search ( "(?i)(" + from_string + "[\S\s]+?" + to_string + ")" , text ) . group ( 1 )
  except : iIIII = ''
 return iIIII
 if 45 - 45: I1ii11iIi11i % I1IiiI - i11iIiiIii
 if 11 - 11: iIii1I11I1II1 * iIii1I11I1II1 * I1IiiI
 if 46 - 46: OoOoOO00 + OoO0O00
o0o0O = os . path . join ( xbmc . translatePath ( 'special://logpath' ) , 'kodi.log' )
ooooO0oOoOOoO = os . path . join ( xbmc . translatePath ( 'special://logpath' ) , 'xbmc.log' )
I1i11i = os . path . join ( xbmc . translatePath ( 'special://logpath' ) , 'spmc.log' )
IiIi = os . path . join ( xbmc . translatePath ( 'special://logpath' ) , 'tvmc.log' )
if 87 - 87: I1ii11iIi11i - I1ii11iIi11i - iii1I1I + oO0o
if os . path . isfile ( IiIi ) :
 O0OOO = IiIi
elif os . path . isfile ( I1i11i ) :
 O0OOO = I1i11i
elif os . path . isfile ( o0o0O ) :
 O0OOO = o0o0O
elif os . path . isfile ( ooooO0oOoOOoO ) :
 O0OOO = ooooO0oOoOOoO
else :
 O0OOO = "error"
 OOooo = xbmcgui . Dialog ( )
 OOooo . ok ( "Error" , "Could not find Kodi log file" "" , "" )
 if 31 - 31: o0oOOo0O0Ooo % OoO0O00
 if 14 - 14: oO0o / oO0o % Oo0ooO0oo0oO
def ooO ( stringid ) :
 if 6 - 6: iIii1I11I1II1 . Oo0ooO0oo0oO % o0oOOo0O0Ooo
 if 50 - 50: iii1I1I + O0 + Ii1I . II111iiii / o0oOOo0O0Ooo
 if 17 - 17: Ii1I % iIii1I11I1II1 - iIii1I11I1II1
 if stringid == "introlabel_loggedin" :
  return ( "Welcome to Ares Wizard, Please select an option from above" )
  if 78 - 78: iii1I1I + I11i . Oo0ooO0oo0oO - iii1I1I . Ii1I
  if 30 - 30: I1IiiI + OoO0O00 % Ii1I * iii1I1I / Oo0Ooo - I11i
 if stringid == "introlabel_awating_activation" :
  return ( "Welcome to Ares Wizard. Please enter your activation code to continue" )
  if 64 - 64: iIii1I11I1II1
  if 21 - 21: Oo0Ooo . II111iiii
 if stringid == "introlabel_register" :
  return ( "Welcome to Ares Wizard. Please register to continue" )
  if 54 - 54: II111iiii % II111iiii
  if 86 - 86: O0 % Ii1I * Oo0ooO0oo0oO * iIii1I11I1II1 * i1IIi * I11i
 if stringid == "browsebuildsbutton" :
  return ( "Browse Builds" )
  if 83 - 83: OoOoOO00 % II111iiii - OoOoOO00 + O00oOoOoO0o0O - O0
  if 52 - 52: Oo0Ooo * Oo0ooO0oo0oO
 if stringid == "browseaddonsbutton" :
  return ( "Browse Addons" )
  if 33 - 33: Ii1I
  if 74 - 74: OOooOOo + O0 + i1IIi - i1IIi + II111iiii
 if stringid == "browserepobutton" :
  return ( "Browse Repo\'s" )
  if 83 - 83: I1ii11iIi11i - I1IiiI + OOooOOo
  if 5 - 5: Ii1I
 if stringid == "deletepackagesbutton" :
  return ( "Delete Packages" )
  if 46 - 46: O00oOoOoO0o0O
  if 45 - 45: Oo0ooO0oo0oO
 if stringid == "deletethumbnailsbutton" :
  return ( "Delete Thumbnails" )
  if 21 - 21: oO0o . O0oo0OO0 . OOooOOo / Oo0Ooo / O0oo0OO0
  if 17 - 17: OOooOOo / OOooOOo / I11i
 if stringid == "tweakcache_page2button" :
  return ( "Generate settings" )
  if 1 - 1: i1IIi . i11iIiiIii % OOooOOo
  if 82 - 82: iIii1I11I1II1 + Oo0Ooo . iIii1I11I1II1 % O00oOoOoO0o0O / Ii1I . Ii1I
 if stringid == "applycachetweakbutton" :
  return ( "Apply these settings" )
  if 14 - 14: o0oOOo0O0Ooo . OOooOOo . I11i + OoooooooOO - OOooOOo + O00oOoOoO0o0O
  if 9 - 9: Ii1I
  if 59 - 59: I1IiiI * II111iiii . O0
 if stringid == "recversiontextlabel" :
  return ( "Recommended version:" )
  if 56 - 56: Ii1I - iii1I1I % I1IiiI - o0oOOo0O0Ooo
  if 51 - 51: O0 / Oo0ooO0oo0oO * iIii1I11I1II1 + I1ii11iIi11i + o0oOOo0O0Ooo
 if stringid == "installedversiontextlabel" :
  return ( "Installed version:" )
  if 98 - 98: iIii1I11I1II1 * I1ii11iIi11i * OOooOOo + Oo0ooO0oo0oO % i11iIiiIii % O0
  if 27 - 27: O0
 if stringid == "deletepackageslabel" :
  return ( "When you install an addon or an addon gets updated typically the \ninstallation file is copied and kept by Kodi indefinitely; In time \nthese files could start to take up a lot of storage space on your device. \nIt is completely safe to delete these files in order to regain storage \nspace.. You won\'t notice any difference on performance. \n\nClick the button below to delete any packages which have \naccumulated on your device." )
  if 79 - 79: o0oOOo0O0Ooo - I11i + o0oOOo0O0Ooo . oO0o
  if 28 - 28: i1IIi - iii1I1I
  if 54 - 54: iii1I1I - O0 % OOooOOo
 if stringid == "deletethumbnailslabel" :
  return ( "Nearly every single image you see in Kodi will be kept by Kodi \nindefinitely; It is these files which are one of the worst culprits for Kodi \nusing lots of storage space. It is safe to remove these files in order to \nregain storage space but once you do Kodi will have to remake those \nbelonging to content on your device.. So there could be a real benefit \nfrom clearing them out now and then but Kodi might be slightly slower \nto load icons the first time afterwards - it will then return to normal. \n\nClick the button below to delete the thumbnails which have \naccumulated on your device." )
  if 73 - 73: O0 . OoOoOO00 + I1IiiI - I11i % I11i . I11i
  if 17 - 17: Ii1I - OoooooooOO % Ii1I . O00oOoOoO0o0O / i11iIiiIii % iii1I1I
 if stringid == "deletecachelabel" :
  return ( "Please note: One of the biggest myths regarding Kodi right now is that \nclearing cache is some sort of magical cure to buffering or just about \nany other problems with Kodi or it\'s addons. This simply is not true at \nall. Cache is one of the most mis-understood aspects of Kodi, in actual \nfact Kodi utilizes several types of cache but when people talk about \n\'clear cache\' it simply means deleting temporary files. \n\n[/COLOR][COLOR=lightgray]This option will delete temporary files accumulated by Kodi and it\'s \naddons (the same as any other \'cache cleaner\' within Kodi) It is \ncompletely safe to do this - you\'re unlikely to notice any difference. Infact \nthe effect will probably be negligible but I\'ve taken the time to include \nthis option in order to have a complete maintenance package. \n\n[/COLOR][COLOR=darkgray]Click the button below to delete temporary files which have \naccumulated on your device." )
  if 28 - 28: I11i
  if 58 - 58: OoOoOO00
 if stringid == "maintenancelabel" :
  return ( "Please note: None of these options are likely to fix any problems. \n(unless the nature of the problem is lack of storage space)\n\n[/COLOR][COLOR=lightgray]These options are pretty basic and are included a few different \nmaintenance utilities. The idea is to prevent Kodi from using up too \nmuch storage space as should you run out of space Kodi will not work \nat all. \n\n[/COLOR][COLOR=darkgray] How often you will need to use these options depends on how much \nstorage space your device has.. on my Android box which has 8GB of \nstorage I worked out that I would only need to use these options about \nevery 6-7 months at the most.. I\'ve seen some people recommending \nsuch options be used as much as daily - this would be a total waste \nof your time in my opinion. \n\n[/COLOR][COLOR=lightgray]Keep an eye on your free storage space in the System Info section and \nif you\'ve got less than a few hundred MB available it might be time to \nuse these options ;o)" )
  if 37 - 37: Oo0Ooo - iIii1I11I1II1 / I1ii11iIi11i
  if 73 - 73: i11iIiiIii - O00oOoOoO0o0O
 if stringid == "tweakcachelabel1" :
  return ( "The video cache is another area in Kodi where you may come \nacross lots of bad advice. The truth of the matter is - there is no \nsingle setting which is ideal for everyone. The ideal settings \ndepend on which device you have and what you are running on it. \n\n[/COLOR][COLOR=lightgray]Video cache can either be held in temporary storage (RAM) or \ntemporarily stored on your storage device. 99% of the time \nRAM memory is the ideal choice. \n\n[/COLOR][COLOR=darkgray]Kodi will use 60MB of RAM by default, but if you have a lot more \nthan that available you may benefit from allowing Kodi to use more \nRAM by changing a setting called \'cachemembuffersize\' and this is \nwhere most bad advice is given. The ideal setting depends on how\nmuch RAM you have available but how much you have will vary \nquite often.. if you follow bad advice and set it too high Kodi may crash." )
  if 25 - 25: OoooooooOO + O00oOoOoO0o0O * I1ii11iIi11i
  if 92 - 92: I1IiiI + I11i + O0 / o0oOOo0O0Ooo + O0oo0OO0
 if stringid == "tweakcachelabel2" :
  return ( "As a precautionary measure, since the free RAM can vary - we would \nsuggest subtracting a further 10% to allow for any additional \nprograms that may be running. There is also no need to have a huge \ncache so an upper limit of 500MB will be applied if necessary. Which\nmeans your recommended cache amount for this device right now is\n" )
  if 18 - 18: Oo0ooO0oo0oO * OoOoOO00 . iii1I1I / I1ii11iIi11i / i11iIiiIii
  if 21 - 21: oO0o / I1ii11iIi11i + Ii1I + OoooooooOO
 if stringid == "tweakcachelabel3" :
  return ( "\n\nIf you change your configuration often, for example installing builds\nor if you've installed android apps which stay open all the time then \nyou may want to run this wizard afterwards to keep 'tuning' these \nvalues. (the same applies no matter which way you tweak cache)" )
  if 91 - 91: i11iIiiIii / i1IIi + iii1I1I + Oo0ooO0oo0oO * i11iIiiIii
  if 66 - 66: iIii1I11I1II1 % i1IIi - O0 + I11i * O0oo0OO0 . O00oOoOoO0o0O
 if stringid == "deletecachebutton" :
  return ( "Delete Cache\\Temp" )
  if 52 - 52: Oo0ooO0oo0oO + O0 . iii1I1I . I1ii11iIi11i . OoO0O00
  if 97 - 97: I1IiiI / iii1I1I
 if stringid == "enteractivationcode" :
  return ( "Welcome to Ares Wizard. Please enter your activation code for this device \n(" )
  if 71 - 71: II111iiii / i1IIi . I1ii11iIi11i % OoooooooOO . OoOoOO00
  if 41 - 41: i1IIi * II111iiii / OoooooooOO . OOooOOo
  if 83 - 83: iii1I1I . O0 / Oo0Ooo / OOooOOo - II111iiii
  if 100 - 100: OoO0O00
 if stringid == "cachetweak1" :
  return ( "Kodi is reporting you have " )
  if 46 - 46: OoOoOO00 / iIii1I11I1II1 % iii1I1I . iIii1I11I1II1 * iii1I1I
  if 38 - 38: I1ii11iIi11i - iii1I1I / O0 . O0oo0OO0
 if stringid == "cachetweak2" :
  return ( " RAM available \n (at this moment in time)" )
  if 45 - 45: O0oo0OO0
  if 83 - 83: OoOoOO00 . OoooooooOO
 if stringid == "cachetweak3" :
  return ( "As per the guidelines issued by the Kodi developers themselves the \nMAXIMUM amount you could safely set your video cache memory \nto would be " )
  if 58 - 58: i11iIiiIii + OoooooooOO % OoooooooOO / O00oOoOoO0o0O / i11iIiiIii
  if 62 - 62: OoO0O00 / I1ii11iIi11i
 if stringid == "cachetweak4" :
  return ( "MB (1/3 of your available RAM)" )
  if 7 - 7: OoooooooOO . O00oOoOoO0o0O
  if 53 - 53: Ii1I % Ii1I * o0oOOo0O0Ooo + OoOoOO00
  if 92 - 92: OoooooooOO + i1IIi / Ii1I * O0
 if stringid == "cachetweak6" :
  return ( "** Your current setting (" )
  if 100 - 100: Oo0ooO0oo0oO % iIii1I11I1II1 * II111iiii - iii1I1I
  if 92 - 92: Oo0ooO0oo0oO
 if stringid == "cachetweak7" :
  return ( "MB) will \nbe replaced with the new values**" )
  if 22 - 22: Oo0Ooo % iii1I1I * I1ii11iIi11i / OOooOOo % i11iIiiIii * I11i
  if 95 - 95: OoooooooOO - O00oOoOoO0o0O * I1IiiI + OoOoOO00
 if stringid == "currentsetting" :
  return ( "Current Setting: " )
  if 10 - 10: o0oOOo0O0Ooo / i11iIiiIii
  if 92 - 92: I11i . O0oo0OO0
 if stringid == "recommendedsetting" :
  return ( "Recommended: " )
  if 85 - 85: I1ii11iIi11i . O0oo0OO0
 if stringid == "videocachesize" :
  return ( "Video Cache Size" )
  if 78 - 78: Oo0ooO0oo0oO * O0oo0OO0 + iIii1I11I1II1 + iIii1I11I1II1 / O0oo0OO0 . Ii1I
  if 97 - 97: Oo0ooO0oo0oO / O0oo0OO0 % i1IIi % I1ii11iIi11i
 if stringid == "curltimelabeltext" :
  return ( "CURL Timeout" )
  if 18 - 18: iIii1I11I1II1 % I11i
 if stringid == "readbufferfactorlabel" :
  return ( "Read Buffer Factor" )
  if 95 - 95: Oo0ooO0oo0oO + i11iIiiIii * O0oo0OO0 - i1IIi * O0oo0OO0 - iIii1I11I1II1
 if stringid == "recommendedsettingcurl" :
  return ( "Recommended: 10-20s" )
  if 75 - 75: OoooooooOO * O00oOoOoO0o0O
 if stringid == "recommendedrbfsetting" :
  return ( "Recommended: 5" )
  if 9 - 9: O00oOoOoO0o0O - II111iiii + O0 / iIii1I11I1II1 / i11iIiiIii
 if stringid == "buffermodelabel" :
  return ( "Buffer Mode" )
  if 39 - 39: O00oOoOoO0o0O * Oo0Ooo + iIii1I11I1II1 - O00oOoOoO0o0O + OOooOOo
 if stringid == "automaintenancelabel1" :
  return ( "Frequency to show popup box with stats on Kodi start" )
  if 69 - 69: O0
 if stringid == "automaintenanceradio" :
  return ( "Enable Automatic Maintenance Reminders" )
  if 85 - 85: Oo0ooO0oo0oO / O0
 if stringid == "automaintenancefreqeverytime" :
  return ( "Every Start" )
  if 18 - 18: o0oOOo0O0Ooo % O0 * I1ii11iIi11i
  if 62 - 62: O0oo0OO0 . O00oOoOoO0o0O . OoooooooOO
 if stringid == "cachetweakfloowingsettings" :
  return ( "The following settings have been worked out according to \ninformation collected from your device.." )
  if 11 - 11: OOooOOo / I11i
 if stringid == "advancedsettings" :
  return ( "advancedsettings.xml saved - please restart Kodi" )
  if 73 - 73: i1IIi / i11iIiiIii
 if stringid == "unblocklabel" :
  return ( "Authorities\ISP's can block certain websites rendering some addons\nuseless - but you can easily switch to a new address and bypass\nthese restrictions to make the addon work again." )
  if 58 - 58: Oo0Ooo . II111iiii + oO0o - i11iIiiIii / II111iiii / O0
  if 85 - 85: OoOoOO00 + OOooOOo
 if stringid == "unblocklabel2" :
  return ( "Current URL for " )
  if 10 - 10: O00oOoOoO0o0O / OoO0O00 + OoOoOO00 / i1IIi
 if stringid == "unblocklabel4" :
  return ( "Could be replaced with:" )
  if 27 - 27: Ii1I
 if stringid == "unblockurlbutton" :
  return ( "Change URL" )
  if 67 - 67: I1IiiI
  if 55 - 55: I1ii11iIi11i - iii1I1I * o0oOOo0O0Ooo + OoOoOO00 * OoOoOO00 * O0
 if stringid == "unblocklabelbad" :
  return ( " settings not found. (Probably not installed)" )
  if 91 - 91: O0oo0OO0 - OOooOOo % iIii1I11I1II1 - OoooooooOO % Oo0ooO0oo0oO
 if stringid == "installrepo" :
  return ( "Install repository?" )
  if 98 - 98: OoO0O00 . OoO0O00 * oO0o * II111iiii * O0oo0OO0
 if stringid == "installrepo2" :
  return ( "You don't have the repository for this addon. Do you want to install it?" )
  if 92 - 92: Oo0Ooo
  if 40 - 40: OoOoOO00 / O00oOoOoO0o0O
 if stringid == "cachedeleted1" :
  return ( "Cache Deleted" )
  if 79 - 79: OoO0O00 - iIii1I11I1II1 + Ii1I - O0oo0OO0
 if stringid == "cachedeleted2" :
  return ( " File(s) Deleted" )
  if 93 - 93: II111iiii . I1IiiI - Oo0Ooo + OoOoOO00
 if stringid == "errorwriteconfig" :
  return ( "Error writing config" )
  if 61 - 61: II111iiii
  if 15 - 15: i11iIiiIii % I1IiiI * I11i / O0oo0OO0
 if stringid == "urlchanged" :
  return ( " URL was changed" )
  if 90 - 90: iii1I1I
 if stringid == "urlnotchanged" :
  return ( " URL was NOT changed" )
  if 31 - 31: OOooOOo + O0
 if stringid == "areswizard" :
  return ( "Ares Wizard" )
  if 87 - 87: Oo0ooO0oo0oO
 if stringid == "error" :
  return ( "Error: " )
  if 45 - 45: OoO0O00 / OoooooooOO - iii1I1I / Ii1I % O00oOoOoO0o0O
 if stringid == "couldntdownload" :
  return ( " could not be downloaded" )
  if 83 - 83: I1IiiI . iIii1I11I1II1 - O00oOoOoO0o0O * i11iIiiIii
 if stringid == "erroextract" :
  return ( "Error extracting" )
  if 20 - 20: i1IIi * O0oo0OO0 + II111iiii % o0oOOo0O0Ooo % oO0o
 if stringid == "wasinstalled" :
  return ( " was successfully installed" )
  if 13 - 13: Oo0Ooo
 if stringid == "addoninserted" :
  return ( "Addon insterted" )
  if 60 - 60: I1ii11iIi11i * I1IiiI
 if stringid == "downloadcomplete" :
  return ( "Download Complete" )
  if 17 - 17: OOooOOo % Oo0Ooo / I1ii11iIi11i . O00oOoOoO0o0O * OOooOOo - II111iiii
 if stringid == "closekodi" :
  return ( "Kodi needs to be closed. Press OK to attempt to close Kodi" )
  if 41 - 41: Ii1I
  if 77 - 77: O0oo0OO0
  if 65 - 65: II111iiii . I1IiiI % oO0o * OoO0O00
 if stringid == "fullautomaintenanceradio" :
  return ( "Enable Fully Automatic Maintenance" )
  if 38 - 38: OoOoOO00 / iii1I1I % Oo0Ooo
 if stringid == "fullautomaintenancelabel1" :
  return ( "Delete the following items..." )
  if 11 - 11: iii1I1I - oO0o + II111iiii - iIii1I11I1II1
 if stringid == "fullyautomaintenancelabel2" :
  return ( "..Every.." )
  if 7 - 7: O00oOoOoO0o0O - I11i / II111iiii * Ii1I . iii1I1I * iii1I1I
 if stringid == "restarneeded" :
  return ( "Please restart Ares Wizard for changes to take effect." )
  if 61 - 61: I11i % Oo0ooO0oo0oO - OoO0O00 / Oo0Ooo
 if stringid == "alreadyhaveaccount" :
  return ( "Do you already have an account?" )
  if 4 - 4: OoooooooOO - i1IIi % Ii1I - OOooOOo * o0oOOo0O0Ooo
 if stringid == "enteremail" :
  return ( "Please enter your email address" )
  if 85 - 85: OoooooooOO * iIii1I11I1II1 . iii1I1I / OoooooooOO % I1IiiI % O0
 if stringid == "entername" :
  return ( "Please enter a name for this device (must be unique like a username)" )
  if 36 - 36: Ii1I / II111iiii / O00oOoOoO0o0O / O00oOoOoO0o0O + I1ii11iIi11i
 if stringid == "enterpass" :
  return ( "Please enter your password" )
  if 95 - 95: O00oOoOoO0o0O
 if stringid == "downloading" :
  return ( "Downloading " )
  if 51 - 51: II111iiii + O00oOoOoO0o0O . i1IIi . I1ii11iIi11i + OoOoOO00 * I1IiiI
 if stringid == "installing" :
  return ( "Please Wait, Installing " )
  if 72 - 72: oO0o + oO0o / II111iiii . OoooooooOO % Ii1I
 if stringid == "pleasewait" :
  return ( "Please wait..." )
  if 49 - 49: oO0o . OoO0O00 - Oo0Ooo * OoooooooOO . Oo0Ooo
 if stringid == "thumbsdel" :
  return ( "Thumbnails Deleted" )
  if 2 - 2: OoooooooOO % OOooOOo
 if stringid == "thumbsdel2" :
  return ( "Thumbnails and database have been deleted" )
  if 63 - 63: I1IiiI % iIii1I11I1II1
 if stringid == "packagesdel" :
  return ( "Packages Deleted" )
  if 39 - 39: iii1I1I / II111iiii / I1ii11iIi11i % I1IiiI
 if stringid == "packagesdel2" :
  return ( " Package(s) Deleted" )
  if 89 - 89: O0oo0OO0 + OoooooooOO + O0oo0OO0 * i1IIi + iIii1I11I1II1 % I11i
 if stringid == "donate" :
  return ( "...coming soon (hopefully)" )
  if 59 - 59: OOooOOo + i11iIiiIii
 if stringid == "cachelabeltemp" :
  return ( "(Temporary Files)" )
  if 88 - 88: i11iIiiIii - Oo0ooO0oo0oO
 if stringid == "cachelabelinclude" :
  return ( "Include data from..." )
  if 67 - 67: OOooOOo . Oo0Ooo + OoOoOO00 - OoooooooOO
 if stringid == "installfailed" :
  return ( " Installation failed. Installation file could not be downloaded" )
  if 70 - 70: OOooOOo / II111iiii - iIii1I11I1II1 - iii1I1I
 if stringid == "repounavailable" :
  return ( "Repository is currently unavailable" )
  if 11 - 11: iIii1I11I1II1 . OoooooooOO . II111iiii / i1IIi - I11i
 if stringid == "salts" :
  return ( "S.A.L.T.S" )
  if 30 - 30: OoOoOO00
 if stringid == "downloadfailed" :
  return ( "Download failed. Please report this error on our Facebook group\n\nhttps://www.facebook.com/groups/kodicom/" )
  if 21 - 21: i11iIiiIii / O0oo0OO0 % OOooOOo * O0 . I11i - iIii1I11I1II1
 if stringid == "regulardownloadfailed" :
  return ( "The normal download method failed, do you want to try the alternative method? (Please note, there will be no indication of progress so please be patient)" )
  if 26 - 26: II111iiii * OoOoOO00
  if 10 - 10: II111iiii . iii1I1I
 if stringid == "buildinstallfreshstart1" :
  return ( "Do you want to do a 'fresh' install?" )
  if 32 - 32: Ii1I . O00oOoOoO0o0O . OoooooooOO - OoO0O00 + oO0o
 if stringid == "buildinstallfreshstart2" :
  return ( "(All addons and settings will be wiped (except Ares Wizard))" )
  if 88 - 88: iii1I1I
 if stringid == "logfileresult" :
  return ( "Your logfile can be viewed at:" )
  if 19 - 19: II111iiii * O00oOoOoO0o0O + Ii1I
 if stringid == "speedtestprevlabel" :
  return ( "Previous results..." )
  if 65 - 65: OOooOOo . O0oo0OO0 . OoO0O00 . iii1I1I - OOooOOo
 if stringid == "buildextractfail" :
  return ( "Errors occurred during extraction, install may not work. Do you want to see the errors?" )
  if 19 - 19: i11iIiiIii + iii1I1I % Oo0ooO0oo0oO
 if stringid == "totalfilesdeleted" :
  return ( "Total files cleared on this device: " )
  if 14 - 14: OoO0O00 . II111iiii . I11i / Ii1I % I1ii11iIi11i - Oo0ooO0oo0oO
 if stringid == "totalspacegained" :
  return ( "Total storage space regained: " )
  if 67 - 67: I11i - OOooOOo . i1IIi
 if stringid == "buildextractfile" :
  return ( " file " )
  if 35 - 35: iii1I1I + Oo0ooO0oo0oO - oO0o . iii1I1I . O00oOoOoO0o0O
 if stringid == "buildextractfile2" :
  return ( " of " )
  if 87 - 87: OoOoOO00
 if stringid == "speedtestuploadfailed" :
  return ( "Failed to measure upload speed. It may work if you retry.." )
  if 25 - 25: i1IIi . OoO0O00 - OoOoOO00 / OoO0O00 % OoO0O00 * iIii1I11I1II1
 if stringid == "downloadfailed2" :
  return ( "Download stopped unexpectedly" )
  if 50 - 50: OoO0O00 . i11iIiiIii - oO0o . oO0o
 if stringid == "notvalidzip" :
  return ( "Download failed: Not a valid Zip file" )
  if 31 - 31: OOooOOo / Oo0Ooo * i1IIi . OoOoOO00
 if stringid == "unzipfail" :
  return ( "Failed extracting Zip" )
  if 57 - 57: OOooOOo + iIii1I11I1II1 % i1IIi % I1IiiI
 if stringid == "backingupbuild" :
  return ( "Saving configuration data.. this may take a minute or two" )
  if 83 - 83: o0oOOo0O0Ooo / i11iIiiIii % iIii1I11I1II1 . I11i % oO0o . OoooooooOO
 if stringid == "modulefail" :
  return ( " module couldn't be downloaded" )
  if 94 - 94: Ii1I + iIii1I11I1II1 % OoO0O00
 if stringid == "buildbackupfailedskin" :
  return ( "Build backup failed. Error copying skin." )
  if 93 - 93: Ii1I - OOooOOo + iIii1I11I1II1 * o0oOOo0O0Ooo + O0oo0OO0 . iii1I1I
 if stringid == "repairingbuild" :
  return ( "Restoring build data.." )
  if 49 - 49: OoooooooOO * I11i - Oo0Ooo . oO0o
 if stringid == "pressonbuild" :
  return ( "[press on build]" )
  if 89 - 89: Oo0ooO0oo0oO + Ii1I * Oo0ooO0oo0oO / Oo0ooO0oo0oO
 if stringid == "kodinotclosed" :
  return ( "Kodi could not be automatically closed, please use task manager to stop Kodi or disconnect power from your device. The build may not work unless you do this step." )
  if 46 - 46: OoO0O00
 if stringid == "choicebackupbuild" :
  return ( "Do you want to backup the skin\profile? This will enable the build repair option which you can use to restore the build visuals should profile\skin problems occur" )
  if 71 - 71: I11i / I11i * oO0o * oO0o / II111iiii
  if 35 - 35: OOooOOo * o0oOOo0O0Ooo * I1IiiI % Oo0Ooo . OoOoOO00
  if 58 - 58: I11i + II111iiii * iii1I1I * i11iIiiIii - iIii1I11I1II1
 pass
 if 68 - 68: OoooooooOO % II111iiii
 if 26 - 26: II111iiii % i11iIiiIii % iIii1I11I1II1 % I11i * I11i * I1ii11iIi11i
 if 24 - 24: II111iiii % O0oo0OO0 - Oo0ooO0oo0oO + I1IiiI * I1ii11iIi11i
 if 2 - 2: Ii1I - O00oOoOoO0o0O
 if 83 - 83: oO0o % o0oOOo0O0Ooo % Ii1I - II111iiii * OOooOOo / OoooooooOO
 if 18 - 18: OoO0O00 + iIii1I11I1II1 - II111iiii - I1IiiI
 if 71 - 71: OoooooooOO
 if 33 - 33: O0oo0OO0
 if 62 - 62: I1ii11iIi11i + Ii1I + i1IIi / OoooooooOO
def IIiiii ( settingid , value ) :
 if 37 - 37: o0oOOo0O0Ooo % Oo0ooO0oo0oO
 try :
  if 83 - 83: OOooOOo . O0oo0OO0 + oO0o - OOooOOo * O0oo0OO0 / O0oo0OO0
  if 39 - 39: O0oo0OO0 / Oo0Ooo % OoO0O00 % i11iIiiIii
  with open ( iii , 'r' , 0 ) as o0o0Ooo0 :
   OoO000O = json . load ( o0o0Ooo0 )
   if 94 - 94: OoOoOO00 . O0 / Ii1I . I1ii11iIi11i - i1IIi
  oOooOOOoOo = OoO000O [ 'deviceid' ]
  if 26 - 26: OoO0O00 - OOooOOo . o0oOOo0O0Ooo
  if 65 - 65: I1ii11iIi11i % O0 % iIii1I11I1II1 * Ii1I
  if 31 - 31: Ii1I
  try :
   iIIiI1I1i = OoO000O [ 'automaintenance' ]
  except :
   iIIiI1I1i = "0"
   if 68 - 68: I11i % O0oo0OO0 + I1ii11iIi11i - i11iIiiIii . o0oOOo0O0Ooo - O0oo0OO0
   if 31 - 31: I1IiiI * oO0o + OoooooooOO - iii1I1I / OoooooooOO
  try :
   I111IIiii1Ii = OoO000O [ 'storageinfolastpopup' ]
  except :
   I111IIiii1Ii = "0"
   if 13 - 13: oO0o . I1IiiI * oO0o + I1IiiI
   if 59 - 59: I1IiiI + i11iIiiIii + i1IIi / I11i
  try :
   I11 = OoO000O [ 'fullautofreq' ]
  except :
   I11 = "0"
   if 47 - 47: I1ii11iIi11i / oO0o / iii1I1I
   if 86 - 86: o0oOOo0O0Ooo
  try :
   Ii = OoO000O [ 'fullautocache' ]
  except :
   Ii = "0"
   if 2 - 2: I1ii11iIi11i . I1ii11iIi11i + I1ii11iIi11i * o0oOOo0O0Ooo
   if 100 - 100: Oo0Ooo % Ii1I / I11i
  try :
   iIII11Ii = OoO000O [ 'fullautopackages' ]
  except :
   iIII11Ii = "0"
   if 52 - 52: O0oo0OO0 / Oo0ooO0oo0oO - I11i
   if 49 - 49: OoOoOO00 / Oo0Ooo . i11iIiiIii
  try :
   IIIi1i = OoO000O [ 'fullautothumb' ]
  except :
   IIIi1i = "0"
   if 71 - 71: iii1I1I % o0oOOo0O0Ooo / OOooOOo / Oo0Ooo
   if 66 - 66: Oo0Ooo - o0oOOo0O0Ooo * O00oOoOoO0o0O + OoOoOO00 + o0oOOo0O0Ooo - iIii1I11I1II1
   if 17 - 17: oO0o
   if 22 - 22: I11i + iIii1I11I1II1
   if 24 - 24: OoOoOO00 % i1IIi + iii1I1I . i11iIiiIii . I1ii11iIi11i
  try :
   IIi1II = OoO000O [ 'cacheinclude_genesis' ]
  except :
   IIi1II = "0"
   if 2 - 2: II111iiii - OoO0O00 . O00oOoOoO0o0O * iii1I1I / oO0o
  try :
   OOo0iiIii1IIi = OoO000O [ 'cacheinclude_navix' ]
  except :
   OOo0iiIii1IIi = "0"
   if 10 - 10: i11iIiiIii - o0oOOo0O0Ooo % iIii1I11I1II1
  try :
   i111IIIiI = OoO000O [ 'cacheinclude_youtube' ]
  except :
   i111IIIiI = "0"
   if 23 - 23: Oo0Ooo % I11i - OOooOOo % iIii1I11I1II1 . OoOoOO00
  try :
   I1Ii1 = OoO000O [ 'cacheinclude_ivue' ]
  except :
   I1Ii1 = "0"
   if 79 - 79: i11iIiiIii . OOooOOo - Oo0Ooo / OoooooooOO
  try :
   oOOo00O0OOOo = OoO000O [ 'cacheinclude_salts' ]
  except :
   oOOo00O0OOOo = "0"
   if 31 - 31: I11i % OOooOOo * I11i
  try :
   IiI = OoO000O [ 'cacheinclude_pulsar' ]
  except :
   IiI = "0"
   if 34 - 34: I11i % Oo0ooO0oo0oO . O0 . iIii1I11I1II1
   if 93 - 93: i1IIi . i11iIiiIii . Oo0Ooo
   if 99 - 99: I11i - O0oo0OO0 - oO0o % OoO0O00
   if 21 - 21: II111iiii % I1ii11iIi11i . i1IIi - OoooooooOO
  try :
   ii = OoO000O [ 'totaltempfiles' ]
  except :
   ii = "0"
   if 100 - 100: Oo0Ooo + o0oOOo0O0Ooo - O0 % II111iiii . iii1I1I
  try :
   ooOo0OoOooo00 = OoO000O [ 'totalspacegained' ]
  except :
   ooOo0OoOooo00 = "0"
   if 96 - 96: I1ii11iIi11i % Oo0ooO0oo0oO % Ii1I - Oo0ooO0oo0oO % OoOoOO00 + I1ii11iIi11i
   if 3 - 3: O0
  try :
   Ooo0Oo0oo0 = OoO000O [ 'lastbuildcheck' ]
  except :
   Ooo0Oo0oo0 = "0"
   if 83 - 83: O0oo0OO0
   if 48 - 48: II111iiii * OOooOOo * O0oo0OO0
   if 50 - 50: O00oOoOoO0o0O % i1IIi
   if 21 - 21: OoooooooOO - iIii1I11I1II1
  if settingid == "storageinfolastpopup" :
   I111IIiii1Ii = value
   if 93 - 93: oO0o - o0oOOo0O0Ooo % OoOoOO00 . OoOoOO00 - Oo0ooO0oo0oO
   if 90 - 90: Oo0ooO0oo0oO + II111iiii * I1ii11iIi11i / Ii1I . o0oOOo0O0Ooo + o0oOOo0O0Ooo
  if settingid == "lastbuildcheck" :
   Ooo0Oo0oo0 = value
   if 40 - 40: Oo0ooO0oo0oO / OoOoOO00 % i11iIiiIii % I1ii11iIi11i / I1IiiI
   if 62 - 62: i1IIi - OoOoOO00
   if 62 - 62: i1IIi + Oo0Ooo % O00oOoOoO0o0O
   if 28 - 28: I1ii11iIi11i . i1IIi
  OoO000O = { 'deviceid' : oOooOOOoOo , 'automaintenance' : iIIiI1I1i , 'storageinfolastpopup' : I111IIiii1Ii , 'fullautofreq' : I11 , 'fullautocache' : Ii , 'fullautopackages' : iIII11Ii , 'fullautothumb' : IIIi1i , 'cacheinclude_genesis' : IIi1II , 'cacheinclude_navix' : OOo0iiIii1IIi , 'cacheinclude_youtube' : i111IIIiI , 'cacheinclude_ivue' : I1Ii1 , 'cacheinclude_salts' : oOOo00O0OOOo , 'cacheinclude_pulsar' : IiI , 'totaltempfiles' : ii , 'totalspacegained' : ooOo0OoOooo00 , 'lastbuildcheck' : Ooo0Oo0oo0 }
  if 10 - 10: OoO0O00 / Oo0Ooo
  if 15 - 15: iii1I1I . OoOoOO00 / iii1I1I * I11i - I1IiiI % I1ii11iIi11i
  if 57 - 57: O0 % OoOoOO00 % oO0o
  with open ( iii , 'w' ) as o0o0Ooo0 :
   json . dump ( OoO000O , o0o0Ooo0 )
   o0o0Ooo0 . close
   if 45 - 45: I1ii11iIi11i + II111iiii * i11iIiiIii
 except :
  if 13 - 13: OoooooooOO * oO0o - Ii1I / OOooOOo + I11i + O00oOoOoO0o0O
  pass
  if 39 - 39: iIii1I11I1II1 - OoooooooOO
  if 81 - 81: I1ii11iIi11i - O0 * OoooooooOO
def iiIiIo0Ooo0O00 ( ) :
 if 9 - 9: O0 . O00oOoOoO0o0O
 global II1i11I
 if 55 - 55: Oo0Ooo
 if 77 - 77: II111iiii
 if IiiiIi1iI1iI . isSelected ( ) :
  OO00o . setSelected ( False )
  OOOOoOO0O . setSelected ( False )
  ii11I . setSelected ( False )
  II1i11I = 1
 else :
  IiiiIi1iI1iI . setSelected ( True )
  if 47 - 47: O0oo0OO0
  if 95 - 95: OoO0O00 . i1IIi / i11iIiiIii
def iIi1IIiI ( ) :
 if 24 - 24: iii1I1I * II111iiii % iii1I1I % O00oOoOoO0o0O + OoooooooOO
 global II1i11I
 if 29 - 29: II111iiii - OoooooooOO - i11iIiiIii . o0oOOo0O0Ooo
 if OO00o . isSelected ( ) :
  IiiiIi1iI1iI . setSelected ( False )
  OOOOoOO0O . setSelected ( False )
  ii11I . setSelected ( False )
  II1i11I = 2
 else :
  OO00o . setSelected ( True )
  if 19 - 19: II111iiii
  if 72 - 72: OoooooooOO / I1IiiI + Ii1I / OoOoOO00 * Ii1I
def Ii1iIi111i1i1 ( ) :
 if 45 - 45: OoOoOO00 . o0oOOo0O0Ooo % OoOoOO00 * I1IiiI % I1IiiI
 global II1i11I
 if 63 - 63: O0oo0OO0
 if OOOOoOO0O . isSelected ( ) :
  IiiiIi1iI1iI . setSelected ( False )
  OO00o . setSelected ( False )
  ii11I . setSelected ( False )
  II1i11I = 3
 else :
  OOOOoOO0O . setSelected ( True )
  if 53 - 53: OoooooooOO - O00oOoOoO0o0O
  if 87 - 87: oO0o . I1IiiI
def i1iIIIiiiI ( ) :
 if 94 - 94: O0 - I11i - iIii1I11I1II1 % Oo0ooO0oo0oO / Ii1I % iii1I1I
 global II1i11I
 if 44 - 44: Oo0Ooo % iIii1I11I1II1
 if ii11I . isSelected ( ) :
  IiiiIi1iI1iI . setSelected ( False )
  OO00o . setSelected ( False )
  OOOOoOO0O . setSelected ( False )
  II1i11I = 4
 else :
  ii11I . setSelected ( True )
  if 90 - 90: II111iiii + OoooooooOO % OoooooooOO
  if 35 - 35: iii1I1I / I1ii11iIi11i * OoooooooOO . II111iiii / Oo0Ooo
  if 1 - 1: OoooooooOO + O00oOoOoO0o0O . i1IIi % I11i
  if 66 - 66: o0oOOo0O0Ooo + I1ii11iIi11i + I1IiiI - oO0o
  if 12 - 12: iii1I1I . O00oOoOoO0o0O . OoOoOO00 / O0
def OO0oOOo0o ( ) :
 if 50 - 50: iii1I1I . I1ii11iIi11i . OoO0O00 * I11i + II111iiii % i11iIiiIii
 if 8 - 8: Oo0ooO0oo0oO * O0
 if 73 - 73: o0oOOo0O0Ooo / oO0o / I11i / OoO0O00
 if III1ii . isSelected ( ) :
  i1I . setSelected ( False )
  iiI1I1IIi11i1 . setSelected ( False )
  i1II1iii1i . setSelected ( False )
  if 83 - 83: I1ii11iIi11i / O0oo0OO0 - i11iIiiIii . iIii1I11I1II1 + Oo0Ooo
  if 59 - 59: O0 % Oo0Ooo
  if 92 - 92: Ii1I % iii1I1I / I1ii11iIi11i % I1ii11iIi11i * I1IiiI
  Oo ( 'automaintenance' , 'monthly' )
  if 78 - 78: OoO0O00 % O00oOoOoO0o0O * i1IIi
  if 66 - 66: Ii1I . I1IiiI + o0oOOo0O0Ooo . iIii1I11I1II1
 else :
  if 51 - 51: I11i . Oo0Ooo
  III1ii . setSelected ( True )
  if 45 - 45: i1IIi - Oo0Ooo / O0 . I1ii11iIi11i
  if 5 - 5: o0oOOo0O0Ooo . iIii1I11I1II1 % iIii1I11I1II1
  if 56 - 56: OoooooooOO - I11i - i1IIi
def I1i1I ( ) :
 if 35 - 35: i11iIiiIii - I1IiiI
 if 99 - 99: OoO0O00 * i11iIiiIii . OoooooooOO % Oo0Ooo
 if 76 - 76: O0 . O0oo0OO0 * iii1I1I * OOooOOo . OoOoOO00 . i11iIiiIii
 if i1I . isSelected ( ) :
  III1ii . setSelected ( False )
  iiI1I1IIi11i1 . setSelected ( False )
  i1II1iii1i . setSelected ( False )
  if 21 - 21: o0oOOo0O0Ooo / OoOoOO00 / iIii1I11I1II1 % OOooOOo
  if 2 - 2: i11iIiiIii - II111iiii / oO0o % O0
  if 66 - 66: Oo0Ooo
  Oo ( 'automaintenance' , 'weekly' )
  if 28 - 28: O00oOoOoO0o0O - O00oOoOoO0o0O . i1IIi - Oo0ooO0oo0oO + I1IiiI . O00oOoOoO0o0O
  if 54 - 54: OoOoOO00 - O0oo0OO0
  if 3 - 3: I1IiiI - Oo0Ooo
 else :
  i1I . setSelected ( True )
  if 16 - 16: oO0o + Oo0ooO0oo0oO / o0oOOo0O0Ooo
  if 82 - 82: O00oOoOoO0o0O * i11iIiiIii % II111iiii - OoooooooOO
  if 90 - 90: Oo0Ooo . oO0o * i1IIi - i1IIi
def IiIiiI11i1Ii ( ) :
 if 100 - 100: O0oo0OO0 . I1IiiI * O0oo0OO0 - I1IiiI . I11i * Ii1I
 if 89 - 89: OoO0O00 + O00oOoOoO0o0O * O0oo0OO0
 if 28 - 28: OoooooooOO . oO0o % I1ii11iIi11i / i1IIi / OOooOOo
 if iiI1I1IIi11i1 . isSelected ( ) :
  III1ii . setSelected ( False )
  i1I . setSelected ( False )
  i1II1iii1i . setSelected ( False )
  if 36 - 36: o0oOOo0O0Ooo + I11i - O00oOoOoO0o0O + iIii1I11I1II1 + OoooooooOO
  if 4 - 4: II111iiii . I11i + Ii1I * O0oo0OO0 . Oo0ooO0oo0oO
  Oo ( 'automaintenance' , 'daily' )
  if 87 - 87: OoOoOO00 / OoO0O00 / i11iIiiIii
  if 74 - 74: oO0o / I1ii11iIi11i % o0oOOo0O0Ooo
  if 88 - 88: OoOoOO00 - i11iIiiIii % o0oOOo0O0Ooo * I11i + I1ii11iIi11i
  if 52 - 52: II111iiii . I1IiiI + OoOoOO00 % OoO0O00
 else :
  iiI1I1IIi11i1 . setSelected ( True )
  if 62 - 62: o0oOOo0O0Ooo
  if 15 - 15: I11i + Ii1I . OOooOOo * OoO0O00 . OoOoOO00
  if 18 - 18: i1IIi % II111iiii + O0oo0OO0 % Ii1I
def oOO ( ) :
 if 53 - 53: o0oOOo0O0Ooo % Oo0Ooo * Oo0Ooo
 global II1i11I
 if 77 - 77: OOooOOo - O00oOoOoO0o0O . I11i / I1IiiI + OoO0O00 % oO0o
 if i1II1iii1i . isSelected ( ) :
  III1ii . setSelected ( False )
  i1I . setSelected ( False )
  iiI1I1IIi11i1 . setSelected ( False )
  if 12 - 12: i1IIi
  if 63 - 63: O00oOoOoO0o0O + o0oOOo0O0Ooo
  Oo ( 'automaintenance' , 'everytime' )
  if 1 - 1: I1ii11iIi11i / OoO0O00 + oO0o . o0oOOo0O0Ooo / I1ii11iIi11i - iii1I1I
  if 5 - 5: OOooOOo
  if 4 - 4: iii1I1I % O0oo0OO0 / OoO0O00 . OOooOOo / OOooOOo - I1ii11iIi11i
  if 79 - 79: I1ii11iIi11i + O0oo0OO0
  if 10 - 10: Oo0Ooo + O0
 else :
  i1II1iii1i . setSelected ( True )
  if 43 - 43: iIii1I11I1II1 / II111iiii % o0oOOo0O0Ooo - OOooOOo
  if 62 - 62: I11i
  if 63 - 63: OOooOOo + Oo0ooO0oo0oO * oO0o / o0oOOo0O0Ooo / Oo0Ooo * iIii1I11I1II1
def OOoO00ooO ( ) :
 if 12 - 12: Oo0ooO0oo0oO % I1IiiI + oO0o - i1IIi . Ii1I / I1IiiI
 if 51 - 51: OOooOOo . I1IiiI
 if 73 - 73: OoooooooOO . I1IiiI / O0oo0OO0 % Ii1I
 if o0OO0O00o . isSelected ( ) :
  III1ii . setEnabled ( True )
  i1I . setEnabled ( True )
  iiI1I1IIi11i1 . setEnabled ( True )
  i1II1iii1i . setEnabled ( True )
  oo000O0o . setEnabled ( True )
  if 4 - 4: iii1I1I - Oo0Ooo - O00oOoOoO0o0O - I11i % i11iIiiIii / OoO0O00
 else :
  III1ii . setEnabled ( False )
  i1I . setEnabled ( False )
  iiI1I1IIi11i1 . setEnabled ( False )
  i1II1iii1i . setEnabled ( False )
  oo000O0o . setEnabled ( False )
  if 50 - 50: Oo0ooO0oo0oO + i1IIi
  if 31 - 31: Ii1I
  Oo ( 'automaintenance' , 'never' )
  if 78 - 78: i11iIiiIii + o0oOOo0O0Ooo + O0oo0OO0 / o0oOOo0O0Ooo % iIii1I11I1II1 % O00oOoOoO0o0O
  if 83 - 83: iIii1I11I1II1 % OoOoOO00 % o0oOOo0O0Ooo % O0oo0OO0 . I1ii11iIi11i % O0
  if 47 - 47: o0oOOo0O0Ooo
def oo0ooooO ( ) :
 if 12 - 12: II111iiii
 if 2 - 2: i1IIi - I1IiiI + I11i . II111iiii
 if 25 - 25: oO0o
 if iI1 . isSelected ( ) :
  if 11 - 11: OoO0O00
  if 18 - 18: iii1I1I - oO0o % iii1I1I / I11i
  if O0ooO0Oo00o == "admin" or O0ooO0Oo00o == "staff" or O0ooO0Oo00o == "donator" or O0ooO0Oo00o == "uploader" :
   if 68 - 68: Ii1I * iIii1I11I1II1 + O0oo0OO0 % OoOoOO00
   IIii1I1I1I . setEnabled ( True )
   OoOOOo0 . setEnabled ( True )
   o00IIIIII1II1I . setEnabled ( True )
   oOoOo0OOOOO . setEnabled ( True )
   ooo00OOOo000O . setEnabled ( True )
   iII . setEnabled ( True )
   ooO0o0O0Oo . setEnabled ( True )
   IiiIIi . setEnabled ( True )
   if 71 - 71: O00oOoOoO0o0O + i1IIi * Oo0Ooo % Oo0Ooo / Oo0Ooo
  else :
   if 55 - 55: OoooooooOO + O0oo0OO0 + OoooooooOO * Oo0ooO0oo0oO
   iI1 . setSelected ( False )
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( ooO ( "areswizard" ) , ooO ( "donate" ) , "" , "" )
   if 68 - 68: O0
   if 2 - 2: OoO0O00 + O0 * OoO0O00 - Ii1I + oO0o
   if 43 - 43: I1ii11iIi11i - OoOoOO00
   if 36 - 36: I1ii11iIi11i - iii1I1I
 else :
  IIii1I1I1I . setEnabled ( False )
  OoOOOo0 . setEnabled ( False )
  o00IIIIII1II1I . setEnabled ( False )
  oOoOo0OOOOO . setEnabled ( False )
  ooo00OOOo000O . setEnabled ( False )
  iII . setEnabled ( False )
  ooO0o0O0Oo . setEnabled ( False )
  IiiIIi . setEnabled ( False )
  Oo ( 'fullautocache' , '0' )
  Oo ( 'fullautopackages' , '0' )
  Oo ( 'fullautothumb' , '0' )
  Oo ( 'fullautothumb' , '0' )
  Oo ( 'fullautofreq' , 'never' )
  if 24 - 24: o0oOOo0O0Ooo + Oo0ooO0oo0oO + I11i - iIii1I11I1II1
  if 49 - 49: I11i . Oo0ooO0oo0oO * OoOoOO00 % O00oOoOoO0o0O . O0
  if 48 - 48: O0 * Ii1I - O0 / Ii1I + OoOoOO00
  if 52 - 52: OoO0O00 % Ii1I * II111iiii
  if 4 - 4: I11i % O0 - OoooooooOO + Oo0ooO0oo0oO . oO0o % II111iiii
  if 9 - 9: II111iiii * II111iiii . i11iIiiIii * iIii1I11I1II1
  if 18 - 18: OoO0O00 . II111iiii % OoOoOO00 % Ii1I
  if 87 - 87: iIii1I11I1II1 . OoooooooOO * OoOoOO00
  if 100 - 100: OoO0O00 / i1IIi - I1IiiI % Ii1I - iIii1I11I1II1
  if 17 - 17: I11i / o0oOOo0O0Ooo % Oo0Ooo
  if 71 - 71: O00oOoOoO0o0O . O0oo0OO0 . OoO0O00
  if 68 - 68: i11iIiiIii % oO0o * OoO0O00 * O00oOoOoO0o0O * II111iiii + O0
  if 66 - 66: I11i % I1ii11iIi11i % OoooooooOO
  if 34 - 34: o0oOOo0O0Ooo / iii1I1I % O0 . OoO0O00 . i1IIi
  if 29 - 29: O0 . O0oo0OO0
  if 66 - 66: oO0o * iIii1I11I1II1 % iIii1I11I1II1 * O00oOoOoO0o0O - Oo0ooO0oo0oO - O00oOoOoO0o0O
  if 70 - 70: O0oo0OO0 + oO0o
  if 93 - 93: O0oo0OO0 + Ii1I
  if 33 - 33: O0
  if 78 - 78: O0 / II111iiii * OoO0O00
  if 50 - 50: OoooooooOO - iIii1I11I1II1 + i1IIi % O0oo0OO0 - iIii1I11I1II1 % O0
def o0oO0Oo ( ) :
 if 71 - 71: o0oOOo0O0Ooo - OoOoOO00 * iii1I1I + Ii1I % i11iIiiIii - Oo0ooO0oo0oO
 if IIii1I1I1I . isSelected ( ) :
  Oo ( 'fullautocache' , 'yes' )
 else :
  Oo ( 'fullautocache' , '0' )
  if 82 - 82: O0oo0OO0 - OOooOOo + OoO0O00
  if 64 - 64: o0oOOo0O0Ooo . O0 * Ii1I + OoooooooOO - Oo0Ooo . OoooooooOO
  if 70 - 70: Oo0Ooo - oO0o . iIii1I11I1II1 % I11i / OoOoOO00 - O0
def o0O0oo0o ( ) :
 if 12 - 12: OoOoOO00 % O00oOoOoO0o0O % I1ii11iIi11i . i11iIiiIii * iIii1I11I1II1
 if o00IIIIII1II1I . isSelected ( ) :
  Oo ( 'fullautopackages' , 'yes' )
 else :
  Oo ( 'fullautopackages' , '0' )
  if 66 - 66: i11iIiiIii * iIii1I11I1II1 % OoooooooOO
  if 5 - 5: OoOoOO00 % OoooooooOO
  if 60 - 60: OoOoOO00 . i1IIi % OoO0O00 % Oo0ooO0oo0oO % OOooOOo
def Ii111IIi ( ) :
 if 15 - 15: I1ii11iIi11i % O0oo0OO0 + i11iIiiIii
 if ooo00OOOo000O . isSelected ( ) :
  Oo ( 'fullautothumb' , 'yes' )
 else :
  Oo ( 'fullautothumb' , '0' )
  if 10 - 10: Ii1I - OoOoOO00 . OoooooooOO . OOooOOo . OoO0O00 * iii1I1I
  if 78 - 78: oO0o / OoO0O00 - oO0o * OoooooooOO . OoOoOO00
  if 96 - 96: I1IiiI % i1IIi . o0oOOo0O0Ooo . O0
def Ii1Iii11 ( ) :
 if 97 - 97: OOooOOo / oO0o . II111iiii
 if iII . isSelected ( ) :
  oOoOo0OOOOO . setSelected ( False )
  OoOOOo0 . setSelected ( False )
  if 44 - 44: Ii1I % I11i . O0oo0OO0
  Oo ( 'fullautofreq' , 'week' )
  if 18 - 18: iIii1I11I1II1 + I11i * I1IiiI - OOooOOo / I1IiiI
 else :
  iII . setSelected ( True )
  if 78 - 78: I11i . O00oOoOoO0o0O
  if 38 - 38: OoOoOO00 + O00oOoOoO0o0O
  if 15 - 15: Oo0Ooo + I11i . Oo0ooO0oo0oO - iIii1I11I1II1 / O0 % iIii1I11I1II1
def oO0O ( ) :
 if 79 - 79: OoooooooOO - O00oOoOoO0o0O * O00oOoOoO0o0O . OoOoOO00
 if OoOOOo0 . isSelected ( ) :
  oOoOo0OOOOO . setSelected ( False )
  iII . setSelected ( False )
  if 100 - 100: II111iiii * I11i % I1IiiI / I1ii11iIi11i
  Oo ( 'fullautofreq' , 'month' )
  if 90 - 90: I1ii11iIi11i . Oo0ooO0oo0oO . OoOoOO00 . Ii1I
 else :
  OoOOOo0 . setSelected ( True )
  if 4 - 4: Ii1I + OoOoOO00 % I1ii11iIi11i / i11iIiiIii
  if 74 - 74: II111iiii . O0 - I1IiiI + O00oOoOoO0o0O % i11iIiiIii % OoOoOO00
  if 78 - 78: Ii1I + OoOoOO00 + O00oOoOoO0o0O - O00oOoOoO0o0O . i11iIiiIii / OoO0O00
def I11i11i1 ( ) :
 if 68 - 68: Oo0Ooo . Oo0Ooo - I1ii11iIi11i / I11i . Oo0ooO0oo0oO / i1IIi
 if oOoOo0OOOOO . isSelected ( ) :
  OoOOOo0 . setSelected ( False )
  iII . setSelected ( False )
  if 12 - 12: I1ii11iIi11i * i1IIi * I11i
  Oo ( 'fullautofreq' , 'quarter' )
  if 23 - 23: OOooOOo / O0 / I1IiiI
 else :
  oOoOo0OOOOO . setSelected ( True )
  if 49 - 49: I11i . o0oOOo0O0Ooo % oO0o / Ii1I
  if 95 - 95: O0 * OoOoOO00 * O00oOoOoO0o0O . Oo0ooO0oo0oO / iIii1I11I1II1
  if 28 - 28: O00oOoOoO0o0O + oO0o - Oo0ooO0oo0oO / iIii1I11I1II1 - I1IiiI
  if 45 - 45: O0 / i1IIi * oO0o * OoO0O00
  if 35 - 35: I1ii11iIi11i / iii1I1I % I1IiiI + iIii1I11I1II1
def oO00o ( ) :
 if 36 - 36: O0oo0OO0 . II111iiii % Oo0ooO0oo0oO
 xbmc . executebuiltin ( "ReloadSkin()" )
 if 84 - 84: OoooooooOO - i11iIiiIii / iIii1I11I1II1 / OoooooooOO / I1ii11iIi11i
 if 4 - 4: Oo0Ooo + o0oOOo0O0Ooo
 if 17 - 17: OoO0O00 * OoOoOO00
 if 15 - 15: i11iIiiIii / Oo0ooO0oo0oO % I1IiiI
 if 71 - 71: O0oo0OO0 / I1ii11iIi11i * iIii1I11I1II1
def O000oOo ( ) :
 if 41 - 41: O0 + oO0o . i1IIi - II111iiii * o0oOOo0O0Ooo . OoO0O00
 oooO00Oo . setVisible ( False )
 ooO00o . setVisible ( False )
 o0o00O0oOooO0 . setVisible ( False )
 o0oO0OO00ooOO . setVisible ( False )
 IiIIiii11II1 . setVisible ( False )
 iiii1i1II1 . setVisible ( False )
 ooOO0ooo0o . setVisible ( False )
 i1IiI1I . setVisible ( False )
 o0OOo00oO0oOO . setVisible ( False )
 iiiii1I1III1 . setVisible ( False )
 i1oO00O . setVisible ( False )
 oo0o0ooooo . setVisible ( False )
 O0o0O . setVisible ( False )
 ii111 . setVisible ( False )
 ooOo000OoO0o . setVisible ( False )
 ooooo0O0 . setVisible ( False )
 i1III1iI . setVisible ( False )
 ii1i . setVisible ( False )
 i1IiiiiIi1I . setVisible ( False )
 ooo0O0o0OoOO . setVisible ( False )
 iIi11i . setVisible ( False )
 o0o00o0Oo . setVisible ( False )
 OOOOOo . setVisible ( False )
 oOOoo . setVisible ( False )
 if 6 - 6: OOooOOo
 ooOoo000oO . setVisible ( False )
 i1I1iIoOOoO . setVisible ( False )
 oOo0Oo0O0O . setVisible ( False )
 III1II1i . setVisible ( False )
 iI1i1IiIIIIi . setVisible ( False )
 OooOooO0O0o0 . setVisible ( False )
 OOO0o0 . setVisible ( False )
 IIIIII111Ii . setVisible ( False )
 Ii1i1i . setVisible ( False )
 iIi1Ii1IIiI . setVisible ( False )
 ooo00Oo00O0 . setVisible ( False )
 OOOOOOoo0oO . setVisible ( False )
 IiIiIIiii1I . setVisible ( False )
 ooooo0Oo0 . setVisible ( False )
 o0 . setVisible ( False )
 I1IIIi11ii11 . setVisible ( False )
 O0o0oo0oOO0oO . setVisible ( False )
 iIiIII1iI1111 . setVisible ( False )
 Ii1I1I111iI . setVisible ( False )
 I1i11I . setVisible ( False )
 ooo0oo00O00Oo . setVisible ( False )
 OOO000000OOO0 . setVisible ( False )
 oo . setVisible ( False )
 OoOOoooO000 . setVisible ( False )
 OoO0o000oOo . setVisible ( False )
 Oo00OO00o0oO . setVisible ( False )
 iI1I1I1i1i . setVisible ( False )
 IIii1I1I1I . setVisible ( False )
 ooO0o0O0Oo . setVisible ( False )
 IiiIIi . setVisible ( False )
 IIii1I1I1I . setVisible ( False )
 OoOOOo0 . setVisible ( False )
 o00IIIIII1II1I . setVisible ( False )
 oOoOo0OOOOO . setVisible ( False )
 ooo00OOOo000O . setVisible ( False )
 iII . setVisible ( False )
 iI1 . setVisible ( False )
 if 87 - 87: OoOoOO00 / O00oOoOoO0o0O . Oo0ooO0oo0oO - OOooOOo / OoO0O00
 IIi1II . setVisible ( False )
 OOo0iiIii1IIi . setVisible ( False )
 I1Ii1 . setVisible ( False )
 i111IIIiI . setVisible ( False )
 IiI . setVisible ( False )
 oOOo00O0OOOo . setVisible ( False )
 if 41 - 41: II111iiii
 if 27 - 27: Oo0Ooo * OoOoOO00 % iIii1I11I1II1 . I1IiiI
 O00ooooo00 . setVisible ( False )
 O0ooOoOO0 . setVisible ( False )
 OO00oIii . setVisible ( False )
 I11i1I1ii1i1 . setVisible ( False )
 oO0ooooo0O00 . setVisible ( False )
 iII11ii1ii . setVisible ( False )
 oOO0OOOo000o . setVisible ( False )
 OO00oo . setVisible ( False )
 O0Oo0O0 . setVisible ( False )
 o0OO0O00o . setVisible ( False )
 III1ii . setVisible ( False )
 i1I . setVisible ( False )
 iiI1I1IIi11i1 . setVisible ( False )
 i1II1iii1i . setVisible ( False )
 oo000O0o . setVisible ( False )
 o0OO0O00o . setVisible ( False )
 I1IiiIiii1 . setVisible ( False )
 i11i . setVisible ( False )
 if 86 - 86: Ii1I
 IiII1i1iI . setVisible ( False )
 O0OOO00 . setVisible ( False )
 ooOOo0o . setVisible ( False )
 IiiiIi1iI1iI . setVisible ( False )
 OO00o . setVisible ( False )
 OOOOoOO0O . setVisible ( False )
 ii11I . setVisible ( False )
 if 50 - 50: II111iiii - O0oo0OO0 + iIii1I11I1II1 + iIii1I11I1II1
 OoooooOo . setVisible ( False )
 OooOo . setVisible ( False )
 oOo0 . setVisible ( False )
 I1Ii11i . setVisible ( False )
 I1iIiiiI1 . setVisible ( False )
 OOO0O00Oo . setVisible ( False )
 ii1oOOO0ooOO . setVisible ( False )
 i11 . setVisible ( False )
 IiI1iiI11 . setVisible ( False )
 OOoOOOO00 . setVisible ( False )
 if 49 - 49: OoO0O00 - O0 / OoO0O00 * OoOoOO00 + O0oo0OO0
 Iiii1I . setVisible ( False )
 Ooo000000 . setVisible ( False )
 if 80 - 80: II111iiii - OOooOOo % OoooooooOO . iIii1I11I1II1 - Oo0ooO0oo0oO + I1IiiI
 i1i1iiIIiiiII . setVisible ( False )
 Ii1I1 . setVisible ( False )
 OO0ooO0 . setVisible ( False )
 OoOooOO0oOOo0O . setVisible ( False )
 I1II . setVisible ( False )
 iIIi1Ii1III . setVisible ( False )
 if 86 - 86: i11iIiiIii + i11iIiiIii . O0oo0OO0 % I1IiiI . Oo0ooO0oo0oO
 iII1iI1IIiI . setVisible ( False )
 O00oo . setVisible ( False )
 OOoO0O000O . setVisible ( False )
 iI . setVisible ( False )
 O0o . setVisible ( False )
 I1ii1Ii1OoO . setVisible ( False )
 oO . setVisible ( False )
 iI111I1III . setVisible ( False )
 oO . setVisible ( False )
 if 36 - 36: I11i % OOooOOo
 if 72 - 72: I1IiiI / iii1I1I - O0 + I11i
 if 83 - 83: O0
 oOOOOOo . setVisible ( False )
 i1I11ii . setVisible ( False )
 o0ooO00O0O . setVisible ( False )
 iiiI1iI1 . setVisible ( False )
 I1oOoO0OOO00O . setVisible ( False )
 OOOOO0o0OOo . setVisible ( False )
 I11I11I11IiIi . setVisible ( False )
 OOii1ii1i11I1I . setVisible ( False )
 iiiI1iI1 . setVisible ( False )
 I1oOoO0OOO00O . setVisible ( False )
 iiII1iiiiiii . setVisible ( False )
 iiIiii . setVisible ( False )
 iiI1ii . setVisible ( False )
 O0OooOO . setVisible ( False )
 i1i1 . setVisible ( False )
 o0oOoOo0 . setVisible ( False )
 III1IiI1i1i . setVisible ( False )
 o0OOOOOo0 . setVisible ( False )
 oooOoO . setVisible ( False )
 O0Oo0 . setVisible ( False )
 iIIIi1IiI11I1 . setVisible ( False )
 O0Ooo000 . setVisible ( False )
 IIi11iI1Iii . setVisible ( False )
 IiIi1i . setVisible ( False )
 i11ii . setVisible ( False )
 oOOOOO0Ooooo . setVisible ( False )
 o0o000Oo . setVisible ( False )
 oO0o0O0o0OO00 . setVisible ( False )
 iIiiiIi . setVisible ( False )
 OooooOo . setVisible ( False )
 IIIiiiIiI . setVisible ( False )
 OO0OOoooo0o . setVisible ( False )
 IiIi1Ii . setVisible ( False )
 iiIIiI11II1 . setVisible ( False )
 oooOo . setVisible ( False )
 if 79 - 79: oO0o - II111iiii
 if 43 - 43: i1IIi + O0 % OoO0O00 / Ii1I * I1IiiI
 if 89 - 89: I1IiiI . Oo0Ooo + I1ii11iIi11i . O0 % o0oOOo0O0Ooo
 Ooo00O0 . setVisible ( False )
 OoO0OOoO0 . setVisible ( False )
 iiI11i . setVisible ( False )
 o0Oo . setVisible ( False )
 iiI1i . setVisible ( False )
 i11I . setVisible ( False )
 o0oO0o0oo0O0 . setVisible ( False )
 O0oo00oOOO0o . setVisible ( False )
 II1i . setVisible ( False )
 I111iiIIiI1I . setVisible ( False )
 ooO00Oo . setVisible ( False )
 Iiii1Ii1I . setVisible ( False )
 oooOOOOO . setVisible ( False )
 i1iIii . setVisible ( False )
 o0O0ooooooo00 . setVisible ( False )
 I1111ii11IIII . setVisible ( False )
 IiIi1II111I . setVisible ( False )
 o00o . setVisible ( False )
 IIi1i1 . setVisible ( False )
 o0O0Ooo . setVisible ( False )
 O0oO00oOOooO . setVisible ( False )
 IiIIii1iiI . setVisible ( False )
 ii1IiiII . setVisible ( False )
 IiiI1II1II1i . setVisible ( False )
 iIO0OO0o0O00oO . setVisible ( False )
 o00O . setVisible ( False )
 oO0o0oOo . setVisible ( False )
 OoO0O0oo0o . setVisible ( False )
 iIi11I11 . setVisible ( False )
 i1ioO . setVisible ( False )
 I11iiI . setVisible ( False )
 i1iIii1i111 . setVisible ( False )
 OOooo000OooO . setVisible ( False )
 o0o0 . setVisible ( False )
 OoOo . setVisible ( False )
 IiI1 . setVisible ( False )
 iiIiII . setVisible ( False )
 IIiiiI1iI . setVisible ( False )
 O0O0 . setVisible ( False )
 O0oO0o0OOOOOO . setVisible ( False )
 IiI1i11IiIiii . setVisible ( False )
 I11iiI1I1 . setVisible ( False )
 o0i1Ii11II . setVisible ( False )
 i1iiiiI11ii . setVisible ( False )
 if 73 - 73: i1IIi % OoooooooOO
 iIi1i1I . setVisible ( False )
 i1111iI1 . setVisible ( False )
 OOoO0O000O . setVisible ( False )
 I1ii1Ii1OoO . setVisible ( False )
 if 76 - 76: OoooooooOO - II111iiii % OoOoOO00 + oO0o + iIii1I11I1II1 . OoOoOO00
 if 16 - 16: o0oOOo0O0Ooo . I11i
 if 50 - 50: Oo0ooO0oo0oO * OoOoOO00 + I1ii11iIi11i - i11iIiiIii + Oo0Ooo * I1ii11iIi11i
 if 20 - 20: O0oo0OO0 / o0oOOo0O0Ooo % OoOoOO00
 if 69 - 69: O0oo0OO0 - i1IIi % iii1I1I . OOooOOo - OOooOOo
 if 65 - 65: OOooOOo + II111iiii
def Oo0O0OO0OoO0 ( start_path ) :
 if 26 - 26: OOooOOo * Oo0Ooo
 global ii1I1IIii11
 global O0o0oO
 if 31 - 31: I11i * oO0o . Ii1I
 if 35 - 35: I11i
 O0o0oO = 0
 ii1I1IIii11 = 0
 for o00oo , O0oO0oo0O , oooOOO0ooOoOOO in os . walk ( start_path ) :
  for o0o0Ooo0 in oooOOO0ooOoOOO :
   if ( o0o0Ooo0 == "xbmc.log" or o0o0Ooo0 == "xbmc.old.log" or o0o0Ooo0 == "kodi.log" or o0o0Ooo0 == "kodi.old.log" ) : continue
   o0IiIiI111IIII1 = os . path . join ( o00oo , o0o0Ooo0 )
   O0o0oO += os . path . getsize ( o0IiIiI111IIII1 )
   ii1I1IIii11 = ii1I1IIii11 + 1
 return O0o0oO
 if 100 - 100: OOooOOo * O0 + I1IiiI + OoOoOO00 . OOooOOo
 if 73 - 73: oO0o . II111iiii * iii1I1I % oO0o + OoOoOO00 - OoO0O00
def I1iIi1iIIIIiI ( ) :
 if 94 - 94: O00oOoOoO0o0O * I11i * OoooooooOO / o0oOOo0O0Ooo . O00oOoOoO0o0O - o0oOOo0O0Ooo
 global ii1I1IIii11
 global O0o0oO
 if 13 - 13: OOooOOo / O00oOoOoO0o0O - OoO0O00 / OOooOOo . i1IIi
 if 22 - 22: O0 - I11i + O0oo0OO0 . Ii1I * i1IIi
 O0o0oO = 0
 ii1I1IIii11 = 0
 if 26 - 26: iIii1I11I1II1 * o0oOOo0O0Ooo . I11i
 ii1I1IIii11 = len ( [ o0o0Ooo0 for o0o0Ooo0 in os . listdir ( I1IiiiiI )
 if os . path . isfile ( os . path . join ( I1IiiiiI , o0o0Ooo0 ) ) and o0o0Ooo0 <> "xbmc.log" and o0o0Ooo0 <> "xbmc.old.log" and o0o0Ooo0 <> "kodi.log" and o0o0Ooo0 <> "kodi.old.log" ] )
 if 10 - 10: O0oo0OO0 * oO0o % Oo0Ooo - I11i % Oo0Ooo
 O0o0oO = os . path . getsize ( I1IiiiiI )
 for O0oooo000oO0 in os . listdir ( I1IiiiiI ) :
  OoOoO00OOoOOOo0 = os . path . join ( I1IiiiiI , O0oooo000oO0 )
  if os . path . isfile ( OoOoO00OOoOOOo0 ) :
   O0o0oO += os . path . getsize ( OoOoO00OOoOOOo0 )
   if 84 - 84: oO0o + OOooOOo . iii1I1I
   if 71 - 71: Oo0ooO0oo0oO / Oo0ooO0oo0oO . OoOoOO00 % iii1I1I
   if 50 - 50: Oo0ooO0oo0oO + iii1I1I / I11i / I11i % O0
 return O0o0oO
 if 87 - 87: Oo0Ooo + Oo0ooO0oo0oO
 if 66 - 66: o0oOOo0O0Ooo * OOooOOo + Ii1I * o0oOOo0O0Ooo + OOooOOo / OoooooooOO
 if 86 - 86: Ii1I . iii1I1I - iii1I1I
 if 71 - 71: iIii1I11I1II1 . II111iiii % iIii1I11I1II1
def Ii1I11i1I1 ( ) :
 if 93 - 93: Oo0ooO0oo0oO
 global IIIIiIiIi1
 global I11iiiiI1i
 global ii1I1IIii11
 global O0o0oO
 if 18 - 18: Oo0ooO0oo0oO
 IIIIiIiIi1 = 0
 I11iiiiI1i = 0
 ii1I1IIii11 = 0
 O0o0oO = 0
 if 66 - 66: oO0o * i11iIiiIii + OoOoOO00 / OOooOOo
 Oo0O0OO0OoO0 ( IiII )
 IIIIiIiIi1 = IIIIiIiIi1 + ii1I1IIii11
 I11iiiiI1i = I11iiiiI1i + ( O0o0oO / 1024 / 1024 )
 if 96 - 96: OOooOOo + OOooOOo % O00oOoOoO0o0O % OOooOOo
 ii1I1IIii11 = 0
 O0o0oO = 0
 if 28 - 28: iIii1I11I1II1 + OoOoOO00 . o0oOOo0O0Ooo % i11iIiiIii
 Oo0O0OO0OoO0 ( o0O )
 IIIIiIiIi1 = IIIIiIiIi1 + ii1I1IIii11
 I11iiiiI1i = I11iiiiI1i + ( O0o0oO / 1024 / 1024 )
 if 58 - 58: I11i / OoooooooOO % oO0o + OoO0O00
 ii1I1IIii11 = 0
 O0o0oO = 0
 if 58 - 58: O0
 I1iIi1iIIIIiI ( )
 IIIIiIiIi1 = IIIIiIiIi1 + ii1I1IIii11
 I11iiiiI1i = I11iiiiI1i + ( O0o0oO / 1024 / 1024 )
 if 91 - 91: iii1I1I / I1ii11iIi11i . iii1I1I - o0oOOo0O0Ooo + I1ii11iIi11i
 if 72 - 72: Ii1I . O00oOoOoO0o0O * I1ii11iIi11i / I1ii11iIi11i / iii1I1I
 if 13 - 13: i1IIi
 if 17 - 17: i11iIiiIii * o0oOOo0O0Ooo * o0oOOo0O0Ooo + OoO0O00
 try :
  if 95 - 95: I1IiiI
  if 95 - 95: OOooOOo % I1ii11iIi11i + o0oOOo0O0Ooo % Oo0ooO0oo0oO
  with open ( iii , 'r' , 0 ) as o0o0Ooo0 :
   OoO000O = json . load ( o0o0Ooo0 )
   if 36 - 36: O0 / i1IIi % II111iiii / iii1I1I
   OOoOi1IiiI = OoO000O [ 'cacheinclude_genesis' ]
   O0OOO0 = OoO000O [ 'cacheinclude_navix' ]
   o0OIi = OoO000O [ 'cacheinclude_youtube' ]
   IIi1iiI = OoO000O [ 'cacheinclude_ivue' ]
   o0ooOO00OO0o0O = OoO000O [ 'cacheinclude_salts' ]
   III1IiiIiiI1i = OoO000O [ 'cacheinclude_pulsar' ]
   if 73 - 73: i1IIi % I11i - Oo0ooO0oo0oO / o0oOOo0O0Ooo % OoO0O00 / O0oo0OO0
   if 89 - 89: O00oOoOoO0o0O / OoO0O00 * O0 / I11i . O0oo0OO0
  if OOoOi1IiiI == "yes" :
   if 17 - 17: I11i
   o0OO0OO000OO = translate ( 'special://home/userdata/addon_data/plugin.video.genesis' )
   if 92 - 92: I11i % i1IIi % Oo0ooO0oo0oO % O00oOoOoO0o0O % o0oOOo0O0Ooo
   ii1I1IIii11 = 0
   O0o0oO = 0
   if 61 - 61: OOooOOo * o0oOOo0O0Ooo * O0 / iii1I1I
   OOOo0oO = os . path . join ( xbmc . translatePath ( o0OO0OO000OO ) , 'cache.db' )
   ooo0O = os . path . join ( xbmc . translatePath ( o0OO0OO000OO ) , 'sources.db' )
   if 22 - 22: oO0o * iii1I1I
   iIIIiIi1i = os . path . join ( xbmc . translatePath ( o0OO0OO000OO ) , 'meta.db' )
   iiIiiIi = os . path . join ( xbmc . translatePath ( o0OO0OO000OO ) , 'moviefarsi.db' )
   if 66 - 66: II111iiii + OoO0O00
   if 19 - 19: OoO0O00 . OoooooooOO * OoO0O00 + O00oOoOoO0o0O + OoooooooOO
   if 19 - 19: Oo0Ooo
   OoOoO00o00 = os . path . getsize ( OOOo0oO )
   OOooooO0o0O0 = os . path . getsize ( ooo0O )
   if 74 - 74: OoOoOO00 / i1IIi % OoooooooOO
   o00o0o000Oo = os . path . getsize ( iIIIiIi1i )
   Oooo00OOo = os . path . getsize ( iiIiiIi )
   if 6 - 6: oO0o / I1IiiI / OoOoOO00
   if 51 - 51: II111iiii / Oo0Ooo / I1IiiI + i11iIiiIii
   if OoOoO00o00 > 0 :
    IIIIiIiIi1 = IIIIiIiIi1 + 1
    if 5 - 5: I11i
    if 22 - 22: iIii1I11I1II1 * O0oo0OO0 / Oo0Ooo
   if OOooooO0o0O0 > 0 :
    IIIIiIiIi1 = IIIIiIiIi1 + 1
    if 31 - 31: i11iIiiIii
    if 56 - 56: I11i / Ii1I + Oo0Ooo - i1IIi - O00oOoOoO0o0O + iIii1I11I1II1
    if 75 - 75: I1ii11iIi11i
    if 92 - 92: I11i / O0 * I1IiiI - I11i
    if 99 - 99: i11iIiiIii % OoooooooOO
   if o00o0o000Oo > 0 :
    IIIIiIiIi1 = IIIIiIiIi1 + 1
    if 56 - 56: O00oOoOoO0o0O * O0oo0OO0
   if Oooo00OOo > 0 :
    IIIIiIiIi1 = IIIIiIiIi1 + 1
    if 98 - 98: I11i + O0 * O0oo0OO0 + i11iIiiIii - OOooOOo - iIii1I11I1II1
    if 5 - 5: OOooOOo % Oo0Ooo % O00oOoOoO0o0O % Oo0ooO0oo0oO
    if 17 - 17: Ii1I + II111iiii + OoooooooOO / OOooOOo / O00oOoOoO0o0O
    if 80 - 80: o0oOOo0O0Ooo % i1IIi / I11i
    if 56 - 56: i1IIi . i11iIiiIii
   I11iiiiI1i = I11iiiiI1i + ( OoOoO00o00 / 1024 / 1024 ) + ( OOooooO0o0O0 / 1024 / 1024 ) + ( o00o0o000Oo / 1024 / 1024 ) + ( Oooo00OOo / 1024 / 1024 )
   if 15 - 15: II111iiii * oO0o % iii1I1I / i11iIiiIii - oO0o + Oo0Ooo
   if 9 - 9: I11i - oO0o + O0 / iii1I1I % i1IIi
   if 97 - 97: o0oOOo0O0Ooo * Oo0ooO0oo0oO
   if 78 - 78: I11i . OOooOOo + oO0o * iii1I1I - i1IIi
  if O0OOO0 == "yes" :
   if 27 - 27: Ii1I % i1IIi . Oo0Ooo % O0oo0OO0
   if 10 - 10: O00oOoOoO0o0O / OoooooooOO
   IiiiIIiii = translate ( 'special://home/userdata/addon_data/script.navi-x/cache' )
   if 91 - 91: o0oOOo0O0Ooo . iii1I1I % Oo0Ooo - iii1I1I . oO0o % i11iIiiIii
   ii1I1IIii11 = 0
   O0o0oO = 0
   if 25 - 25: iIii1I11I1II1
   Oo0O0OO0OoO0 ( IiiiIIiii )
   IIIIiIiIi1 = IIIIiIiIi1 + ii1I1IIii11
   I11iiiiI1i = I11iiiiI1i + ( O0o0oO / 1024 / 1024 )
   if 63 - 63: Oo0ooO0oo0oO
   if 96 - 96: I11i
  if o0OIi == "yes" :
   if 34 - 34: OoOoOO00 / OoO0O00 - I1IiiI . O0 . OOooOOo
   if 63 - 63: iii1I1I
   i1i1iIiI = translate ( 'special://home/userdata/addon_data/plugin.video.youtube/kodion' )
   if 23 - 23: O00oOoOoO0o0O + iIii1I11I1II1 % iIii1I11I1II1 / Oo0ooO0oo0oO . oO0o + iIii1I11I1II1
   ii1I1IIii11 = 0
   O0o0oO = 0
   if 93 - 93: oO0o * o0oOOo0O0Ooo / OOooOOo - OOooOOo . iii1I1I / I1IiiI
   Oo0O0OO0OoO0 ( i1i1iIiI )
   IIIIiIiIi1 = IIIIiIiIi1 + ii1I1IIii11
   I11iiiiI1i = I11iiiiI1i + ( O0o0oO / 1024 / 1024 )
   if 11 - 11: O0oo0OO0 - I11i % i11iIiiIii . iIii1I11I1II1 * I1IiiI - Oo0Ooo
   if 73 - 73: O0 + Oo0ooO0oo0oO - O0 / OoooooooOO * Oo0Ooo
  if IIi1iiI == "yes" :
   if 32 - 32: OoO0O00 % I1IiiI % iii1I1I
   oOOO0OO = translate ( 'special://home/userdata/addon_data/script.tvguidetecbox' )
   if 43 - 43: I11i % i1IIi % Oo0ooO0oo0oO . i11iIiiIii
   ii1I1IIii11 = 0
   O0o0oO = 0
   if 56 - 56: O0 * iii1I1I + iii1I1I * iIii1I11I1II1 / Oo0ooO0oo0oO * O0oo0OO0
   for o00oo , O0oO0oo0O , oooOOO0ooOoOOO in os . walk ( oOOO0OO ) :
    for o0o0Ooo0 in oooOOO0ooOoOOO :
     o0IiIiI111IIII1 = os . path . join ( o00oo , o0o0Ooo0 )
     if not o0o0Ooo0 == "settings.xml" :
      O0o0oO += os . path . getsize ( o0IiIiI111IIII1 )
      ii1I1IIii11 = ii1I1IIii11 + 1
      if 25 - 25: iIii1I11I1II1 . I11i * i11iIiiIii + Oo0Ooo * I11i
   IIIIiIiIi1 = IIIIiIiIi1 + ii1I1IIii11
   I11iiiiI1i = I11iiiiI1i + ( O0o0oO / 1024 / 1024 )
   if 67 - 67: iii1I1I
   if 88 - 88: Oo0Ooo
   if 8 - 8: I1ii11iIi11i
  if o0ooOO00OO0o0O == "yes" :
   if 82 - 82: OoooooooOO
   OoOO00oo0o = translate ( 'special://home/userdata/addon_data/plugin.video.salts' )
   if 76 - 76: iii1I1I . O00oOoOoO0o0O % iii1I1I - O0oo0OO0
   ii1I1IIii11 = 0
   O0o0oO = 0
   if 51 - 51: OoooooooOO + o0oOOo0O0Ooo * iIii1I11I1II1 * oO0o / i1IIi
   if 19 - 19: iii1I1I - OoOoOO00 % oO0o / OoooooooOO % iii1I1I
   for o00oo , O0oO0oo0O , oooOOO0ooOoOOO in os . walk ( OoOO00oo0o ) :
    for o0o0Ooo0 in oooOOO0ooOoOOO :
     o0IiIiI111IIII1 = os . path . join ( o00oo , o0o0Ooo0 )
     if not o0o0Ooo0 == "settings.xml" :
      O0o0oO += os . path . getsize ( o0IiIiI111IIII1 )
      ii1I1IIii11 = ii1I1IIii11 + 1
      if 65 - 65: O0 . oO0o
   IIIIiIiIi1 = IIIIiIiIi1 + ii1I1IIii11
   I11iiiiI1i = I11iiiiI1i + ( O0o0oO / 1024 / 1024 )
   if 85 - 85: II111iiii
   if 55 - 55: I1ii11iIi11i
   if 76 - 76: oO0o - i11iIiiIii
  if III1IiiIiiI1i == "yes" :
   if 27 - 27: I1ii11iIi11i - i11iIiiIii % O0oo0OO0 / Oo0Ooo . Oo0Ooo / OoooooooOO
   O0oO0o0oOOO0o = translate ( 'special://home/userdata/addon_data/plugin.video.pulsar/cache' )
   if 16 - 16: O0 * O00oOoOoO0o0O % iii1I1I
   ii1I1IIii11 = 0
   O0o0oO = 0
   if 66 - 66: Oo0ooO0oo0oO . I11i - O0oo0OO0 - Ii1I + I1IiiI
   Oo0O0OO0OoO0 ( O0oO0o0oOOO0o )
   IIIIiIiIi1 = IIIIiIiIi1 + ii1I1IIii11
   I11iiiiI1i = I11iiiiI1i + ( O0o0oO / 1024 / 1024 )
   if 37 - 37: O00oOoOoO0o0O + Oo0Ooo % oO0o / OoooooooOO . OoOoOO00 - iii1I1I
   if 15 - 15: Oo0ooO0oo0oO - O0 % I1IiiI . OoooooooOO * Oo0Ooo / O0
   if 18 - 18: OoOoOO00 / O00oOoOoO0o0O / iIii1I11I1II1 - I1ii11iIi11i . i11iIiiIii
   if 86 - 86: O0oo0OO0 * Oo0Ooo . iii1I1I
   if 96 - 96: o0oOOo0O0Ooo % O00oOoOoO0o0O / OOooOOo
 except :
  if 63 - 63: i1IIi % i11iIiiIii % II111iiii * OoooooooOO
  pass
  if 40 - 40: Oo0Ooo
  if 47 - 47: OoOoOO00
  if 65 - 65: O0 + O0oo0OO0 % Ii1I * I1IiiI / Oo0ooO0oo0oO / OoOoOO00
 if I11iiiiI1i >= 500 :
  maint_cache_red . setVisible ( True )
  maint_cache_amber . setVisible ( False )
  maint_cache_green . setVisible ( False )
  recommendedaction = "Clear cache\\temp"
  if 71 - 71: i11iIiiIii / OoOoOO00 . oO0o
 if I11iiiiI1i >= 200 and I11iiiiI1i < 500 :
  maint_cache_amber . setVisible ( True )
  maint_cache_red . setVisible ( False )
  maint_cache_green . setVisible ( False )
  if 33 - 33: oO0o
 if I11iiiiI1i < 200 :
  maint_cache_green . setVisible ( True )
  maint_cache_red . setVisible ( False )
  maint_cache_amber . setVisible ( False )
  if 39 - 39: OoO0O00 + O0 + Oo0ooO0oo0oO * II111iiii % O0 - O0
 if I11iiiiI1i == 0 and IIIIiIiIi1 > 0 :
  I11iiiiI1i = "<1"
  if 41 - 41: O00oOoOoO0o0O % o0oOOo0O0Ooo
 if I11iiiiI1i == "<1" :
  maint_cache_green . setVisible ( True )
  maint_cache_red . setVisible ( False )
  maint_cache_amber . setVisible ( False )
  if 67 - 67: O0 % O0oo0OO0
 maint_cache_label5 . setLabel ( '[COLOR=lightgray]' + str ( IIIIiIiIi1 ) + '[/COLOR]' )
 maint_cache_label6 . setLabel ( '[COLOR=lightgray]' + str ( I11iiiiI1i ) + ' MB[/COLOR]' )
 if 35 - 35: I1IiiI . OoOoOO00 + OoooooooOO % Oo0Ooo % OOooOOo
 if 39 - 39: Ii1I
def oOo0000ooO ( string ) :
 if 15 - 15: Oo0ooO0oo0oO . o0oOOo0O0Ooo + OoOoOO00 . iIii1I11I1II1 % Oo0ooO0oo0oO + O0
 IIiII11 = "COLOR"
 if IIiII11 in string :
  oo0O00OOOOO = string . find ( ']' )
  OoOII11IiI1 = string [ oo0O00OOOOO + 1 : ]
  OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
  string = OoOII11IiI1 [ : OoOOOO00oOO ]
  return string
  if 4 - 4: i1IIi + OoOoOO00
  if 39 - 39: iIii1I11I1II1 + Oo0ooO0oo0oO
  if 92 - 92: I11i % i11iIiiIii % Oo0Ooo
  if 23 - 23: II111iiii * iii1I1I
  if 80 - 80: O0oo0OO0 / i11iIiiIii + OoooooooOO
  if 38 - 38: I1ii11iIi11i % Oo0ooO0oo0oO + i1IIi * OoooooooOO * oO0o
  if 83 - 83: iIii1I11I1II1 - Oo0ooO0oo0oO - O0oo0OO0 / OoO0O00 - O0
def O00OoO0oo ( ) :
 if 44 - 44: i11iIiiIii - O0oo0OO0 % Oo0Ooo . I11i
 global buildinstallskipaddonssetting
 if 14 - 14: Oo0Ooo - O00oOoOoO0o0O / II111iiii
 if buildinstallskipaddons . isSelected ( ) :
  if 54 - 54: Ii1I % Ii1I
  if 66 - 66: oO0o * oO0o
  if 58 - 58: OoOoOO00
  if 60 - 60: II111iiii
  pass
  if 90 - 90: OoOoOO00
  if 37 - 37: OoOoOO00 + O0 . O0 * Oo0Ooo % O0oo0OO0 / iii1I1I
  if 18 - 18: OoooooooOO
 else :
  if 57 - 57: Oo0ooO0oo0oO . OoOoOO00 * o0oOOo0O0Ooo - OoooooooOO
  pass
  if 75 - 75: i11iIiiIii / o0oOOo0O0Ooo . O00oOoOoO0o0O . i1IIi . i1IIi / I11i
  if 94 - 94: Oo0ooO0oo0oO + I1IiiI
  if 56 - 56: OoOoOO00 % o0oOOo0O0Ooo
def i11iIi11I1I11II ( ) :
 if 43 - 43: oO0o + OoooooooOO . o0oOOo0O0Ooo . I1ii11iIi11i
 global buildinstallskipaddondatasetting
 if 30 - 30: Oo0ooO0oo0oO - i11iIiiIii + I1IiiI / Oo0Ooo % O0
 if buildinstallskipaddondata . isSelected ( ) :
  if 66 - 66: iIii1I11I1II1 % i11iIiiIii / I1IiiI
  if 47 - 47: I1ii11iIi11i * oO0o + iIii1I11I1II1 - oO0o / O00oOoOoO0o0O
  if 86 - 86: O00oOoOoO0o0O
  if 43 - 43: I1IiiI / iii1I1I / Oo0ooO0oo0oO + iIii1I11I1II1 + OoooooooOO
  pass
  if 33 - 33: II111iiii - O00oOoOoO0o0O - Oo0ooO0oo0oO
  if 92 - 92: OoO0O00 * O00oOoOoO0o0O
  if 92 - 92: oO0o
 else :
  if 7 - 7: iii1I1I
  pass
  if 73 - 73: OoO0O00 % I1ii11iIi11i
  if 32 - 32: OOooOOo + iii1I1I + iIii1I11I1II1 * Oo0Ooo
def ooiIii1I1111 ( ) :
 if 26 - 26: O0oo0OO0 . I1IiiI . iii1I1I - OoooooooOO / iIii1I11I1II1
 global buildinstallskipvideosssetting
 if 47 - 47: O00oOoOoO0o0O
 if buildinstallskipvideos . isSelected ( ) :
  if 76 - 76: OoO0O00 * iIii1I11I1II1 + I1ii11iIi11i - Oo0ooO0oo0oO - I11i / i1IIi
  if 27 - 27: I1ii11iIi11i . O00oOoOoO0o0O
  if 66 - 66: O0 / O0 * i1IIi . OoooooooOO % iIii1I11I1II1
  if 21 - 21: O00oOoOoO0o0O - I1IiiI % OoooooooOO + o0oOOo0O0Ooo
  pass
  if 92 - 92: Oo0ooO0oo0oO + O00oOoOoO0o0O
  if 52 - 52: II111iiii / I1IiiI . oO0o * O00oOoOoO0o0O . I11i
  if 25 - 25: i11iIiiIii / OoOoOO00 - O0oo0OO0 / OoO0O00 . o0oOOo0O0Ooo . o0oOOo0O0Ooo
 else :
  if 6 - 6: oO0o . I11i
  pass
  if 43 - 43: I1ii11iIi11i + o0oOOo0O0Ooo
  if 50 - 50: oO0o % i1IIi * O0
def iiIIi11ii1Ii ( ) :
 if 60 - 60: o0oOOo0O0Ooo . OoOoOO00 % O0oo0OO0 / I1IiiI / O0
 global buildinstallskipfavouritessetting
 if 19 - 19: i11iIiiIii . I1IiiI + II111iiii / OOooOOo . I1ii11iIi11i * Oo0ooO0oo0oO
 if buildinstallskipfavourites . isSelected ( ) :
  if 59 - 59: iIii1I11I1II1 / I1ii11iIi11i % Oo0ooO0oo0oO
  if 84 - 84: iIii1I11I1II1 / I1IiiI . OoOoOO00 % I11i
  if 99 - 99: Oo0Ooo + i11iIiiIii
  if 36 - 36: Ii1I * O0oo0OO0 * iIii1I11I1II1 - I11i % i11iIiiIii
  pass
  if 98 - 98: iIii1I11I1II1 - i1IIi + Oo0ooO0oo0oO % I11i + Oo0ooO0oo0oO / oO0o
  if 97 - 97: O00oOoOoO0o0O % Oo0ooO0oo0oO + II111iiii - O00oOoOoO0o0O % OoO0O00 + Oo0ooO0oo0oO
  if 31 - 31: o0oOOo0O0Ooo
 else :
  if 35 - 35: OoOoOO00 + Ii1I * Oo0ooO0oo0oO / OoOoOO00
  pass
  if 69 - 69: Oo0ooO0oo0oO . OOooOOo - I1IiiI
  if 29 - 29: i11iIiiIii . I1ii11iIi11i / I1IiiI . OOooOOo + i11iIiiIii
  if 26 - 26: O00oOoOoO0o0O / Ii1I - OoooooooOO
  if 9 - 9: OoooooooOO * I1ii11iIi11i
  if 9 - 9: Oo0Ooo + iii1I1I
  if 64 - 64: O0 * I1IiiI / I1IiiI
  if 57 - 57: I1ii11iIi11i / OoooooooOO % I1ii11iIi11i . O0 / I1ii11iIi11i
def O0OoOo ( ) :
 if 94 - 94: OoO0O00 + OoO0O00 + I1ii11iIi11i . OoO0O00 * Ii1I
 if IIi1II . isSelected ( ) :
  if 62 - 62: o0oOOo0O0Ooo / iIii1I11I1II1
  Oo ( 'cacheinclude_genesis' , 'yes' )
  Ii1I11i1I1 ( )
  if 55 - 55: Ii1I / OoO0O00 + iii1I1I . O00oOoOoO0o0O
 else :
  if 47 - 47: O0
  Oo ( 'cacheinclude_genesis' , '0' )
  Ii1I11i1I1 ( )
  if 83 - 83: O0 + OoOoOO00 / O0 / I11i
  if 68 - 68: i1IIi . I11i . i1IIi + O00oOoOoO0o0O % I1IiiI
  if 32 - 32: OoOoOO00 . iIii1I11I1II1 % oO0o . O0 . OoOoOO00 / iii1I1I
  if 45 - 45: iIii1I11I1II1
def I1I111IIIi1 ( ) :
 if 66 - 66: o0oOOo0O0Ooo % OoOoOO00
 if OOo0iiIii1IIi . isSelected ( ) :
  if 30 - 30: OoOoOO00 * Oo0Ooo % iIii1I11I1II1 % OoO0O00 + i11iIiiIii
  Oo ( 'cacheinclude_navix' , 'yes' )
  Ii1I11i1I1 ( )
  if 46 - 46: I1IiiI . O00oOoOoO0o0O - i11iIiiIii - O0oo0OO0
 else :
  if 97 - 97: II111iiii % Oo0Ooo * O00oOoOoO0o0O
  Oo ( 'cacheinclude_navix' , '0' )
  Ii1I11i1I1 ( )
  if 51 - 51: Oo0Ooo % OOooOOo . Oo0Ooo
  if 72 - 72: Ii1I % Ii1I / I1IiiI
def IIIII11Ii ( ) :
 if 33 - 33: oO0o + i11iIiiIii + OoooooooOO * iIii1I11I1II1 . OoOoOO00 * Ii1I
 if i111IIIiI . isSelected ( ) :
  if 99 - 99: i1IIi % OoooooooOO * Ii1I * O0 + oO0o
  Oo ( 'cacheinclude_youtube' , 'yes' )
  Ii1I11i1I1 ( )
  if 12 - 12: Ii1I . iii1I1I - I1IiiI * Oo0Ooo % I1ii11iIi11i * OoooooooOO
 else :
  if 26 - 26: i1IIi / iii1I1I . iii1I1I
  Oo ( 'cacheinclude_youtube' , '0' )
  Ii1I11i1I1 ( )
  if 20 - 20: OOooOOo - iii1I1I / Oo0Ooo * OoO0O00
  if 55 - 55: OoooooooOO
def OO0OOOOOo ( ) :
 if 7 - 7: O0 + Ii1I . II111iiii
 if I1Ii1 . isSelected ( ) :
  if 12 - 12: I1IiiI - i1IIi
  Oo ( 'cacheinclude_ivue' , 'yes' )
  Ii1I11i1I1 ( )
  if 95 - 95: I11i / O00oOoOoO0o0O . O0 * O00oOoOoO0o0O - o0oOOo0O0Ooo * Oo0Ooo
 else :
  if 6 - 6: OoOoOO00 . II111iiii * I1IiiI . I1IiiI / Ii1I
  Oo ( 'cacheinclude_ivue' , '0' )
  Ii1I11i1I1 ( )
  if 14 - 14: O0oo0OO0 % O00oOoOoO0o0O - O0 / O0oo0OO0
  if 91 - 91: i11iIiiIii % O0oo0OO0 * oO0o - I1ii11iIi11i . O0oo0OO0
def iIo00oo ( ) :
 if 78 - 78: O00oOoOoO0o0O - I11i % O0 - OOooOOo % OoO0O00
 if oOOo00O0OOOo . isSelected ( ) :
  if 43 - 43: OoO0O00
  Oo ( 'cacheinclude_salts' , 'yes' )
  Ii1I11i1I1 ( )
  if 90 - 90: OoooooooOO + O0 + I1ii11iIi11i / I11i / Ii1I * I1ii11iIi11i
 else :
  if 100 - 100: I11i
  Oo ( 'cacheinclude_salts' , '0' )
  Ii1I11i1I1 ( )
  if 82 - 82: iIii1I11I1II1
  if 19 - 19: I1IiiI
def oOOooI1I1i11 ( ) :
 if 79 - 79: o0oOOo0O0Ooo - II111iiii
 if IiI . isSelected ( ) :
  if 70 - 70: O0oo0OO0 . oO0o % i1IIi / iIii1I11I1II1
  Oo ( 'cacheinclude_pulsar' , 'yes' )
  Ii1I11i1I1 ( )
  if 98 - 98: i1IIi % Oo0Ooo
 else :
  if 82 - 82: Oo0ooO0oo0oO
  Oo ( 'cacheinclude_pulsar' , '0' )
  Ii1I11i1I1 ( )
  if 70 - 70: iIii1I11I1II1 + i11iIiiIii + Oo0Ooo / iii1I1I
  if 9 - 9: OoOoOO00 - O00oOoOoO0o0O
  if 39 - 39: i1IIi
  if 19 - 19: I1IiiI . I1IiiI - i11iIiiIii
  if 61 - 61: O0oo0OO0 * I1ii11iIi11i % I1IiiI % OoO0O00 % I11i + I11i
  if 6 - 6: Oo0Ooo
  if 73 - 73: O0oo0OO0 * I1ii11iIi11i + o0oOOo0O0Ooo - Oo0Ooo . I11i
  if 93 - 93: i11iIiiIii
def OoOiII11IiIi ( ) :
 if 27 - 27: OoO0O00 + OoOoOO00
 if 97 - 97: i1IIi * O0oo0OO0 . II111iiii
 if 62 - 62: OoooooooOO . Ii1I
 global I1
 global ii1I1
 global iiII1iiiiiii
 global iiIiii
 global OooooOOoo0
 global i1I1IiiIi1i
 global iiI11ii1I1
 global Ooo0OOoOoO0
 global oOo0OOoO0
 global IIo0Oo0oO0oOO00
 global oo00OO0000oO
 global I1II1
 global OOii1ii1i11I1I
 global oooO
 global i1I1i111Ii
 global oooi1i1iI1iiiI
 global IIIIiii1IIii
 global Ooo0oOooo0
 global oOOOoo00
 global arehostimage
 global IIi
 global oo0
 if 87 - 87: I11i . I11i . II111iiii / OOooOOo
 if 86 - 86: oO0o % O0 + OoO0O00
 if 52 - 52: Oo0Ooo / iii1I1I
 if 42 - 42: iIii1I11I1II1 * Ii1I / OoO0O00 + OOooOOo
 try :
  if Iii11iI1I . getFocus ( ) == Ii1I1 :
   if 79 - 79: I1IiiI - iii1I1I / I11i . Oo0Ooo
   if 100 - 100: O0
   if 94 - 94: I1ii11iIi11i - o0oOOo0O0Ooo
   i1I1IiiIi1i = int ( Ii1I1 . getPercent ( ) * ( ( I1i11 / 3. ) / 100. ) )
   if 42 - 42: o0oOOo0O0Ooo * OoOoOO00 . OoO0O00 - iii1I1I / II111iiii
   if 25 - 25: Oo0Ooo % OoOoOO00
   if 75 - 75: i1IIi
   if i1I1IiiIi1i < 20 :
    OOO0OO = ( 100 * 21 ) / ( I1i11 / 3. )
    Ii1I1 . setPercent ( OOO0OO )
    i1I1IiiIi1i = int ( Ii1I1 . getPercent ( ) * ( ( I1i11 / 3. ) / 100. ) )
    if 45 - 45: iii1I1I - o0oOOo0O0Ooo . Ii1I
    if 41 - 41: II111iiii . I1IiiI / OoO0O00 . Oo0ooO0oo0oO
   i1i1iiIIiiiII . setLabel ( '[COLOR=darkgray] ' + str ( i1I1IiiIi1i ) + 'MB[/COLOR]' )
   if 58 - 58: O00oOoOoO0o0O % i11iIiiIii * II111iiii . I1ii11iIi11i
 except :
  pass
  if 94 - 94: i11iIiiIii . OOooOOo + iIii1I11I1II1 * O0oo0OO0 * O0oo0OO0
  if 36 - 36: I11i - O00oOoOoO0o0O . O00oOoOoO0o0O
  if 60 - 60: i11iIiiIii * Oo0Ooo % OoO0O00 + OoO0O00
  if 84 - 84: iIii1I11I1II1 + OoooooooOO
  if 77 - 77: O0 * I1ii11iIi11i * oO0o + OoO0O00 + I1ii11iIi11i - O0oo0OO0
  if 10 - 10: I1ii11iIi11i + O00oOoOoO0o0O
  if 58 - 58: I1IiiI + OoooooooOO / iii1I1I . Oo0ooO0oo0oO % o0oOOo0O0Ooo / I1ii11iIi11i
  if 62 - 62: II111iiii
  if 12 - 12: O00oOoOoO0o0O + II111iiii
  if 92 - 92: O0oo0OO0 % iIii1I11I1II1 - iii1I1I / i11iIiiIii % Oo0ooO0oo0oO * o0oOOo0O0Ooo
  if 80 - 80: iii1I1I
 try :
  if Iii11iI1I . getFocus ( ) == OOO0O00Oo :
   if 3 - 3: I1ii11iIi11i * I11i
   if 53 - 53: iIii1I11I1II1 / iii1I1I % OoO0O00 + O00oOoOoO0o0O / Oo0ooO0oo0oO
   oo00oO = str ( OOO0O00Oo . getPercent ( ) )
   if 28 - 28: Ii1I - I1IiiI % OoO0O00 * O0oo0OO0
   oO0oOooO00oo = oo00oO . find ( '.' )
   Oo000 = oo00oO [ : oO0oOooO00oo ]
   if 75 - 75: O0
   oOoO = int ( Oo000 )
   if 59 - 59: OOooOOo + I1IiiI / II111iiii / OoOoOO00
   if 80 - 80: OoOoOO00 + iIii1I11I1II1 . O00oOoOoO0o0O
   oo00oO = str ( OOO0O00Oo . getPercent ( ) )
   if 76 - 76: I1IiiI * OOooOOo
   oO0oOooO00oo = oo00oO . find ( '.' )
   Oo000 = oo00oO [ : oO0oOooO00oo ]
   if 12 - 12: iIii1I11I1II1 / I11i % Ii1I
   oOoO = int ( Oo000 )
   if 49 - 49: OoO0O00 + II111iiii / O00oOoOoO0o0O - O0 % Ii1I
   iiI11ii1I1 = int ( oOoO * 0.2 )
   if 27 - 27: OoO0O00 + Oo0Ooo
   if 92 - 92: I1IiiI % iii1I1I
   if 31 - 31: OoooooooOO - oO0o / O0oo0OO0
   IiI1iiI11 . setLabel ( '[COLOR=darkgray] ' + str ( iiI11ii1I1 ) + 's[/COLOR]' )
   if 62 - 62: i11iIiiIii - I11i
 except :
  pass
  if 81 - 81: I11i
  if 92 - 92: OOooOOo - Oo0Ooo - OoooooooOO / O00oOoOoO0o0O - i1IIi
  if 81 - 81: i1IIi / O0oo0OO0 % i11iIiiIii . iIii1I11I1II1 * OoOoOO00 + OoooooooOO
  if 31 - 31: i1IIi % II111iiii
  if 13 - 13: iIii1I11I1II1 - II111iiii % O0 . Ii1I % OoO0O00
  if 2 - 2: OoooooooOO - Ii1I % oO0o / I1IiiI / o0oOOo0O0Ooo
 try :
  if Iii11iI1I . getFocus ( ) == OoooooOo :
   if 3 - 3: II111iiii / OOooOOo
   if 48 - 48: Oo0ooO0oo0oO . I1ii11iIi11i
   if 49 - 49: i1IIi - OoOoOO00 . Oo0Ooo + iIii1I11I1II1 - Oo0ooO0oo0oO / Oo0Ooo
   oo00oO = str ( OoooooOo . getPercent ( ) )
   if 24 - 24: oO0o - iii1I1I / Oo0ooO0oo0oO
   oO0oOooO00oo = oo00oO . find ( '.' )
   Oo000 = oo00oO [ : oO0oOooO00oo ]
   if 10 - 10: OoOoOO00 * i1IIi
   oOoO = int ( Oo000 )
   if 15 - 15: I11i + i1IIi - II111iiii % I1IiiI
   if 34 - 34: I1IiiI
   oo00oO = str ( OoooooOo . getPercent ( ) )
   if 57 - 57: OOooOOo . Ii1I % o0oOOo0O0Ooo
   oO0oOooO00oo = oo00oO . find ( '.' )
   Oo000 = oo00oO [ : oO0oOooO00oo ]
   if 32 - 32: I11i / O00oOoOoO0o0O - O0 * iIii1I11I1II1
   oOoO = int ( Oo000 )
   if 70 - 70: OoooooooOO % OoooooooOO % OoO0O00
   Ooo0OOoOoO0 = int ( oOoO * 0.1 )
   if 98 - 98: OoO0O00
   I1Ii11i . setLabel ( '[COLOR=darkgray] ' + str ( Ooo0OOoOoO0 ) + '[/COLOR]' )
   if 18 - 18: I11i + Oo0Ooo - OoO0O00 / O0oo0OO0 / OOooOOo
 except :
  pass
  if 53 - 53: OOooOOo + o0oOOo0O0Ooo . oO0o / I11i
  if 52 - 52: O0oo0OO0 + O0oo0OO0
  if 73 - 73: o0oOOo0O0Ooo . i11iIiiIii % OoooooooOO + Oo0ooO0oo0oO . OoooooooOO / OOooOOo
  if 54 - 54: OoOoOO00 . OoooooooOO
 try :
  if Iii11iI1I . getFocus ( ) == O0o0O :
   if 36 - 36: oO0o / II111iiii * O00oOoOoO0o0O % I1ii11iIi11i
   ooOO0ooo0o . setVisible ( False )
   if 31 - 31: II111iiii + OOooOOo - OoooooooOO . I11i
   if 28 - 28: Ii1I . I1ii11iIi11i
   if 77 - 77: I1ii11iIi11i % II111iiii
   if 81 - 81: OoOoOO00 % Ii1I / O0 * iIii1I11I1II1 % O00oOoOoO0o0O . I1IiiI
   if 90 - 90: o0oOOo0O0Ooo
   if 44 - 44: o0oOOo0O0Ooo / I1ii11iIi11i . Oo0Ooo + OoOoOO00
   O0Ooo000 . setLabel ( ' ' )
   I1IiiIiii1 . setLabel ( ' ' )
   i11ii . setVisible ( False )
   oOOOOO0Ooooo . setVisible ( False )
   o0o000Oo . setVisible ( False )
   oO0o0O0o0OO00 . setVisible ( False )
   iIiiiIi . setVisible ( False )
   if 32 - 32: O00oOoOoO0o0O - Oo0ooO0oo0oO * iii1I1I * I11i
   iiIiii . setVisible ( False )
   i1IiI1I . setVisible ( False )
   o0OOo00oO0oOO . setVisible ( False )
   oooO00Oo . setVisible ( False )
   ooO00o . setVisible ( False )
   o0o00O0oOooO0 . setVisible ( False )
   o0oO0OO00ooOO . setVisible ( False )
   if 84 - 84: Ii1I + I1ii11iIi11i % I1IiiI + i11iIiiIii
   if 37 - 37: I11i % I1ii11iIi11i / Oo0ooO0oo0oO
   global I1II1
   I1II1 = O0o0O . getListItem ( O0o0O . getSelectedPosition ( ) ) . getLabel ( )
   if 94 - 94: I11i / OoO0O00 . o0oOOo0O0Ooo
   IIiII11 = "COLOR"
   if IIiII11 in I1II1 :
    oo0O00OOOOO = I1II1 . find ( ']' )
    OoOII11IiI1 = I1II1 [ oo0O00OOOOO + 1 : ]
    OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
    if 1 - 1: Oo0Ooo . II111iiii
    if 93 - 93: II111iiii . i11iIiiIii + II111iiii % oO0o
    if 98 - 98: O0oo0OO0 * oO0o * OoOoOO00 + Ii1I * iii1I1I
   i1oO00O . setLabel ( '[COLOR=darkgray]' + ooO ( "pressonbuild" ) + '[/COLOR]' )
   if 4 - 4: O00oOoOoO0o0O
   if 16 - 16: iIii1I11I1II1 * iii1I1I + oO0o . O0 . o0oOOo0O0Ooo
   if 99 - 99: i11iIiiIii - iii1I1I
   I1II1 = OoOII11IiI1 [ : OoOOOO00oOO ]
   if 85 - 85: O0oo0OO0 % I1ii11iIi11i
   if o000oo == "true" :
    print '@ares: buildotherlist Selected Build: ' + I1II1
    if 95 - 95: OoO0O00 * OOooOOo * iii1I1I . o0oOOo0O0Ooo
    if 73 - 73: OoO0O00
    if 28 - 28: OoooooooOO - I11i
   if IIIIiii1IIii == "blackbox" :
    if 84 - 84: II111iiii
    for i1IIii1i in Ooo0oOooo0 :
     if 60 - 60: Ii1I % Oo0Ooo / I11i . iii1I1I / O0oo0OO0 - OoooooooOO
     if I1II1 == i1IIii1i [ 'bfriendlyname' ] :
      o0iii1i = i1IIii1i [ 'bicon' ]
      IIIII = i1IIii1i [ 'bicon' ]
      Ii1IIi1I11i = i1IIii1i [ 'bfriendlyname' ]
      oOOOoo00 = i1IIii1i [ 'bslug' ]
      break
      if 70 - 70: Ii1I % Ii1I . OoOoOO00 / i11iIiiIii
      if 12 - 12: iIii1I11I1II1 / Oo0Ooo - I1ii11iIi11i + i11iIiiIii
      if 71 - 71: i11iIiiIii * I1IiiI + iIii1I11I1II1 - O0oo0OO0
   else :
    if 31 - 31: i11iIiiIii / OoOoOO00 % I1ii11iIi11i
    if o000oo == "true" :
     if 44 - 44: II111iiii * I1IiiI + OOooOOo
     print '@ares: wizarddata...'
     print ' '
     print oooO
     print ' '
     print '@ares1: matching..'
     print ' '
     if 31 - 31: Ii1I * o0oOOo0O0Ooo * Ii1I + OoO0O00 * o0oOOo0O0Ooo . O0oo0OO0
     if 89 - 89: OoooooooOO * Ii1I * I1IiiI . Oo0ooO0oo0oO * Ii1I / iii1I1I
    if "currentversion=" in oooO :
     if 46 - 46: i11iIiiIii
     Iiiii = re . compile ( 'name="(.+?)".+?rl="(.+?)".+?mg="(.+?)".+?anart="(.+?)".+?escription="(.+?)".+?urrentversion="(.+?)"' ) . findall ( oooO )
     if 25 - 25: Oo0Ooo * I1IiiI + OOooOOo + O0oo0OO0 % OOooOOo
     if o000oo == "true" :
      if 84 - 84: O0 % Ii1I . Ii1I . iii1I1I * I11i
      print '@ares: (currentversion found in wizarddata)'
      print ' '
      if 43 - 43: OoOoOO00 . I1ii11iIi11i % i1IIi
     for I1 , iiII1i1 , OO0O00 , II11IiIi11 , ooOO , oO0o0 in Iiiii :
      if 43 - 43: OOooOOo
      if I1 == I1II1 :
       o0IiiIIII1I1i = iiII1i1
       o0iii1i = OO0O00
       IIIII = II11IiIi11
       Ii1IIi1I11i = ooOO
       IIi = str ( oO0o0 )
       if 26 - 26: iii1I1I - Oo0Ooo + I1IiiI + o0oOOo0O0Ooo
       if o000oo == "true" :
        print '@ares1: match found'
        print '@ares1: desturl= ' + o0IiiIIII1I1i
        print '@ares1: desticon= ' + o0iii1i
        print '@ares1: destfanart= ' + IIIII
        print '@ares1: destdescr= ' + Ii1IIi1I11i
        print '@ares1: buildversion= ' + IIi
        print ' '
        if 37 - 37: o0oOOo0O0Ooo * OOooOOo + I1IiiI . I1ii11iIi11i * OoooooooOO
       break
       if 82 - 82: i11iIiiIii + iIii1I11I1II1 / Oo0Ooo + OOooOOo * II111iiii
       if 34 - 34: o0oOOo0O0Ooo % OoooooooOO
       if 36 - 36: I1IiiI
    elif "version=" in oooO :
     if 64 - 64: i11iIiiIii + i1IIi % O0 . I11i
     if o000oo == "true" :
      if 64 - 64: Oo0ooO0oo0oO / i1IIi % iii1I1I
      print '@ares: (version found in wizarddata)'
      print ' '
      if 84 - 84: OoOoOO00 - Oo0Ooo . Oo0ooO0oo0oO . O00oOoOoO0o0O - Oo0Ooo
      if 99 - 99: O0oo0OO0
     Iiiii = re . compile ( 'name="(.+?)".+?rl="(.+?)".+?mg="(.+?)".+?anart="(.+?)".+?escription="(.+?)".+?ersion="(.+?)"' ) . findall ( oooO )
     if 75 - 75: Oo0ooO0oo0oO . OOooOOo / O00oOoOoO0o0O
     if 84 - 84: OoooooooOO . I1IiiI / o0oOOo0O0Ooo
     if 86 - 86: Oo0Ooo % OoOoOO00
     for I1 , iiII1i1 , OO0O00 , II11IiIi11 , ooOO , o0o0O00oOo in Iiiii :
      if 42 - 42: II111iiii
      if I1 == I1II1 :
       o0IiiIIII1I1i = iiII1i1
       o0iii1i = OO0O00
       IIIII = II11IiIi11
       Ii1IIi1I11i = ooOO
       IIi = str ( o0o0O00oOo )
       if 60 - 60: i1IIi / I1IiiI . II111iiii . iii1I1I % oO0o - I1IiiI
       if 39 - 39: I1IiiI . OoO0O00 + I11i + OOooOOo / II111iiii % i11iIiiIii
       if o000oo == "true" :
        print '@ares1: match found'
        print '@ares1: desturl= ' + o0IiiIIII1I1i
        print '@ares1: desticon= ' + o0iii1i
        print '@ares1: destfanart= ' + IIIII
        print '@ares1: destdescr= ' + Ii1IIi1I11i
        print '@ares1: buildversion= ' + IIi
        print ' '
        if 86 - 86: I1ii11iIi11i - i1IIi + Oo0Ooo * I1IiiI / i11iIiiIii % oO0o
       break
       if 17 - 17: Oo0ooO0oo0oO + Oo0ooO0oo0oO . I1ii11iIi11i
       if 50 - 50: iIii1I11I1II1 * oO0o
       if 85 - 85: i1IIi
       if 100 - 100: OoooooooOO / I11i % OoO0O00 + Ii1I
    else :
     if 42 - 42: Oo0Ooo / O00oOoOoO0o0O . Ii1I * I1IiiI
     if o000oo == "true" :
      if 54 - 54: OoOoOO00 * iii1I1I + OoO0O00
      print '@ares: (version not found in wizarddata)'
      print ' '
      if 93 - 93: o0oOOo0O0Ooo / I1IiiI
     Iiiii = re . compile ( 'name="(.+?)".+?rl="(.+?)".+?mg="(.+?)".+?anart="(.+?)".+?escription="(.+?)"' ) . findall ( oooO )
     if 47 - 47: Oo0Ooo * OOooOOo
     if 98 - 98: oO0o - oO0o . Oo0ooO0oo0oO
     if 60 - 60: I1IiiI * I1ii11iIi11i / O0 + I11i + O00oOoOoO0o0O
     for I1 , iiII1i1 , OO0O00 , II11IiIi11 , ooOO in Iiiii :
      if 66 - 66: O00oOoOoO0o0O * Oo0Ooo . OoooooooOO * O0oo0OO0
      if I1 == I1II1 :
       o0IiiIIII1I1i = iiII1i1
       o0iii1i = OO0O00
       IIIII = II11IiIi11
       Ii1IIi1I11i = ooOO
       IIi = " "
       if 93 - 93: O00oOoOoO0o0O / i1IIi
       if 47 - 47: Oo0ooO0oo0oO - Ii1I
       if 98 - 98: oO0o . O0oo0OO0 / OoOoOO00 . Oo0ooO0oo0oO
       if o000oo == "true" :
        print '@ares1: match found'
        print '@ares1: desturl= ' + o0IiiIIII1I1i
        print '@ares1: desticon= ' + o0iii1i
        print '@ares1: destfanart= ' + IIIII
        print '@ares1: destdescr= ' + Ii1IIi1I11i
        print ' '
        if 1 - 1: OOooOOo
        if 87 - 87: O0 * II111iiii + iIii1I11I1II1 % oO0o % i11iIiiIii - OoOoOO00
       break
       if 73 - 73: iii1I1I + Ii1I
       if 37 - 37: oO0o - iIii1I11I1II1 + II111iiii . Ii1I % iIii1I11I1II1
       if 17 - 17: O0oo0OO0 + i1IIi % O0
       if 65 - 65: O00oOoOoO0o0O
       if 50 - 50: II111iiii / OoO0O00
       if 79 - 79: I1ii11iIi11i - iIii1I11I1II1 % i1IIi / Oo0Ooo + II111iiii
       if 95 - 95: oO0o
       if 48 - 48: I11i / iIii1I11I1II1 % II111iiii
       if 39 - 39: i1IIi . I1ii11iIi11i / I11i / I11i
   if i1I1ii11i1Iii == "yes" :
    if 100 - 100: OoooooooOO - OoooooooOO + O00oOoOoO0o0O
    if o000oo == "true" :
     print 'buildlistotherraw = ' + oooi1i1iI1iiiI
     if 32 - 32: OoOoOO00 * o0oOOo0O0Ooo / OoooooooOO
    if oooi1i1iI1iiiI == "" :
     if 90 - 90: O0oo0OO0
     if o000oo == "true" :
      print 'buildlistotherraw = ""'
      if 35 - 35: II111iiii / Ii1I
      if 79 - 79: OoOoOO00 + O0oo0OO0 * iii1I1I * Ii1I
      if 53 - 53: OOooOOo / Oo0Ooo
      if 10 - 10: I1ii11iIi11i . o0oOOo0O0Ooo
     OoOoo00Oo0OoO = "0"
     if 56 - 56: OoooooooOO
     if 84 - 84: O0oo0OO0
     if 53 - 53: i1IIi
     if o000oo == "true" :
      print 'rnd = ' + OoOoo00Oo0OoO
      if 59 - 59: o0oOOo0O0Ooo + I1IiiI % OoooooooOO - iIii1I11I1II1
     iiII1i1 = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=getbuildsother&code=' + OoOoo00Oo0OoO
     if 9 - 9: i1IIi - OoOoOO00
     if o000oo == "true" :
      print 'url = ' + iiII1i1
      if 57 - 57: iIii1I11I1II1 * Ii1I * iii1I1I / oO0o
      if 46 - 46: Ii1I
     if o000oo == "true" :
      print '@ares: buildlistotherurl...'
      print iiII1i1
      if 61 - 61: o0oOOo0O0Ooo / Oo0ooO0oo0oO - II111iiii
      if 87 - 87: I1ii11iIi11i / I1IiiI
      if 45 - 45: OoOoOO00 * Oo0ooO0oo0oO / OoooooooOO + OoO0O00 . O0oo0OO0 / OoO0O00
      if 64 - 64: Ii1I / i1IIi % I1IiiI - o0oOOo0O0Ooo
     oooi1i1iI1iiiI = iIii111Ii ( iiII1i1 , 'yes' )
     if 96 - 96: Ii1I - II111iiii % OoOoOO00 * I1IiiI * I1IiiI . Oo0Ooo
     if 75 - 75: Oo0Ooo + Ii1I + OoO0O00
     if oooi1i1iI1iiiI == "downloadfailed" :
      return ( )
      if 97 - 97: Oo0ooO0oo0oO % i11iIiiIii % I11i
      if 21 - 21: Oo0Ooo / Ii1I / I1ii11iIi11i / i1IIi / o0oOOo0O0Ooo
      if 86 - 86: i1IIi
      if 33 - 33: OoOoOO00 % i11iIiiIii * OOooOOo
      if 69 - 69: II111iiii + Oo0Ooo - oO0o . Oo0Ooo / iIii1I11I1II1 * iIii1I11I1II1
      if 75 - 75: OoO0O00 % OoooooooOO
      if 16 - 16: O0 / i1IIi
      if 58 - 58: o0oOOo0O0Ooo / i11iIiiIii / O0 % I11i % I1IiiI
      if 86 - 86: O00oOoOoO0o0O + OoOoOO00 / I1IiiI + I11i % I11i / i11iIiiIii
      if 12 - 12: OoOoOO00 + o0oOOo0O0Ooo . O0oo0OO0
      if 52 - 52: OoO0O00
      if 4 - 4: Ii1I % I1ii11iIi11i + I11i - I1ii11iIi11i
    O00o0O00 = json . loads ( oooi1i1iI1iiiI )
    for oO00O in O00o0O00 :
     if oO00O [ 'name' ] == I1II1 :
      if 8 - 8: o0oOOo0O0Ooo + iii1I1I % i11iIiiIii + I1ii11iIi11i
      if o000oo == "true" :
       print '@ares: buildotherlist build name found...'
       print '@ares1: buidinfo-rating: ' + oO00O [ 'rating' ]
       print '@ares1: buidinfo-votes: ' + oO00O [ 'votes' ]
       print '@ares1: buidinfo-downloads: ' + oO00O [ 'downloads' ]
       print '@ares1: buidinfo-weeklydownloads: ' + oO00O [ 'thismonth' ]
       if 1 - 1: i1IIi . II111iiii + OOooOOo / OoOoOO00 / OOooOOo
       if 77 - 77: O00oOoOoO0o0O + OoooooooOO * i1IIi % OoooooooOO
      ii1I1 = oO00O [ 'rating' ]
      I1I1iiiiiIi1 = '[COLOR=darkgray]' + oO00O [ 'votes' ] + '[/COLOR]'
      i1Io00OOOo = oO00O [ 'votes' ]
      IIOOO0O00O0OOOO = '[COLOR=darkgray]This week: ' + oO00O [ 'thismonth' ] + ' / Total: ' + oO00O [ 'downloads' ] + '[/COLOR]'
      Ii1 = oO00O [ 'downloads' ]
      break
      if 73 - 73: Ii1I
      if 13 - 13: I11i - OoooooooOO / Oo0ooO0oo0oO
      if 80 - 80: iIii1I11I1II1 / i11iIiiIii + iii1I1I
      if 41 - 41: O0oo0OO0 + OoO0O00 * I1IiiI * O0 * Oo0Ooo - OoOoOO00
      if 96 - 96: I1IiiI - iIii1I11I1II1
      if 25 - 25: OoooooooOO . Ii1I % iii1I1I . O00oOoOoO0o0O
      if 67 - 67: OoooooooOO + O0oo0OO0 / Oo0ooO0oo0oO
      if 75 - 75: O00oOoOoO0o0O / OoooooooOO . I1IiiI + O0oo0OO0 - II111iiii
      if 33 - 33: O00oOoOoO0o0O / O00oOoOoO0o0O . i11iIiiIii * I1ii11iIi11i + o0oOOo0O0Ooo
      if 16 - 16: O00oOoOoO0o0O
      if 10 - 10: OoOoOO00 . O00oOoOoO0o0O * iIii1I11I1II1 - oO0o - OoOoOO00 / O0oo0OO0
      if 13 - 13: oO0o + OoOoOO00 % O00oOoOoO0o0O % OoooooooOO
      if 22 - 22: O0oo0OO0
      if 23 - 23: O0
    O0Ooo000 . setLabel ( label = I1I1iiiiiIi1 )
    I1IiiIiii1 . setLabel ( label = IIOOO0O00O0OOOO )
    if 41 - 41: i1IIi . OOooOOo / Oo0ooO0oo0oO / o0oOOo0O0Ooo % O00oOoOoO0o0O - Ii1I
    iI1i1Iiii ( ii1I1 , i1Io00OOOo )
    if 15 - 15: Ii1I
    if 17 - 17: OoOoOO00 - I1IiiI
    if 63 - 63: OoOoOO00 - oO0o / iIii1I11I1II1 - Ii1I / O0oo0OO0
    if 34 - 34: iii1I1I / o0oOOo0O0Ooo + OOooOOo - o0oOOo0O0Ooo + Oo0Ooo . oO0o
    if 97 - 97: i1IIi
   ii1iI1i1 = os . path . join ( oO0 , I1II1 + '.zip' )
   if 51 - 51: Oo0ooO0oo0oO * iii1I1I / i1IIi
   if os . path . isfile ( ii1iI1i1 ) :
    ooOo000OoO0o . setEnabled ( True )
   else :
    ooOo000OoO0o . setEnabled ( False )
    if 2 - 2: oO0o + O00oOoOoO0o0O . iii1I1I - i1IIi + O0oo0OO0
    if 54 - 54: OoooooooOO . oO0o - iii1I1I
    if 76 - 76: O0oo0OO0
    if 61 - 61: Oo0ooO0oo0oO / II111iiii * Oo0ooO0oo0oO * OoOoOO00 * O0oo0OO0 . i11iIiiIii
   global OOii1ii1i11I1I
   OOii1ii1i11I1I . setImage ( IIIII )
   OOii1ii1i11I1I . setVisible ( True )
   if 26 - 26: O0oo0OO0 / Oo0ooO0oo0oO - OoO0O00 . iIii1I11I1II1
   global iiII1iiiiiii
   iiII1iiiiiii . setLabel ( label = '[COLOR=darkgray]' + I1II1 + '[/COLOR]' )
   iiII1iiiiiii . setVisible ( True )
   if 83 - 83: Oo0ooO0oo0oO % Ii1I / Oo0Ooo - iii1I1I / O0
   if 97 - 97: iIii1I11I1II1 * I11i
   iiii1i1II1 . setVisible ( True )
   IiIIiii11II1 . setLabel ( label = '[COLOR=darkgray]' + IIi + '[/COLOR]' )
   IiIIiii11II1 . setVisible ( True )
   if 95 - 95: OoO0O00
   if 68 - 68: iIii1I11I1II1 . iIii1I11I1II1 / OoOoOO00 - II111iiii - iIii1I11I1II1
   O0Ooo000 . setVisible ( True )
   IIi11iI1Iii . setVisible ( True )
   if 75 - 75: Oo0ooO0oo0oO . I1IiiI * II111iiii
   IiIi1i . setVisible ( True )
   if 99 - 99: iIii1I11I1II1 * I1ii11iIi11i + O00oOoOoO0o0O
   IiIIiii11II1 . setVisible ( True )
   iiii1i1II1 . setVisible ( True )
   if 70 - 70: i1IIi % Oo0ooO0oo0oO . I1ii11iIi11i - O00oOoOoO0o0O + OOooOOo
   I1IiiIiii1 . setVisible ( True )
   i11i . setVisible ( True )
   if 84 - 84: oO0o + II111iiii * II111iiii % o0oOOo0O0Ooo / iii1I1I + Oo0ooO0oo0oO
   if 9 - 9: iii1I1I
   if 25 - 25: OOooOOo - Ii1I . I11i
   if 57 - 57: o0oOOo0O0Ooo + Oo0Ooo * I1ii11iIi11i - Oo0ooO0oo0oO % iIii1I11I1II1 - Ii1I
   if 37 - 37: OoO0O00 * I11i + Ii1I + I1ii11iIi11i * o0oOOo0O0Ooo
   ooooo0O0 . setVisible ( True )
   i1III1iI . setVisible ( True )
   IiII1i1iI . setVisible ( True )
   ooOo000OoO0o . setVisible ( True )
   if 95 - 95: Ii1I - i11iIiiIii % i11iIiiIii - O0 * O0oo0OO0
   if Oo0O0oOoO0o0 == 'mac0' :
    IiII1i1iI . setEnabled ( False )
   else :
    IiII1i1iI . setEnabled ( True )
    if 21 - 21: I1IiiI - I1IiiI + iii1I1I % I1IiiI * oO0o
    if 74 - 74: iii1I1I / I11i . I1IiiI - OoooooooOO + II111iiii + I11i
    if 36 - 36: Ii1I * I1IiiI * I1ii11iIi11i . I11i * I1ii11iIi11i
   I1 = I1II1
   if 76 - 76: OOooOOo + O0 / O00oOoOoO0o0O - OoO0O00
 except :
  if 27 - 27: Oo0Ooo - iIii1I11I1II1 * iii1I1I * II111iiii * I1ii11iIi11i
  pass
  if 9 - 9: i11iIiiIii + OOooOOo - OoOoOO00 / Oo0ooO0oo0oO % i1IIi / oO0o
  if 22 - 22: i1IIi
 try :
  if Iii11iI1I . getFocus ( ) == ii111 :
   if 3 - 3: OoO0O00 * I1ii11iIi11i - iii1I1I + I1ii11iIi11i
   if 63 - 63: I11i * Oo0ooO0oo0oO % II111iiii % O0oo0OO0 + I1IiiI * Oo0Ooo
   I1II1 = ii111 . getListItem ( ii111 . getSelectedPosition ( ) ) . getLabel ( )
   if 96 - 96: O00oOoOoO0o0O
   if 99 - 99: iIii1I11I1II1 - Oo0ooO0oo0oO
   IIiII11 = "COLOR"
   if IIiII11 in I1II1 :
    oo0O00OOOOO = I1II1 . find ( ']' )
    OoOII11IiI1 = I1II1 [ oo0O00OOOOO + 1 : ]
    OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
    if 79 - 79: I1IiiI + oO0o % I11i % oO0o
    if 56 - 56: I1ii11iIi11i + oO0o . OoO0O00 + OoooooooOO * I1ii11iIi11i - O0
    I1II1 = OoOII11IiI1 [ : OoOOOO00oOO ]
    if 35 - 35: OOooOOo . I11i . O0oo0OO0 - I11i % I11i + O0oo0OO0
   if o000oo == "true" :
    print '@ares: buildmainlist Selected Build: ' + I1II1
    if 99 - 99: o0oOOo0O0Ooo + OOooOOo
   O00o0O00 = json . loads ( OOo0 )
   for oO00O in O00o0O00 :
    if oO00O [ 'name' ] == I1II1 :
     if 34 - 34: O0oo0OO0 * o0oOOo0O0Ooo . I1IiiI % i11iIiiIii
     if o000oo == "true" :
      print '@ares: buildmainlist build name found...'
      if 61 - 61: iIii1I11I1II1 + oO0o * I11i - i1IIi % oO0o
     IIOOO0O00O0OOOO = oO00O [ 'downloads' ]
     oOOo = oO00O [ 'thismonth' ]
     I1II1iIi = oO00O [ 'logo' ]
     IIiIi1II1IiI = oO00O [ 'areshost' ]
     oo0 = oO00O [ 'updateinfo' ]
     break
     if 99 - 99: Oo0Ooo
     if 17 - 17: i11iIiiIii - i11iIiiIii + I1ii11iIi11i * Oo0ooO0oo0oO * oO0o / OoooooooOO
   if o000oo == "true" :
    print '@ares: Downloads: ' + IIOOO0O00O0OOOO
    print '@ares: weeklyDownloads: ' + oOOo
    if 22 - 22: O0oo0OO0 * I1ii11iIi11i - O00oOoOoO0o0O
    if 71 - 71: iIii1I11I1II1 / i11iIiiIii % o0oOOo0O0Ooo . O0oo0OO0 * I1IiiI % II111iiii
   if not "Assorted Builds" in I1II1 :
    if 35 - 35: O0oo0OO0 - OoOoOO00
    if 61 - 61: O0oo0OO0 * o0oOOo0O0Ooo * OoO0O00 + I1ii11iIi11i . Oo0Ooo + i1IIi
    if 82 - 82: Oo0Ooo + O0oo0OO0
    if IIIIiii1IIii <> "buildother" :
     if 93 - 93: I11i * O0 * OOooOOo - o0oOOo0O0Ooo / I1ii11iIi11i
     OOii1ii1i11I1I . setImage ( I1II1iIi )
     OOii1ii1i11I1I . setVisible ( True )
     if 54 - 54: i1IIi - OoO0O00 / OoooooooOO
     iiII1iiiiiii . setLabel ( label = '[COLOR=darkgray]' + I1II1 + '[/COLOR]' )
     iiII1iiiiiii . setVisible ( True )
     if 95 - 95: O0 + iIii1I11I1II1 . I1ii11iIi11i
     i1IiI1I . setLabel ( label = '[COLOR=darkgray]' + str ( IIOOO0O00O0OOOO ) + '[/COLOR]' )
     oooO00Oo . setLabel ( label = '[COLOR=darkgray]' + str ( oOOo ) + '[/COLOR]' )
     i1IiI1I . setVisible ( True )
     oooO00Oo . setVisible ( True )
     ooO00o . setVisible ( True )
     if 61 - 61: Ii1I * Ii1I
     o0OOo00oO0oOO . setVisible ( True )
     if 70 - 70: O0oo0OO0 . I1ii11iIi11i / o0oOOo0O0Ooo * oO0o
     if IIiIi1II1IiI == "Yes" or IIiIi1II1IiI == "yes" :
      if 74 - 74: I1IiiI . Oo0ooO0oo0oO / iii1I1I . O00oOoOoO0o0O
      if 74 - 74: Oo0Ooo / O0oo0OO0 % O0oo0OO0 . O00oOoOoO0o0O
      ooOO0ooo0o . setVisible ( True )
      if 72 - 72: i1IIi
     else :
      if 21 - 21: O0oo0OO0 . OOooOOo / i11iIiiIii * i1IIi
      ooOO0ooo0o . setVisible ( False )
      if 82 - 82: Oo0ooO0oo0oO * Oo0Ooo % i11iIiiIii * i1IIi . OOooOOo
      if 89 - 89: O00oOoOoO0o0O - i1IIi - O00oOoOoO0o0O
      if 74 - 74: OoO0O00 % OoO0O00
      if 28 - 28: OoOoOO00 % oO0o - OOooOOo + OOooOOo + oO0o / iIii1I11I1II1
      if 91 - 91: I1IiiI / II111iiii * OOooOOo
     if oo0 == "Yes" or oo0 == "yes" :
      if 94 - 94: II111iiii - iIii1I11I1II1 - iIii1I11I1II1
      o0oO0OO00ooOO . setLabel ( label = '[COLOR=lime]Yes[/COLOR]' )
      if 83 - 83: I1ii11iIi11i * iIii1I11I1II1 + OoOoOO00 * i1IIi . OoooooooOO % Ii1I
     else :
      if 81 - 81: OoO0O00 - iIii1I11I1II1
      o0oO0OO00ooOO . setLabel ( label = '[COLOR=darkgray]No[/COLOR]' )
      if 60 - 60: O0oo0OO0
     o0oO0OO00ooOO . setVisible ( True )
     o0o00O0oOooO0 . setVisible ( True )
     if 77 - 77: I1IiiI / I1ii11iIi11i
     if 95 - 95: O0oo0OO0 * i1IIi + oO0o
     if 40 - 40: II111iiii
   else :
    if 7 - 7: OOooOOo / OoO0O00
    OOii1ii1i11I1I . setVisible ( False )
    i1IiI1I . setVisible ( False )
    o0OOo00oO0oOO . setVisible ( False )
    oooO00Oo . setVisible ( False )
    ooO00o . setVisible ( False )
    ooOO0ooo0o . setVisible ( False )
    iiII1iiiiiii . setVisible ( False )
    if 88 - 88: i1IIi
    if 53 - 53: Oo0ooO0oo0oO . OOooOOo . o0oOOo0O0Ooo + oO0o
    if 17 - 17: iIii1I11I1II1 + i1IIi . I1ii11iIi11i + Ii1I % i1IIi . oO0o
 except :
  if 57 - 57: oO0o
  pass
  if 92 - 92: II111iiii - OoO0O00 - OOooOOo % I1IiiI - OoOoOO00 * O0oo0OO0
  if 16 - 16: iIii1I11I1II1 + OoooooooOO - Oo0ooO0oo0oO * O00oOoOoO0o0O
  if 37 - 37: iii1I1I
 try :
  if Iii11iI1I . getFocus ( ) == i1I11ii :
   if 15 - 15: o0oOOo0O0Ooo % OoO0O00 / iii1I1I
   if 36 - 36: OoO0O00 + OoO0O00 % Oo0Ooo + Oo0Ooo / i1IIi % i1IIi
   I1 = i1I11ii . getListItem ( i1I11ii . getSelectedPosition ( ) ) . getLabel ( )
   if 20 - 20: OOooOOo * oO0o
   iiIiii . setVisible ( True )
   if 91 - 91: OoO0O00 % i1IIi - iIii1I11I1II1 . OOooOOo
   IIiII11 = "COLOR"
   if IIiII11 in I1 :
    oo0O00OOOOO = I1 . find ( ']' )
    OoOII11IiI1 = I1 [ oo0O00OOOOO + 1 : ]
    OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
    if 31 - 31: oO0o % i1IIi . OoooooooOO - o0oOOo0O0Ooo + OoooooooOO
    if 45 - 45: OOooOOo + I11i / OoooooooOO - Ii1I + OoooooooOO
    I1 = OoOII11IiI1 [ : OoOOOO00oOO ]
    if 42 - 42: iIii1I11I1II1 * I1IiiI * O0oo0OO0
    if 62 - 62: OOooOOo * O0 % O00oOoOoO0o0O . O00oOoOoO0o0O . I1IiiI
    if 91 - 91: i1IIi . iii1I1I
   i1oO00O . setLabel ( '[COLOR=darkgray]' + ooO ( "pressonbuild" ) + '[/COLOR]' )
   if 37 - 37: iii1I1I - I11i + iIii1I11I1II1 / O0oo0OO0 - OoO0O00 . o0oOOo0O0Ooo
   i1III1iI . controlDown ( ooOo000OoO0o )
   if 62 - 62: I1ii11iIi11i
   if 47 - 47: O0oo0OO0 % OOooOOo * OoO0O00 . iIii1I11I1II1 % Oo0Ooo + OoooooooOO
   O00o0O00 = json . loads ( i1I1i111Ii )
   for oO00O in O00o0O00 :
    if oO00O [ 'name' ] == I1 :
     iiII1i1 = oO00O [ 'url' ]
     OoO = 'http://' + oO00O [ 'icon' ]
     iiI1IIIi = oO00O [ 'descr' ]
     II11IiIi11 = 'http://' + oO00O [ 'icon' ]
     I1Ii111I111 = '[COLOR=darkgray]' + oO00O [ 'author' ] + '[/COLOR]'
     if 7 - 7: I1IiiI
     ii1I1 = oO00O [ 'rating' ]
     I1I1iiiiiIi1 = '[COLOR=darkgray]' + oO00O [ 'votes' ] + '[/COLOR]'
     i1Io00OOOo = oO00O [ 'votes' ]
     if 40 - 40: Oo0ooO0oo0oO
     IIOOO0O00O0OOOO = '[COLOR=darkgray]This week: ' + oO00O [ 'thismonth' ] + ' / Total: ' + oO00O [ 'downloads' ] + '[/COLOR]'
     Ii1 = oO00O [ 'downloads' ]
     if 80 - 80: I1IiiI * O0oo0OO0 % oO0o . i11iIiiIii % O00oOoOoO0o0O
     if 42 - 42: OoooooooOO * II111iiii
     OOii1ii1i11I1I . setImage ( II11IiIi11 )
     OOii1ii1i11I1I . setVisible ( True )
     if 53 - 53: O0oo0OO0 + i1IIi . OoO0O00 / i11iIiiIii + Ii1I % OoOoOO00
     if 9 - 9: Oo0ooO0oo0oO . I11i - Oo0Ooo . O0oo0OO0
     iiII1iiiiiii . setLabel ( label = '[COLOR=darkgray]' + I1 + '[/COLOR]' )
     iiII1iiiiiii . setVisible ( True )
     if 39 - 39: OOooOOo
     if 70 - 70: O00oOoOoO0o0O % OoO0O00 % I1IiiI
     iiIiii . setLabel ( label = '[COLOR=darkgray]Created by: [/COLOR]' + I1Ii111I111 )
     iiIiii . setVisible ( True )
     if 95 - 95: OoOoOO00 - O0oo0OO0 / O0 * I1IiiI - o0oOOo0O0Ooo
     O0Ooo000 . setVisible ( True )
     IIi11iI1Iii . setVisible ( True )
     O0Ooo000 . setLabel ( label = I1I1iiiiiIi1 )
     if 12 - 12: iIii1I11I1II1 % Oo0Ooo . iii1I1I . O00oOoOoO0o0O % i11iIiiIii
     ii1iI1i1 = os . path . join ( oO0 , I1 + '.zip' )
     if 2 - 2: oO0o * oO0o . OoOoOO00 * Ii1I * iIii1I11I1II1
     if os . path . isfile ( ii1iI1i1 ) :
      ooOo000OoO0o . setEnabled ( True )
     else :
      ooOo000OoO0o . setEnabled ( False )
      if 13 - 13: I11i / O0 . i11iIiiIii * i1IIi % i11iIiiIii
      if 8 - 8: OoOoOO00 - OoooooooOO
     I1IiiIiii1 . setVisible ( True )
     i11i . setVisible ( True )
     I1IiiIiii1 . setLabel ( label = IIOOO0O00O0OOOO )
     if 99 - 99: II111iiii / O00oOoOoO0o0O % OoooooooOO . i11iIiiIii
     IiIi1i . setVisible ( True )
     if 18 - 18: o0oOOo0O0Ooo . Oo0ooO0oo0oO
     iI1i1Iiii ( ii1I1 , i1Io00OOOo )
     if 70 - 70: OoooooooOO . Oo0ooO0oo0oO / oO0o . oO0o - o0oOOo0O0Ooo
     i1III1iI . setVisible ( True )
     IiII1i1iI . setVisible ( True )
     if 29 - 29: I11i % OOooOOo - Oo0ooO0oo0oO
     if Oo0O0oOoO0o0 == 'mac0' :
      IiII1i1iI . setEnabled ( False )
     else :
      IiII1i1iI . setEnabled ( True )
      if 26 - 26: O0 . I11i + iii1I1I - Ii1I . I11i
     break
     if 2 - 2: I1ii11iIi11i . Oo0Ooo * OOooOOo % II111iiii . iii1I1I
     if 46 - 46: OoOoOO00 + I1IiiI % OoooooooOO * i11iIiiIii - Oo0Ooo
     if 47 - 47: iii1I1I * OoOoOO00 * O00oOoOoO0o0O
     if 46 - 46: Ii1I
     if 42 - 42: iIii1I11I1II1
     if 32 - 32: Oo0Ooo - Ii1I . OoooooooOO - OoooooooOO - Oo0Ooo . iIii1I11I1II1
     if 34 - 34: Oo0Ooo
  if Iii11iI1I . getFocus ( ) == o0ooO00O0O :
   if 31 - 31: i1IIi - I11i + O0oo0OO0 + Oo0ooO0oo0oO . Oo0ooO0oo0oO . O0
   I1 = o0ooO00O0O . getListItem ( o0ooO00O0O . getSelectedPosition ( ) ) . getLabel ( )
   if 33 - 33: i1IIi / iii1I1I * OoO0O00
   if 2 - 2: oO0o . OOooOOo
   oooOoO . controlUp ( ii1O0oOOo )
   if 33 - 33: I1IiiI * O0oo0OO0
   IIiII11 = "COLOR"
   if IIiII11 in I1 :
    oo0O00OOOOO = I1 . find ( ']' )
    OoOII11IiI1 = I1 [ oo0O00OOOOO + 1 : ]
    OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
    if 98 - 98: I1ii11iIi11i - OoooooooOO / I1IiiI . Oo0ooO0oo0oO - i1IIi
    I1 = OoOII11IiI1 [ : OoOOOO00oOO ]
    if 60 - 60: OoOoOO00 % OoOoOO00
   O00o0O00 = json . loads ( oO00ooooO0o )
   for oO00O in O00o0O00 :
    if oO00O [ 'name' ] == I1 :
     iiII1i1 = oO00O [ 'url' ]
     OoO = 'http://' + oO00O [ 'icon' ]
     iiI1IIIi = oO00O [ 'descr' ]
     II11IiIi11 = 'http://' + oO00O [ 'icon' ]
     I1Ii111I111 = '[COLOR=darkgray]' + oO00O [ 'author' ] + '[/COLOR]'
     if 2 - 2: Ii1I . O0 - oO0o + O00oOoOoO0o0O
     ii1I1 = oO00O [ 'rating' ]
     I1I1iiiiiIi1 = '[COLOR=darkgray]' + oO00O [ 'votes' ] + '[/COLOR]'
     i1Io00OOOo = oO00O [ 'votes' ]
     oo00OO0000oO = oO00O [ 'addonpath' ]
     o00oo0o = '[COLOR=darkgray]' + oO00O [ 'version' ] + '[/COLOR]'
     o0o0O00oOo = oO00O [ 'version' ]
     IIOOO0O00O0OOOO = '[COLOR=darkgray]This week: ' + oO00O [ 'thismonth' ] + ' / Total: ' + oO00O [ 'downloads' ] + '[/COLOR]'
     Ii1 = oO00O [ 'downloads' ]
     if 25 - 25: iii1I1I / iIii1I11I1II1 + I1IiiI / Oo0ooO0oo0oO
     global iiiI1iI1
     iiiI1iI1 . setImage ( II11IiIi11 )
     iiiI1iI1 . setVisible ( True )
     if 61 - 61: oO0o % I1ii11iIi11i * I11i . I11i
     iiII1iiiiiii . setLabel ( label = '[COLOR=darkgray]' + I1 + '[/COLOR]' )
     iiII1iiiiiii . setVisible ( True )
     if 20 - 20: Ii1I / iii1I1I + II111iiii . i11iIiiIii . OOooOOo
     iiIiii . setLabel ( label = '[COLOR=darkgray]Created by: [/COLOR]' + I1Ii111I111 )
     iiIiii . setVisible ( True )
     if 77 - 77: OoOoOO00
     oOO0ooo0O ( oo00OO0000oO )
     if 17 - 17: Oo0ooO0oo0oO
     if I1i111I == " " :
      iiI1ii . setLabel ( label = '[COLOR fuchsia]Not Installed[/COLOR]' )
      III1IiI1i1i . setLabel ( label = Ooo )
      III1IiI1i1i . setVisible ( False )
      o0OOOOOo0 . setVisible ( False )
      if 13 - 13: Oo0Ooo - I11i / oO0o - Oo0Ooo - iii1I1I / i11iIiiIii
     elif I1i111I <> o0o0O00oOo :
      iiI1ii . setLabel ( label = '[COLOR=lime]Installed[/COLOR]' )
      III1IiI1i1i . setLabel ( label = Ooo )
      III1IiI1i1i . setVisible ( True )
      o0OOOOOo0 . setVisible ( True )
      if 29 - 29: O00oOoOoO0o0O - I11i . O0 . O0
     elif I1i111I == o0o0O00oOo :
      iiI1ii . setLabel ( label = '[COLOR=lime]Installed[/COLOR]' )
      III1IiI1i1i . setLabel ( label = Ooo )
      III1IiI1i1i . setVisible ( True )
      o0OOOOOo0 . setVisible ( True )
      if 16 - 16: i1IIi * Oo0ooO0oo0oO % OoO0O00 + Ii1I
     else :
      iiI1ii . setLabel ( label = 'Unknown' )
      III1IiI1i1i . setLabel ( label = Ooo )
      III1IiI1i1i . setVisible ( True )
      o0OOOOOo0 . setVisible ( True )
      if 50 - 50: oO0o - OoooooooOO + iii1I1I % OoO0O00
     iiI1ii . setVisible ( True )
     O0OooOO . setVisible ( True )
     if 12 - 12: i1IIi / I1ii11iIi11i - iii1I1I . i11iIiiIii / i1IIi / OoooooooOO
     i1i1 . setLabel ( label = o00oo0o )
     if 88 - 88: Ii1I / i11iIiiIii % OoOoOO00 % OOooOOo
     if 70 - 70: I1ii11iIi11i . I1ii11iIi11i / I11i . I1ii11iIi11i
     if 37 - 37: i1IIi . O0oo0OO0 - II111iiii % o0oOOo0O0Ooo - i1IIi . oO0o
     oooOoO . setVisible ( True )
     O0Oo0 . setVisible ( True )
     iIIIi1IiI11I1 . setVisible ( True )
     if 34 - 34: iIii1I11I1II1 / II111iiii
     O0Ooo000 . setLabel ( label = I1I1iiiiiIi1 )
     O0Ooo000 . setVisible ( True )
     IIi11iI1Iii . setVisible ( True )
     if 3 - 3: o0oOOo0O0Ooo - OoooooooOO + iii1I1I . I11i
     if 88 - 88: I11i - iii1I1I
     I1IiiIiii1 . setLabel ( label = str ( IIOOO0O00O0OOOO ) )
     I1IiiIiii1 . setVisible ( True )
     i11i . setVisible ( True )
     if 68 - 68: Oo0Ooo % oO0o . O00oOoOoO0o0O - o0oOOo0O0Ooo / i1IIi / OoooooooOO
     if 34 - 34: I11i % Oo0Ooo + Ii1I
     IiIi1i . setVisible ( True )
     if 93 - 93: Ii1I - O0oo0OO0 % O0
     iI1i1Iiii ( ii1I1 , i1Io00OOOo )
     if 11 - 11: i11iIiiIii
     if 6 - 6: II111iiii
     if O0ooO0Oo00o == "staff" or O0ooO0Oo00o == "admin" or O0ooO0Oo00o == "uploader" :
      I1II . setVisible ( True )
      oooOoO . controlRight ( I1II )
      I1II . controlLeft ( oooOoO )
      iIIi1Ii1III . setVisible ( True )
      I1II . controlRight ( iIIi1Ii1III )
      iIIi1Ii1III . controlLeft ( I1II )
      if 1 - 1: Oo0ooO0oo0oO % Oo0Ooo . oO0o
      if 98 - 98: II111iiii + II111iiii - iIii1I11I1II1 . OoOoOO00 . O0oo0OO0
      if 99 - 99: oO0o . Ii1I * O0oo0OO0 * iIii1I11I1II1 / OoOoOO00 % O00oOoOoO0o0O
  if Iii11iI1I . getFocus ( ) == I11I11I11IiIi :
   if 70 - 70: I1ii11iIi11i . O0
   if 70 - 70: Oo0Ooo + i11iIiiIii
   I1 = I11I11I11IiIi . getListItem ( I11I11I11IiIi . getSelectedPosition ( ) ) . getLabel ( )
   if 44 - 44: i11iIiiIii / OOooOOo * Oo0ooO0oo0oO
   if 88 - 88: i1IIi % OOooOOo / OoooooooOO * iii1I1I % Oo0ooO0oo0oO
   if 5 - 5: I1ii11iIi11i * Ii1I % I11i % II111iiii
   oooOoO . controlUp ( ii1O0oOOo )
   if 9 - 9: o0oOOo0O0Ooo % O0oo0OO0 + I11i
   if 55 - 55: OoO0O00 - I1ii11iIi11i
   IIiII11 = "COLOR"
   if IIiII11 in I1 :
    oo0O00OOOOO = I1 . find ( ']' )
    OoOII11IiI1 = I1 [ oo0O00OOOOO + 1 : ]
    OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
    if 38 - 38: iIii1I11I1II1 % O00oOoOoO0o0O % OoO0O00 % O0 * iIii1I11I1II1 / O0oo0OO0
    I1 = OoOII11IiI1 [ : OoOOOO00oOO ]
    if 65 - 65: OOooOOo - I1IiiI * O0oo0OO0
    if 99 - 99: I1IiiI
   O00o0O00 = json . loads ( oo0o )
   for oO00O in O00o0O00 :
    if oO00O [ 'name' ] == I1 :
     iiII1i1 = oO00O [ 'url' ]
     OoO = 'http://' + oO00O [ 'icon' ]
     iiI1IIIi = oO00O [ 'descr' ]
     II11IiIi11 = 'http://' + oO00O [ 'icon' ]
     ii1I1 = oO00O [ 'rating' ]
     I1I1iiiiiIi1 = '[COLOR=darkgray]' + oO00O [ 'votes' ] + '[/COLOR]'
     i1Io00OOOo = oO00O [ 'votes' ]
     I1Ii111I111 = '[COLOR=darkgray]' + oO00O [ 'author' ] + '[/COLOR]'
     if 64 - 64: I1ii11iIi11i * Ii1I * Oo0Ooo % O00oOoOoO0o0O % Oo0ooO0oo0oO
     IIOOO0O00O0OOOO = '[COLOR=darkgray]' + oO00O [ 'downloads' ] + '[/COLOR]'
     Ii1 = oO00O [ 'downloads' ]
     if 55 - 55: II111iiii - O0oo0OO0 - OOooOOo % Ii1I
     global I1oOoO0OOO00O
     I1oOoO0OOO00O . setImage ( II11IiIi11 )
     I1oOoO0OOO00O . setVisible ( True )
     if 49 - 49: Oo0Ooo * O0oo0OO0
     if 53 - 53: Oo0Ooo / Ii1I + oO0o . iii1I1I + O00oOoOoO0o0O
     O0Ooo000 . setVisible ( True )
     IIi11iI1Iii . setVisible ( True )
     O0Ooo000 . setLabel ( label = I1I1iiiiiIi1 )
     if 19 - 19: Ii1I
     if 51 - 51: iIii1I11I1II1
     iiIiii . setLabel ( label = '[COLOR=darkgray]Created by: [/COLOR]' + I1Ii111I111 )
     iiIiii . setVisible ( True )
     if 8 - 8: OoO0O00 / o0oOOo0O0Ooo % iii1I1I . i11iIiiIii . OoooooooOO . Ii1I
     I1IiiIiii1 . setVisible ( True )
     i11i . setVisible ( True )
     I1IiiIiii1 . setLabel ( label = IIOOO0O00O0OOOO )
     if 8 - 8: OoO0O00 * Oo0Ooo
     IiIi1i . setVisible ( True )
     if 41 - 41: Oo0Ooo / OoO0O00 / OoOoOO00 - i11iIiiIii - OoOoOO00
     iI1i1Iiii ( ii1I1 , i1Io00OOOo )
     if 4 - 4: I11i . O00oOoOoO0o0O
     if 39 - 39: OOooOOo . Oo0Ooo - OoOoOO00 * i11iIiiIii
     if 4 - 4: OoOoOO00 * O0 - I11i
     oooOoO . setVisible ( True )
     O0Oo0 . setVisible ( True )
     O0OOO00 . setVisible ( True )
     if 72 - 72: I11i + Oo0ooO0oo0oO / I1IiiI . O00oOoOoO0o0O % OoO0O00 / i11iIiiIii
     if 13 - 13: O0oo0OO0 % o0oOOo0O0Ooo + OOooOOo + O0oo0OO0 + i11iIiiIii - I1ii11iIi11i
     if 70 - 70: II111iiii * II111iiii . I1IiiI
     if 11 - 11: iii1I1I
     if 20 - 20: Ii1I . O0oo0OO0 % Ii1I
     if 5 - 5: OOooOOo + iii1I1I
     if 23 - 23: O0oo0OO0 % iIii1I11I1II1 . I11i
     if 95 - 95: Oo0Ooo + i11iIiiIii % OOooOOo - oO0o
     if 11 - 11: I1ii11iIi11i / O0 + II111iiii
  if Iii11iI1I . getFocus ( ) == i1111iI1 :
   if 95 - 95: O0oo0OO0 + O00oOoOoO0o0O * iIii1I11I1II1
   iII1iI1IIiI . setVisible ( False )
   O00oo . setVisible ( False )
   OOoO0O000O . setVisible ( False )
   I1ii1Ii1OoO . setVisible ( False )
   iI111I1III . setVisible ( False )
   oO . setVisible ( False )
   i1i1iiIIiiiII . setVisible ( False )
   Ii1I1 . setVisible ( False )
   OO0ooO0 . setVisible ( False )
   OoOooOO0oOOo0O . setVisible ( False )
   Iiii1I . setVisible ( False )
   Ooo000000 . setVisible ( False )
   OOO0O00Oo . setVisible ( False )
   ii1oOOO0ooOO . setVisible ( False )
   i11 . setVisible ( False )
   IiI1iiI11 . setVisible ( False )
   OOoOOOO00 . setVisible ( False )
   if 17 - 17: OoO0O00 - Oo0Ooo * O0 / Ii1I
   OoooooOo . setVisible ( False )
   OooOo . setVisible ( False )
   oOo0 . setVisible ( False )
   I1Ii11i . setVisible ( False )
   I1iIiiiI1 . setVisible ( False )
   ooOOo0o . setVisible ( False )
   IiiiIi1iI1iI . setVisible ( False )
   OO00o . setVisible ( False )
   OOOOoOO0O . setVisible ( False )
   ii11I . setVisible ( False )
   Ii1I1 . setPercent ( iiii1ii1 )
   OoooooOo . setPercent ( Ii1i111iI )
   OOO0O00Oo . setPercent ( iII1ii )
   IiiiIi1iI1iI . setSelected ( False )
   OO00o . setSelected ( False )
   OOOOoOO0O . setSelected ( False )
   ii11I . setSelected ( False )
   O0Oo0O0 . setVisible ( False )
   OO00oo . setVisible ( False )
   oOO0OOOo000o . setVisible ( False )
   iII11ii1ii . setVisible ( False )
   oO0ooooo0O00 . setVisible ( False )
   I11i1I1ii1i1 . setVisible ( False )
   OO00oIii . setVisible ( False )
   if 51 - 51: o0oOOo0O0Ooo . I1ii11iIi11i * Ii1I / Oo0Ooo * II111iiii / O0
   I1 = i1111iI1 . getListItem ( i1111iI1 . getSelectedPosition ( ) ) . getLabel ( )
   if 44 - 44: i11iIiiIii % O0oo0OO0 % oO0o + I11i * oO0o . Ii1I
   IIiII11 = "COLOR"
   if IIiII11 in I1 :
    oo0O00OOOOO = I1 . find ( ']' )
    OoOII11IiI1 = I1 [ oo0O00OOOOO + 1 : ]
    OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
    if 89 - 89: OoooooooOO % II111iiii - OoO0O00 % i11iIiiIii
    I1 = OoOII11IiI1 [ : OoOOOO00oOO ]
    if 7 - 7: O00oOoOoO0o0O
    if 15 - 15: Oo0Ooo + iii1I1I + I1IiiI * o0oOOo0O0Ooo
   if I1 == "Advanced Settings Wizard" :
    if 33 - 33: o0oOOo0O0Ooo * Oo0Ooo
    OOoO0O000O . setVisible ( True )
    I1ii1Ii1OoO . setVisible ( True )
    iI . setVisible ( False )
    O0o . setVisible ( False )
    oO . setVisible ( False )
    O0Oo0O0 . setVisible ( False )
    OO00oo . setVisible ( False )
    oOO0OOOo000o . setVisible ( False )
    iII11ii1ii . setVisible ( False )
    oO0ooooo0O00 . setVisible ( False )
    I11i1I1ii1i1 . setVisible ( False )
    OO00oIii . setVisible ( False )
    I11i1I1ii1i1 . setVisible ( False )
    if 88 - 88: O0oo0OO0 % OOooOOo - OoOoOO00 - OoOoOO00 . I1IiiI
    if 52 - 52: II111iiii / II111iiii / I1IiiI - O0oo0OO0
    i1111iI1 . controlRight ( I1ii1Ii1OoO )
    I1ii1Ii1OoO . controlLeft ( i1111iI1 )
    I1ii1Ii1OoO . controlUp ( Oo0OOo )
    iI111I1III . controlLeft ( i1111iI1 )
    iI111I1III . controlUp ( Oo0OOo )
    oO . controlUp ( Oo0OOo )
    oO . controlLeft ( i1111iI1 )
    if 43 - 43: O00oOoOoO0o0O % Ii1I . OOooOOo / Oo0Ooo
    if 55 - 55: I1ii11iIi11i % OoooooooOO
    if 73 - 73: i1IIi - iii1I1I % oO0o / i1IIi + II111iiii + I1ii11iIi11i
   if I1 == "IceFilms: Blocked URL fix" :
    if 54 - 54: oO0o
    if 26 - 26: Oo0ooO0oo0oO % OoooooooOO . O0oo0OO0 * Oo0ooO0oo0oO + II111iiii - I1ii11iIi11i
    if 20 - 20: OoO0O00
    OOoO0O000O . setVisible ( False )
    I1ii1Ii1OoO . setVisible ( False )
    iI . setVisible ( False )
    O0o . setVisible ( False )
    oO . setVisible ( False )
    O0Oo0O0 . setVisible ( False )
    OO00oo . setVisible ( False )
    oOO0OOOo000o . setVisible ( False )
    iII11ii1ii . setVisible ( False )
    oO0ooooo0O00 . setVisible ( False )
    I11i1I1ii1i1 . setVisible ( False )
    OO00oIii . setVisible ( False )
    I11i1I1ii1i1 . setVisible ( False )
    if 99 - 99: Oo0Ooo + OoooooooOO . iii1I1I + O0
    if 85 - 85: II111iiii - Ii1I
    if 93 - 93: O00oOoOoO0o0O / i11iIiiIii - oO0o + OoO0O00 / i1IIi
    O0Oo0O0 . setVisible ( True )
    I1 = "IceFilms"
    OO0oO = translate ( 'special://home/userdata/addon_data/plugin.video.icefilms' )
    i1iI1i11iIi = os . path . join ( OO0oO , 'settings.xml' )
    if 85 - 85: OoooooooOO + OoooooooOO
    try :
     iiII = open ( i1iI1i11iIi , 'r' )
     ii1IIIIi1 = iiII . read ( )
     if 50 - 50: I1IiiI - oO0o + oO0o * I11i + oO0o
     oOo0OOoO0 = IIIi11I11 ( ii1IIIIi1 , '<setting id="icefilms-url" value="' , '" />' )
     if 70 - 70: i1IIi % OoO0O00 / i1IIi
    except :
     iIi1i1I1I = translate ( 'special://home/addons/plugin.video.icefilms/resources' )
     i11iiiI = os . path . join ( iIi1i1I1I , 'settings.xml' )
     if 100 - 100: O00oOoOoO0o0O / I1ii11iIi11i - iii1I1I
     O0o0o0 = open ( i11iiiI , 'r' )
     ii1IIIIi1 = O0o0o0 . read ( )
     if 6 - 6: O0oo0OO0
     oOo0OOoO0 = IIIi11I11 ( ii1IIIIi1 , '<setting id="icefilms-url" type="text" label="30100" default="' , '" />' )
     if 46 - 46: II111iiii * O0oo0OO0
     string = '<settings>\n	<setting id="icefilms-url" value="' + oOo0OOoO0 + '" />\n</settings>'
     if 23 - 23: i1IIi - O0
     try :
      os . makedirs ( OO0oO )
     except :
      pass
      if 6 - 6: Oo0ooO0oo0oO % OoooooooOO * O0oo0OO0 - O00oOoOoO0o0O
     o0o0Ooo0 = open ( i1iI1i11iIi , 'w' )
     o0o0Ooo0 . write ( string )
     o0o0Ooo0 . close ( )
     if 24 - 24: I11i / iIii1I11I1II1 . OoooooooOO % OoOoOO00 . Ii1I
     if 73 - 73: O0oo0OO0
     if 25 - 25: O00oOoOoO0o0O
     if 77 - 77: o0oOOo0O0Ooo . iIii1I11I1II1 . OoooooooOO . iIii1I11I1II1
     if 87 - 87: II111iiii - OoooooooOO / i1IIi . Ii1I - Oo0Ooo . i11iIiiIii
    if oOo0OOoO0 == "" :
     OO00oIii . setLabel ( '[COLOR=darkgray]' + I1 + ooO ( "unblocklabelbad" ) + '[/COLOR]' )
     if 47 - 47: Oo0Ooo % OoO0O00 - Oo0ooO0oo0oO - Oo0Ooo * oO0o
    else :
     if 72 - 72: o0oOOo0O0Ooo % o0oOOo0O0Ooo + iii1I1I + I1ii11iIi11i / Oo0Ooo
     OO00oo . setLabel ( '[COLOR=darkgray]' + ooO ( "unblocklabel2" ) + I1 + ':[/COLOR]' )
     OO00oo . setVisible ( True )
     if 30 - 30: Oo0Ooo + I1IiiI + i11iIiiIii / OoO0O00
     oOO0OOOo000o . setLabel ( '[COLOR=darkgray]' + oOo0OOoO0 + '[/COLOR]' )
     oOO0OOOo000o . setVisible ( True )
     if 64 - 64: O00oOoOoO0o0O
     iII11ii1ii . setVisible ( True )
     if 80 - 80: I1IiiI - i11iIiiIii / OoO0O00 / OoOoOO00 + OoOoOO00
     if 89 - 89: O0 + O00oOoOoO0o0O * O0oo0OO0
     IIo0Oo0oO0oOO00 = iIIIIII ( 'plugin.video.icefilms' )
     oO0ooooo0O00 . setLabel ( '[COLOR=darkgray]' + IIo0Oo0oO0oOO00 + '[/COLOR]' )
     oO0ooooo0O00 . setVisible ( True )
     if 48 - 48: OoOoOO00 * OoooooooOO + OoooooooOO * iIii1I11I1II1 * II111iiii % i11iIiiIii
     I11i1I1ii1i1 . setVisible ( True )
     if 22 - 22: OoO0O00 . OoOoOO00 % II111iiii - O0
     oo00OO0000oO = "plugin.video.icefilms"
     if 52 - 52: OoO0O00
     i1111iI1 . controlRight ( I11i1I1ii1i1 )
     I11i1I1ii1i1 . controlLeft ( i1111iI1 )
     I11i1I1ii1i1 . controlUp ( Oo0OOo )
     if 49 - 49: Ii1I . I1ii11iIi11i % Oo0ooO0oo0oO . Oo0Ooo * OOooOOo
     if 44 - 44: iIii1I11I1II1 / O0 * Oo0Ooo + I1IiiI . Oo0ooO0oo0oO
     if 20 - 20: iii1I1I + o0oOOo0O0Ooo . O0oo0OO0 / i11iIiiIii
     if 7 - 7: OoOoOO00 / OoOoOO00 . O0oo0OO0 * O0 + O00oOoOoO0o0O + oO0o
   if I1 == "Primewire\\1Channel: Blocked URL fix" :
    if 98 - 98: II111iiii * O00oOoOoO0o0O - I1IiiI % o0oOOo0O0Ooo - iii1I1I % I1ii11iIi11i
    if 69 - 69: i1IIi % OoO0O00 % O0oo0OO0 / Oo0ooO0oo0oO / Oo0ooO0oo0oO
    if 6 - 6: II111iiii % I1ii11iIi11i % i1IIi * Oo0ooO0oo0oO
    OOoO0O000O . setVisible ( False )
    I1ii1Ii1OoO . setVisible ( False )
    iI . setVisible ( False )
    O0o . setVisible ( False )
    oO . setVisible ( False )
    O0Oo0O0 . setVisible ( False )
    OO00oo . setVisible ( False )
    oOO0OOOo000o . setVisible ( False )
    iII11ii1ii . setVisible ( False )
    oO0ooooo0O00 . setVisible ( False )
    I11i1I1ii1i1 . setVisible ( False )
    OO00oIii . setVisible ( False )
    I11i1I1ii1i1 . setVisible ( False )
    if 47 - 47: O0
    if 55 - 55: OoO0O00 % O0 / OoooooooOO
    if 49 - 49: I1IiiI . OoO0O00 * OoooooooOO % i11iIiiIii + iIii1I11I1II1 * i1IIi
    O0Oo0O0 . setVisible ( True )
    I1 = "1Channel"
    OO0oO = translate ( 'special://home/userdata/addon_data/plugin.video.1channel' )
    i1iI1i11iIi = os . path . join ( OO0oO , 'settings.xml' )
    if 88 - 88: I1ii11iIi11i * iii1I1I + II111iiii
    if 62 - 62: OoooooooOO
    if 33 - 33: O0 . i11iIiiIii % o0oOOo0O0Ooo
    try :
     iiII = open ( i1iI1i11iIi , 'r' )
     ii1IIIIi1 = iiII . read ( )
     if 50 - 50: Oo0ooO0oo0oO
     oOo0OOoO0 = IIIi11I11 ( ii1IIIIi1 , '<setting id="customDomain" value="' , '" />' )
     if 81 - 81: i11iIiiIii * iIii1I11I1II1 / Oo0Ooo * OOooOOo
    except :
     iIi1i1I1I = translate ( 'special://home/addons/plugin.video.1channel/resources' )
     i11iiiI = os . path . join ( iIi1i1I1I , 'settings.xml' )
     if 83 - 83: i11iIiiIii - I1IiiI * i11iIiiIii
     if 59 - 59: iii1I1I - OoooooooOO / Oo0ooO0oo0oO + I1ii11iIi11i . o0oOOo0O0Ooo - iii1I1I
     if 29 - 29: oO0o
     O0o0o0 = open ( i11iiiI , 'r' )
     ii1IIIIi1 = O0o0o0 . read ( )
     if 26 - 26: O0 % OOooOOo - O00oOoOoO0o0O . OOooOOo
     oOo0OOoO0 = IIIi11I11 ( ii1IIIIi1 , ' default="' , '"/>' )
     if 70 - 70: o0oOOo0O0Ooo + I11i / iii1I1I + Oo0ooO0oo0oO / I1IiiI
     if 33 - 33: OoooooooOO . O0
     if 59 - 59: iIii1I11I1II1
     string = '<settings>\n	<setting id="customDomain" value="' + oOo0OOoO0 + '" />\n	<setting id="enableDomain" value="true" />\n</settings>'
     if 45 - 45: O0
     if 78 - 78: I11i - iIii1I11I1II1 + O0oo0OO0 - I1ii11iIi11i - O0oo0OO0
     if 21 - 21: OoooooooOO . O0 / i11iIiiIii
     try :
      os . makedirs ( OO0oO )
     except :
      pass
     o0o0Ooo0 = open ( i1iI1i11iIi , 'w' )
     o0o0Ooo0 . write ( string )
     o0o0Ooo0 . close ( )
     if 86 - 86: OoOoOO00 / OOooOOo
    if o000oo == "true" :
     print oOo0OOoO0
     if 40 - 40: iIii1I11I1II1 / Oo0ooO0oo0oO / I1IiiI + I1ii11iIi11i * OOooOOo
     if 1 - 1: OoO0O00 * Oo0ooO0oo0oO + O00oOoOoO0o0O . oO0o / Oo0ooO0oo0oO
    if oOo0OOoO0 == "" :
     OO00oIii . setLabel ( '[COLOR=darkgray]' + I1 + ooO ( "unblocklabelbad" ) + '[/COLOR]' )
     if 91 - 91: Ii1I + I11i - Oo0Ooo % OoOoOO00 . iii1I1I
    else :
     if 51 - 51: OOooOOo / I11i
     OO00oo . setLabel ( '[COLOR=darkgray]' + ooO ( "unblocklabel2" ) + I1 + ':[/COLOR]' )
     OO00oo . setVisible ( True )
     if 51 - 51: Oo0ooO0oo0oO * oO0o - O0oo0OO0 + iii1I1I
     oOO0OOOo000o . setLabel ( '[COLOR=darkgray]' + oOo0OOoO0 + '[/COLOR]' )
     oOO0OOOo000o . setVisible ( True )
     if 46 - 46: o0oOOo0O0Ooo - i11iIiiIii % OoO0O00 / Ii1I - OoOoOO00
     iII11ii1ii . setVisible ( True )
     if 88 - 88: oO0o * I1IiiI / OoO0O00 - OOooOOo / i1IIi . O0oo0OO0
     if 26 - 26: i11iIiiIii - Oo0ooO0oo0oO
     IIo0Oo0oO0oOO00 = iIIIIII ( 'plugin.video.1channel' )
     oO0ooooo0O00 . setLabel ( '[COLOR=darkgray]' + IIo0Oo0oO0oOO00 + '[/COLOR]' )
     oO0ooooo0O00 . setVisible ( True )
     if 45 - 45: Oo0ooO0oo0oO + II111iiii % iii1I1I
     I11i1I1ii1i1 . setVisible ( True )
     if 55 - 55: Oo0ooO0oo0oO - oO0o % I1IiiI
     oo00OO0000oO = "plugin.video.1channel"
     if 61 - 61: Oo0ooO0oo0oO
     i1111iI1 . controlRight ( I11i1I1ii1i1 )
     I11i1I1ii1i1 . controlLeft ( i1111iI1 )
     I11i1I1ii1i1 . controlUp ( Oo0OOo )
     if 22 - 22: iIii1I11I1II1 / Oo0ooO0oo0oO / I1IiiI - o0oOOo0O0Ooo
     if 21 - 21: oO0o . i11iIiiIii * I11i . OOooOOo / OOooOOo
     if 42 - 42: OoooooooOO / O0oo0OO0 . o0oOOo0O0Ooo / O0 - O00oOoOoO0o0O * O00oOoOoO0o0O
     if 1 - 1: Ii1I % O0oo0OO0
  if Iii11iI1I . getFocus ( ) == O00ooooo00 :
   if 97 - 97: OoOoOO00
   I1 = O00ooooo00 . getListItem ( O00ooooo00 . getSelectedPosition ( ) ) . getLabel ( )
   if 13 - 13: OoOoOO00 % OOooOOo . O0 / Oo0Ooo % Oo0Ooo
   if 19 - 19: O0oo0OO0 % Oo0ooO0oo0oO - Oo0ooO0oo0oO % I1IiiI . OOooOOo - OoooooooOO
   IIiII11 = "COLOR"
   if IIiII11 in I1 :
    oo0O00OOOOO = I1 . find ( ']' )
    OoOII11IiI1 = I1 [ oo0O00OOOOO + 1 : ]
    OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
    I1 = OoOII11IiI1 [ : OoOOOO00oOO ]
    if 100 - 100: I1IiiI + Ii1I + o0oOOo0O0Ooo . i1IIi % OoooooooOO
    if 64 - 64: O0 % i1IIi * O0oo0OO0 - Ii1I + Oo0Ooo
    if 65 - 65: OoOoOO00 . i11iIiiIii
    if 36 - 36: oO0o * iii1I1I + O00oOoOoO0o0O * iii1I1I . I1ii11iIi11i - iIii1I11I1II1
    if 14 - 14: I11i * oO0o + i11iIiiIii
    if 84 - 84: iii1I1I / II111iiii
   if I1 == "System Information" :
    if 86 - 86: I1IiiI
    pass
    if 97 - 97: II111iiii
    if 38 - 38: I1IiiI
   if I1 == "Suggestions welcome.." :
    pass
    if 42 - 42: o0oOOo0O0Ooo
    if 8 - 8: i11iIiiIii / Oo0ooO0oo0oO
    if 33 - 33: O0oo0OO0 * O00oOoOoO0o0O - O0 + I1IiiI / O00oOoOoO0o0O
    if 19 - 19: i1IIi % II111iiii
   if I1 == "Internet Speed Test" :
    if 85 - 85: O00oOoOoO0o0O - o0oOOo0O0Ooo % OOooOOo - II111iiii
    pass
    if 56 - 56: Ii1I * i11iIiiIii
    if 92 - 92: II111iiii - O0 . O0oo0OO0
    if 59 - 59: OoOoOO00
    if 47 - 47: II111iiii - I1ii11iIi11i - Ii1I
    if 9 - 9: I1ii11iIi11i - O00oOoOoO0o0O
    if 64 - 64: i1IIi
    if 71 - 71: O00oOoOoO0o0O * o0oOOo0O0Ooo
  else :
   pass
 except :
  pass
  if 99 - 99: o0oOOo0O0Ooo
  if 28 - 28: OoooooooOO % O0 - OOooOOo / o0oOOo0O0Ooo / I1IiiI
  if 41 - 41: II111iiii * O00oOoOoO0o0O / OoO0O00 . oO0o
  if 50 - 50: OoooooooOO + iIii1I11I1II1 / oO0o / OOooOOo . i11iIiiIii . Oo0ooO0oo0oO
def iIii111Ii ( path , showerror ) :
 if 75 - 75: iIii1I11I1II1 % Oo0ooO0oo0oO / OOooOOo - iii1I1I % i11iIiiIii
 path = path . encode ( 'utf-8' )
 if 11 - 11: I11i . Ii1I
 if 87 - 87: OOooOOo + OOooOOo
 if iiiiiIIii in path and ooO0oOOooOo0 <> "yes" :
  return ( 'downloadfailed' )
  if 45 - 45: i1IIi - Oo0Ooo
 if iiiiiIIii in path and i1I1ii11i1Iii <> "yes" :
  return ( 'downloadfailed' )
  if 87 - 87: OoOoOO00 - OoO0O00 * OoO0O00 / Ii1I . I11i * o0oOOo0O0Ooo
  if 21 - 21: II111iiii
 if I11iii1Ii in path :
  if 29 - 29: OoOoOO00 % Ii1I
  path = path . replace ( I11iii1Ii , I1IIiiIiii )
  if 7 - 7: i1IIi / O00oOoOoO0o0O / iii1I1I
  if 97 - 97: OoO0O00 + iIii1I11I1II1
 xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
 xbmc . executebuiltin ( "ActivateWindow(busydialog)" )
 if 79 - 79: Oo0ooO0oo0oO + oO0o - II111iiii . Oo0Ooo
 iIiIi1i1ii11 = urllib2 . Request ( path )
 iIiIi1i1ii11 . add_header ( 'User-Agent' , ii1I1i1I )
 if 86 - 86: O0oo0OO0 * Oo0ooO0oo0oO - Oo0ooO0oo0oO . I1IiiI
 if 69 - 69: i11iIiiIii - iIii1I11I1II1 / Ii1I / II111iiii
 if 81 - 81: OOooOOo - I1ii11iIi11i * Oo0Ooo + oO0o
 if 90 - 90: Oo0Ooo * Ii1I
 if 54 - 54: I1ii11iIi11i + iIii1I11I1II1 % O00oOoOoO0o0O
 try :
  II1iOo0ooo0 = urllib2 . urlopen ( iIiIi1i1ii11 )
  if 41 - 41: O00oOoOoO0o0O - O0 * oO0o * II111iiii . I11i - O0oo0OO0
 except HTTPError , ii111I1iIiIi111I :
  if 17 - 17: I1ii11iIi11i * OoooooooOO % i1IIi % OoooooooOO . iii1I1I
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  iIo0O000O00o = ii111I1iIiIi111I . code
  if 38 - 38: OoooooooOO . iii1I1I
  if showerror == "Yes" :
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "HTTP Error" , str ( iIo0O000O00o ) , "" , "" )
  print '@Ares: HTTP Error: ' + str ( iIo0O000O00o )
  if o000oo == "true" :
   print path
  return ( 'downloadfailed' )
  if 43 - 43: OoooooooOO
 except URLError , ii111I1iIiIi111I :
  if 8 - 8: OOooOOo + I11i . I11i
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  iIo0O000O00o = ii111I1iIiIi111I . reason
  if 89 - 89: I1ii11iIi11i * I1ii11iIi11i * OoOoOO00 / iii1I1I
  if showerror == "Yes" :
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "URL Error" , str ( iIo0O000O00o ) , "" , "" )
  print '@Ares: URL Error: ' + str ( iIo0O000O00o )
  if o000oo == "true" :
   print path
  return ( 'downloadfailed' )
 except IOError , ii111I1iIiIi111I :
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  iIo0O000O00o = ii111I1iIiIi111I . errno
  if 60 - 60: OoO0O00 / iii1I1I / I1IiiI + oO0o
  Ooo0OoO0oo0O = ii111I1iIiIi111I . strerror
  if 86 - 86: oO0o + iii1I1I % OoooooooOO . O00oOoOoO0o0O
  if showerror == "Yes" :
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "IO Error" , str ( iIo0O000O00o ) + " - " + str ( Ooo0OoO0oo0O ) , "" , "" )
  print '@Ares: IO Error: ' + str ( iIo0O000O00o ) + ' - ' + str ( Ooo0OoO0oo0O )
  if o000oo == "true" :
   print path
  return ( 'downloadfailed' )
 except ssl . SSLError , ii111I1iIiIi111I :
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  iIo0O000O00o = ii111I1iIiIi111I . reason
  if 80 - 80: O00oOoOoO0o0O . o0oOOo0O0Ooo
  print '@Ares: SSL Error: ' + str ( iIo0O000O00o )
  if showerror == "Yes" :
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Ares Wizard" , "Failed to reach Ares server (SSL Error) this could be due to security restrictions on your network." )
  if o000oo == "true" :
   print path
  return ( 'downloadfailed' )
  if 8 - 8: o0oOOo0O0Ooo . II111iiii . iii1I1I - i11iIiiIii
 except Exception , ii111I1iIiIi111I :
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  iIo0O000O00o = ii111I1iIiIi111I . reason
  if 50 - 50: Ii1I . O0 % OoO0O00 . oO0o + Ii1I . OoOoOO00
  if iIo0O000O00o == "" :
   iIo0O000O00o = "Unknown Exception"
  if showerror == "Yes" :
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Unknown Error" , str ( iIo0O000O00o ) , "" , "" )
  print '@Ares: Unknown Error: ' + str ( iIo0O000O00o )
  if o000oo == "true" :
   print path
  return ( 'downloadfailed' )
  if 69 - 69: i11iIiiIii + i11iIiiIii . i11iIiiIii - i11iIiiIii % Ii1I / iii1I1I
 except :
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  if showerror == "Yes" :
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Unknown Error" , "Unspecified Error (sorry)" , "" , "" )
  print '@Ares: Unknown Error: Unspecified'
  if o000oo == "true" :
   print path
  return ( 'downloadfailed' )
  if 59 - 59: OoooooooOO
  if 96 - 96: Ii1I
 try :
  o0O00o00Ooo = II1iOo0ooo0 . read ( )
  if 16 - 16: OOooOOo . II111iiii - Ii1I - OoooooooOO
 except socket . timeout :
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  if showerror == "Yes" :
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Socket Error" , "Socket Timeout" , "" , "" )
  print '@Ares: Socket Error: Socket Timeout'
  if o000oo == "true" :
   print path
  return ( 'downloadfailed' )
  if 83 - 83: i11iIiiIii - Oo0Ooo
  if 5 - 5: I1ii11iIi11i . II111iiii . i1IIi
 except socket . error :
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  if showerror == "Yes" :
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Socket Error" , "Socket Error" , "" , "" )
  print '@Ares: Socket Error: Socket Error'
  if o000oo == "true" :
   print path
  return ( 'downloadfailed' )
  if 35 - 35: o0oOOo0O0Ooo + OoO0O00 - I1ii11iIi11i
 xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
 if 24 - 24: II111iiii
 return ( o0O00o00Ooo )
 if 23 - 23: Oo0Ooo - iii1I1I
 if 79 - 79: I11i . O0 - i1IIi
 if 42 - 42: oO0o - i11iIiiIii % oO0o - O0oo0OO0 * O0 / II111iiii
 if 5 - 5: Oo0Ooo
 if 84 - 84: I1ii11iIi11i
def oo0o0O0OO ( path , showerror ) :
 if 77 - 77: II111iiii . O0 . oO0o % II111iiii
 if 18 - 18: I11i % OoooooooOO + OoO0O00 / I11i
 path = path . encode ( 'utf-8' )
 if 37 - 37: i1IIi - Ii1I / O00oOoOoO0o0O . II111iiii % Oo0ooO0oo0oO
 if 39 - 39: Ii1I % i11iIiiIii * OoO0O00
 if iiiiiIIii in path and ooO0oOOooOo0 <> "yes" :
  return ( 'downloadfailed' )
  if 23 - 23: OOooOOo + Oo0ooO0oo0oO / i11iIiiIii * Oo0Ooo . OoO0O00
 if iiiiiIIii in path and i1I1ii11i1Iii <> "yes" :
  return ( 'downloadfailed' )
  if 28 - 28: iii1I1I - o0oOOo0O0Ooo
  if 92 - 92: Oo0Ooo % o0oOOo0O0Ooo - Oo0ooO0oo0oO / Oo0ooO0oo0oO / OoOoOO00
  if 84 - 84: OOooOOo
 if I11iii1Ii in path :
  if 4 - 4: O00oOoOoO0o0O . O0oo0OO0 / Ii1I / iii1I1I + II111iiii
  path = path . replace ( I11iii1Ii , I1IIiiIiii )
  if 32 - 32: i1IIi + iIii1I11I1II1 . I1ii11iIi11i . I11i - Ii1I
  if 55 - 55: I1ii11iIi11i / OoooooooOO - OoO0O00 / I1IiiI
  if 23 - 23: I11i * O0oo0OO0 * o0oOOo0O0Ooo - I1IiiI % OoOoOO00 + o0oOOo0O0Ooo
  if 41 - 41: O00oOoOoO0o0O * OoooooooOO . Oo0ooO0oo0oO % i11iIiiIii
 xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
 xbmc . executebuiltin ( "ActivateWindow(busydialog)" )
 if 11 - 11: iIii1I11I1II1 . O0oo0OO0 - Oo0Ooo / I11i + II111iiii
 iIiIi1i1ii11 = urllib2 . Request ( path )
 iIiIi1i1ii11 . add_header ( 'User-Agent' , I1ii1Ii1 )
 if 29 - 29: I11i . i11iIiiIii + i1IIi - Ii1I + O0 . I1IiiI
 if 8 - 8: o0oOOo0O0Ooo
 if 78 - 78: i1IIi - Oo0Ooo
 if 48 - 48: Ii1I - OoooooooOO + O0oo0OO0 % o0oOOo0O0Ooo - OoOoOO00 . I1IiiI
 if 42 - 42: O0oo0OO0
 try :
  II1iOo0ooo0 = urllib2 . urlopen ( iIiIi1i1ii11 )
  if 70 - 70: o0oOOo0O0Ooo / I11i + oO0o % I1IiiI % Oo0Ooo + OoO0O00
 except HTTPError , ii111I1iIiIi111I :
  if 80 - 80: OOooOOo
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  iIo0O000O00o = ii111I1iIiIi111I . code
  if 12 - 12: Ii1I
  if showerror == "Yes" :
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "HTTP Error" , str ( iIo0O000O00o ) , "" , "" )
  print '@Ares: HTTP Error: ' + str ( iIo0O000O00o )
  if o000oo == "true" :
   print path
  return ( 'downloadfailed' )
  if 2 - 2: OoooooooOO
 except URLError , ii111I1iIiIi111I :
  if 100 - 100: Oo0Ooo / O0 * i11iIiiIii * OoooooooOO
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  iIo0O000O00o = ii111I1iIiIi111I . reason
  if 46 - 46: O0 % OoooooooOO
  if showerror == "Yes" :
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "URL Error" , str ( iIo0O000O00o ) , "" , "" )
  print '@Ares: URL Error: ' + str ( iIo0O000O00o )
  if o000oo == "true" :
   print path
  return ( 'downloadfailed' )
 except IOError , ii111I1iIiIi111I :
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  iIo0O000O00o = ii111I1iIiIi111I . errno
  if 22 - 22: iii1I1I + OoooooooOO - OoOoOO00 - OoO0O00 * O0oo0OO0 - oO0o
  Ooo0OoO0oo0O = ii111I1iIiIi111I . strerror
  if 99 - 99: Oo0ooO0oo0oO / I1IiiI . Ii1I - Ii1I * I1IiiI
  if showerror == "Yes" :
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "IO Error" , str ( iIo0O000O00o ) + " - " + str ( Ooo0OoO0oo0O ) , "" , "" )
  print '@Ares: IO Error: ' + str ( iIo0O000O00o ) + ' - ' + str ( Ooo0OoO0oo0O )
  if o000oo == "true" :
   print path
  return ( 'downloadfailed' )
 except ssl . SSLError , ii111I1iIiIi111I :
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  iIo0O000O00o = ii111I1iIiIi111I . reason
  if 24 - 24: I11i * OoO0O00 - oO0o / iIii1I11I1II1 - Oo0Ooo . OOooOOo
  print '@Ares: SSL Error: ' + str ( iIo0O000O00o )
  if showerror == "Yes" :
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Ares Wizard" , "Failed to reach Ares server (SSL Error) this could be due to security restrictions on your network." )
  if o000oo == "true" :
   print path
  return ( 'downloadfailed' )
 except Exception , ii111I1iIiIi111I :
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  iIo0O000O00o = ii111I1iIiIi111I . reason
  if 2 - 2: Oo0ooO0oo0oO - O0 - I1ii11iIi11i / I11i * OoOoOO00
  if showerror == "Yes" :
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Unknown Error" , str ( iIo0O000O00o ) , "" , "" )
  print '@Ares: Unknown Error: ' + str ( iIo0O000O00o )
  if o000oo == "true" :
   print path
  return ( 'downloadfailed' )
  if 26 - 26: I1ii11iIi11i + O0oo0OO0 - oO0o + O00oOoOoO0o0O % OOooOOo
 except :
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  if showerror == "Yes" :
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Unknown Error" , "Unspecified Error (sorry)" , "" , "" )
  print '@Ares: Unknown Error: Unspecified'
  if o000oo == "true" :
   print path
  return ( 'downloadfailed' )
  if 84 - 84: I11i % Ii1I % O0 * o0oOOo0O0Ooo
  if 15 - 15: oO0o - iIii1I11I1II1 - II111iiii - O00oOoOoO0o0O % I1ii11iIi11i
 try :
  o0O00o00Ooo = II1iOo0ooo0 . read ( )
  if 80 - 80: O00oOoOoO0o0O * iii1I1I . i1IIi % Ii1I % I1ii11iIi11i + Oo0ooO0oo0oO
 except socket . timeout :
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  if showerror == "Yes" :
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Socket Error" , "Socket Timeout" , "" , "" )
  print '@Ares: Socket Error: Socket Timeout'
  if o000oo == "true" :
   print path
  return ( 'downloadfailed' )
  if 6 - 6: I1ii11iIi11i . oO0o . OoO0O00 + O00oOoOoO0o0O
  if 65 - 65: I1ii11iIi11i / Oo0ooO0oo0oO
 except socket . error :
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  if showerror == "Yes" :
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Socket Error" , "Socket Error" , "" , "" )
  print '@Ares: Socket Error: Socket Error'
  if o000oo == "true" :
   print path
  return ( 'downloadfailed' )
  if 23 - 23: OOooOOo / OOooOOo * o0oOOo0O0Ooo * OOooOOo
 xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
 if 57 - 57: iii1I1I
 return ( o0O00o00Ooo )
 if 29 - 29: I1IiiI
 if 41 - 41: O0oo0OO0 * OoO0O00 - iii1I1I . Ii1I
 if 41 - 41: iIii1I11I1II1 - O0 - I1ii11iIi11i - oO0o + O0oo0OO0
def Ii1111iI1i1 ( ) :
 if 78 - 78: I1ii11iIi11i . iii1I1I % II111iiii
 if 90 - 90: OoooooooOO % i11iIiiIii % o0oOOo0O0Ooo % O0oo0OO0 - Oo0ooO0oo0oO + iIii1I11I1II1
 global iii11
 global o00oOO0o
 global OOO00O
 global OOoOO0oo0ooO
 global i1
 global Oo00
 global i1i
 global iiI111I1iIiI
 global II
 global Ii1I1IIii1II
 global O0ii1ii1ii
 global oooooOoo0ooo
 global I1I1IiI1
 global O0OOO
 if 98 - 98: O0 / oO0o / iii1I1I
 if 83 - 83: O0oo0OO0
 if 38 - 38: oO0o
 global OOoOO0oo0ooO
 OOoOO0oo0ooO = xbmc . getInfoLabel ( 'System.CpuFrequency' )
 if 9 - 9: I11i . OoO0O00 . oO0o / OoooooooOO
 while "MHz" not in OOoOO0oo0ooO :
  OOoOO0oo0ooO = xbmc . getInfoLabel ( 'System.CpuFrequency' )
  if 59 - 59: iIii1I11I1II1 + i1IIi % II111iiii
 OOoOO0oo0ooO = OOoOO0oo0ooO . decode ( 'utf-8' )
 if 2 - 2: II111iiii + I11i . OoO0O00
 if 14 - 14: OOooOOo * I1IiiI - I1ii11iIi11i
 if 10 - 10: iii1I1I % O0oo0OO0 * I1ii11iIi11i * O0 * i11iIiiIii % O0oo0OO0
 iii11 = xbmc . getInfoLabel ( 'System.VideoEncoderInfo' )
 if 68 - 68: OoooooooOO * OoOoOO00
 while "GPU:" not in iii11 :
  iii11 = xbmc . getInfoLabel ( 'System.VideoEncoderInfo' )
  if 9 - 9: O0oo0OO0
 iii11 = iii11 . strip ( "GPU: " )
 if 36 - 36: O0oo0OO0 / OoOoOO00 + OoOoOO00 * Oo0ooO0oo0oO / OOooOOo * O0
 if 17 - 17: OoO0O00 / Oo0ooO0oo0oO % I1IiiI
 if 47 - 47: Oo0Ooo * OoO0O00 / o0oOOo0O0Ooo * I1IiiI
 iii11 = iii11 . decode ( 'utf-8' )
 if 60 - 60: I1ii11iIi11i / O00oOoOoO0o0O . i11iIiiIii / OoO0O00 % II111iiii
 if 6 - 6: iii1I1I % o0oOOo0O0Ooo + O0oo0OO0
 global o00oOO0o
 o00oOO0o = xbmc . getInfoLabel ( 'System.KernelVersion' )
 if 91 - 91: o0oOOo0O0Ooo + O0 * oO0o * O00oOoOoO0o0O * I1ii11iIi11i
 while "kernel" not in o00oOO0o :
  o00oOO0o = xbmc . getInfoLabel ( 'System.KernelVersion' )
  if 83 - 83: OoooooooOO
 o00oOO0o = o00oOO0o . decode ( 'utf-8' )
 if 52 - 52: o0oOOo0O0Ooo / OoOoOO00 % oO0o % OoO0O00 / O00oOoOoO0o0O % o0oOOo0O0Ooo
 if 88 - 88: OOooOOo / i11iIiiIii / Ii1I / i11iIiiIii * I1ii11iIi11i % I11i
 if 43 - 43: OoOoOO00 * OoO0O00 % i1IIi * Ii1I + iIii1I11I1II1
 OOO00O = xbmc . getInfoLabel ( 'Network.MacAddress' )
 if 80 - 80: o0oOOo0O0Ooo . iii1I1I . OoooooooOO
 while OOO00O . find ( ':' ) == - 1 :
  OOO00O = xbmc . getInfoLabel ( 'Network.MacAddress' )
  if 63 - 63: Oo0ooO0oo0oO . OOooOOo
  if 66 - 66: I1IiiI
 OOO00O = OOO00O . decode ( 'utf-8' )
 if 99 - 99: OoO0O00 % O0 . O0oo0OO0 - I1ii11iIi11i . Oo0Ooo / OoOoOO00
 if 60 - 60: I1ii11iIi11i
 if 78 - 78: oO0o + II111iiii
 if 55 - 55: OoooooooOO
 if 90 - 90: I1IiiI
 try :
  if 4 - 4: OOooOOo % Oo0ooO0oo0oO - OOooOOo - o0oOOo0O0Ooo
  iI1IIIiIII11 = open ( O0OOO , 'r' )
  oo0OOo = iI1IIIiIII11 . read ( )
  if 77 - 77: oO0o . Ii1I / O0 * oO0o
  if 98 - 98: Oo0Ooo - oO0o . O0oo0OO0
  i1 = IIIi11I11 ( oo0OOo , 'NOTICE: Starting ' , '\).' )
  i1 = i1 . decode ( 'utf-8' )
  if 51 - 51: iii1I1I . I1ii11iIi11i / I11i + o0oOOo0O0Ooo % OOooOOo
  if 1 - 1: Ii1I % OOooOOo + OOooOOo * O00oOoOoO0o0O
  Oo00 = IIIi11I11 ( oo0OOo , '. Platform: ' , '\n' )
  Oo00 = Oo00 . decode ( 'utf-8' )
  if 76 - 76: I1IiiI % i11iIiiIii + OOooOOo
  if 17 - 17: I11i / II111iiii * o0oOOo0O0Ooo / Oo0Ooo + iii1I1I . oO0o
  i1i = IIIi11I11 ( oo0OOo , 'NOTICE: Using ' , '\n' )
  i1i = i1i . decode ( 'utf-8' )
  if 19 - 19: OOooOOo * I11i
  if 85 - 85: i1IIi % o0oOOo0O0Ooo * I1ii11iIi11i * OoO0O00 . II111iiii
  iiI111I1iIiI = IIIi11I11 ( oo0OOo , 'NOTICE: Running on ' , ',' )
  iiI111I1iIiI = iiI111I1iIiI . decode ( 'utf-8' )
  if 69 - 69: Ii1I / O0oo0OO0 % O0oo0OO0 / Oo0ooO0oo0oO + O0oo0OO0 / i1IIi
  if 70 - 70: OOooOOo - O00oOoOoO0o0O . O0oo0OO0
  II = IIIi11I11 ( oo0OOo , 'NOTICE: Host CPU: ' , ',' )
  II = II . decode ( 'utf-8' )
  if 11 - 11: i11iIiiIii + o0oOOo0O0Ooo - O0oo0OO0 * i11iIiiIii - I1IiiI
 except :
  if 49 - 49: i1IIi % oO0o / OOooOOo . I1ii11iIi11i - O0oo0OO0
  i1 = "Unknown"
  Oo00 = "Unknown"
  i1i = "Unknown"
  iiI111I1iIiI = "Unknown"
  II = "Unknown"
  if 12 - 12: i11iIiiIii + I11i - I1ii11iIi11i
  if 27 - 27: iii1I1I
  if 22 - 22: OoOoOO00 / I1IiiI
  if 33 - 33: I11i
  if 37 - 37: OoOoOO00 % o0oOOo0O0Ooo * OoO0O00 / i11iIiiIii * II111iiii * iii1I1I
  if 70 - 70: Oo0ooO0oo0oO . i11iIiiIii % OoOoOO00 + oO0o
  if 95 - 95: I1ii11iIi11i
  if 48 - 48: I11i
  if 14 - 14: iIii1I11I1II1 / o0oOOo0O0Ooo * O00oOoOoO0o0O
  if 35 - 35: iIii1I11I1II1
  if 34 - 34: OoO0O00 % I1IiiI . o0oOOo0O0Ooo % OoO0O00 % OoO0O00
  if 30 - 30: I1IiiI + I1IiiI
  if 75 - 75: I1IiiI - Oo0ooO0oo0oO - I1IiiI % oO0o % OoooooooOO
  if 13 - 13: Oo0ooO0oo0oO * OoO0O00 % iIii1I11I1II1 / O00oOoOoO0o0O * iii1I1I . Oo0Ooo
  if 23 - 23: Oo0ooO0oo0oO / O00oOoOoO0o0O . iii1I1I * Ii1I
  if 87 - 87: i11iIiiIii
  if 34 - 34: i1IIi
  if 64 - 64: iIii1I11I1II1 / O00oOoOoO0o0O / Oo0Ooo - I1ii11iIi11i
  if 100 - 100: O00oOoOoO0o0O + i1IIi * OoO0O00
  if 64 - 64: oO0o * i11iIiiIii . Oo0Ooo
  if 52 - 52: Oo0Ooo / Oo0ooO0oo0oO / iii1I1I - o0oOOo0O0Ooo / iii1I1I
  if 74 - 74: i1IIi . iIii1I11I1II1
  if 85 - 85: I1IiiI
  if 10 - 10: O0 . II111iiii / OoooooooOO
  if 72 - 72: OoooooooOO . o0oOOo0O0Ooo + O0
  if 46 - 46: OoOoOO00 * I11i / oO0o + Oo0Ooo + O00oOoOoO0o0O
  if 95 - 95: o0oOOo0O0Ooo - Ii1I
  if 67 - 67: I1ii11iIi11i * Oo0Ooo % o0oOOo0O0Ooo
  if 19 - 19: OoOoOO00 . OOooOOo . OoooooooOO
  if 79 - 79: OOooOOo * Oo0ooO0oo0oO * I1IiiI * I1ii11iIi11i / I1ii11iIi11i
  if 62 - 62: Oo0ooO0oo0oO * Ii1I % I1ii11iIi11i - i1IIi - I1ii11iIi11i
  if 24 - 24: OOooOOo
  if 71 - 71: O00oOoOoO0o0O - i1IIi
  if 56 - 56: OoOoOO00 + oO0o
  if 74 - 74: iii1I1I / O0oo0OO0 / II111iiii - iii1I1I / oO0o % I11i
  if 19 - 19: O00oOoOoO0o0O % OoooooooOO + OoooooooOO
  if 7 - 7: i1IIi
  if 91 - 91: OoOoOO00 - OoOoOO00 . O00oOoOoO0o0O
  if 33 - 33: O0oo0OO0 - iIii1I11I1II1 / Ii1I % O0
  if 80 - 80: O00oOoOoO0o0O % OoooooooOO - O00oOoOoO0o0O
  if 27 - 27: O0oo0OO0 - o0oOOo0O0Ooo * I1ii11iIi11i - I1IiiI
  if 22 - 22: Oo0Ooo % OoooooooOO - Oo0Ooo - iii1I1I . Ii1I
  if 100 - 100: II111iiii / O0oo0OO0 / iii1I1I - I1ii11iIi11i * iIii1I11I1II1
  if 7 - 7: i1IIi . O00oOoOoO0o0O % i11iIiiIii * I1ii11iIi11i . I11i % I1ii11iIi11i
  if 35 - 35: I1IiiI
  if 48 - 48: OoooooooOO % OoooooooOO - OoO0O00 . OoOoOO00
  if 22 - 22: Oo0ooO0oo0oO . i11iIiiIii . OoooooooOO . i1IIi
  if 12 - 12: OoOoOO00 % OOooOOo + oO0o . O0 % iIii1I11I1II1
  if 41 - 41: OoooooooOO
  if 13 - 13: I11i + O0oo0OO0 - O0oo0OO0 % oO0o / I11i
  if 4 - 4: I1IiiI + OOooOOo - O00oOoOoO0o0O + iii1I1I
  if 78 - 78: Ii1I
  if 29 - 29: II111iiii
  if 79 - 79: iIii1I11I1II1 - i11iIiiIii + Oo0ooO0oo0oO - II111iiii . iIii1I11I1II1
  if 84 - 84: Oo0Ooo % I11i * O0 * I11i
  if 66 - 66: OOooOOo / iIii1I11I1II1 - OoOoOO00 % O0 . Oo0ooO0oo0oO
  if 12 - 12: Oo0Ooo + I1IiiI
  if 37 - 37: i1IIi * i11iIiiIii
  if 95 - 95: i11iIiiIii % O0oo0OO0 * Oo0Ooo + i1IIi . O0 + I1ii11iIi11i
  if 7 - 7: OoO0O00 * i11iIiiIii * iIii1I11I1II1 / OOooOOo / O0oo0OO0
  if 35 - 35: iii1I1I * OOooOOo
  if 65 - 65: II111iiii % i1IIi
  if 13 - 13: OoO0O00 * O0oo0OO0 + Oo0Ooo - O00oOoOoO0o0O
  if 31 - 31: OoO0O00
  if 68 - 68: OoO0O00 + i1IIi / iIii1I11I1II1 + II111iiii * iIii1I11I1II1 + I1ii11iIi11i
  if 77 - 77: i11iIiiIii - O0oo0OO0 . I1ii11iIi11i % Oo0Ooo . Ii1I
  if 9 - 9: o0oOOo0O0Ooo
  if 55 - 55: OOooOOo % iIii1I11I1II1 + I11i . Oo0ooO0oo0oO
  if 71 - 71: i11iIiiIii / i1IIi + OoOoOO00
  if 23 - 23: i11iIiiIii
  if 88 - 88: II111iiii - iii1I1I / OoooooooOO
  if 71 - 71: I1ii11iIi11i
  if 19 - 19: Oo0Ooo - OoO0O00 + i11iIiiIii / iIii1I11I1II1
  if 1 - 1: O00oOoOoO0o0O % i1IIi
  if 41 - 41: OoO0O00 * OoO0O00 / iii1I1I + I1ii11iIi11i . o0oOOo0O0Ooo
  if 84 - 84: i11iIiiIii + OoO0O00 * I1IiiI + I1ii11iIi11i / Ii1I
  if 80 - 80: I1ii11iIi11i
  if 67 - 67: II111iiii
  if 2 - 2: o0oOOo0O0Ooo - O0 * Ii1I % O00oOoOoO0o0O
  if 64 - 64: i1IIi . Oo0ooO0oo0oO
  if 7 - 7: oO0o . iii1I1I - iii1I1I / O0oo0OO0 % Oo0Ooo
  if 61 - 61: oO0o - I1ii11iIi11i / iii1I1I % I1ii11iIi11i + OoO0O00 / Oo0Ooo
  if 10 - 10: i11iIiiIii / OoOoOO00
  if 27 - 27: I1IiiI / OoooooooOO
  if 74 - 74: I1ii11iIi11i % O0oo0OO0 - OoO0O00 * I11i . OoooooooOO * OoO0O00
  if 99 - 99: OoOoOO00 . iii1I1I - OoooooooOO - O0
  if 6 - 6: OOooOOo
  if 3 - 3: O0 - O0oo0OO0 * Ii1I * OOooOOo / Ii1I
  if 58 - 58: Ii1I * iIii1I11I1II1 + Oo0ooO0oo0oO . Oo0ooO0oo0oO
  if 74 - 74: Oo0ooO0oo0oO - o0oOOo0O0Ooo * O00oOoOoO0o0O % Oo0ooO0oo0oO
  if 93 - 93: iIii1I11I1II1 / OoOoOO00 % Oo0Ooo * O0oo0OO0 - OoO0O00 - o0oOOo0O0Ooo
  if 44 - 44: OoooooooOO
  if 82 - 82: OoOoOO00 . OoOoOO00
  if 10 - 10: Oo0Ooo * I1ii11iIi11i . oO0o . OoooooooOO . OOooOOo * I1ii11iIi11i
  if 80 - 80: O0oo0OO0 + I11i . O0oo0OO0 + OOooOOo
  if 85 - 85: i11iIiiIii . I11i + Ii1I / Ii1I
  if 43 - 43: O00oOoOoO0o0O . OoooooooOO - II111iiii
  if 90 - 90: I1IiiI - iIii1I11I1II1 + I1ii11iIi11i * OOooOOo * oO0o
  if 19 - 19: O0oo0OO0 * II111iiii % Oo0Ooo - i1IIi
  if 27 - 27: OoOoOO00 . O0 / I1ii11iIi11i . iIii1I11I1II1
  if 15 - 15: Ii1I + OoO0O00 % iIii1I11I1II1 - I1ii11iIi11i - i1IIi % o0oOOo0O0Ooo
  if 54 - 54: O00oOoOoO0o0O - II111iiii . Oo0ooO0oo0oO + Ii1I
  if 45 - 45: oO0o + II111iiii . iii1I1I / I1ii11iIi11i
  if 76 - 76: Ii1I + iii1I1I - O00oOoOoO0o0O * iIii1I11I1II1 % i1IIi
  if 72 - 72: Oo0ooO0oo0oO + II111iiii . O0 - iii1I1I / OoooooooOO . O0oo0OO0
  if 28 - 28: iIii1I11I1II1 . O0
  if 32 - 32: OoooooooOO
  if 29 - 29: I1ii11iIi11i
  if 41 - 41: Ii1I
  if 49 - 49: Ii1I % II111iiii . Ii1I - o0oOOo0O0Ooo - I11i * O00oOoOoO0o0O
  if 47 - 47: O0 . o0oOOo0O0Ooo / Ii1I * iii1I1I
  if 63 - 63: O0oo0OO0 - oO0o - iii1I1I - Oo0ooO0oo0oO / oO0o + OoO0O00
  if 94 - 94: O00oOoOoO0o0O / I1IiiI . II111iiii
  if 32 - 32: oO0o . OOooOOo % OOooOOo . OoOoOO00
  if 37 - 37: OOooOOo + O0 + OOooOOo . iii1I1I . o0oOOo0O0Ooo
  if 78 - 78: I1IiiI / I11i + o0oOOo0O0Ooo . Oo0Ooo / O0
  if 49 - 49: I1ii11iIi11i
  if 66 - 66: o0oOOo0O0Ooo . I1ii11iIi11i
  if 18 - 18: Oo0Ooo + O00oOoOoO0o0O
  if 79 - 79: OoO0O00 - O0 + II111iiii % Ii1I . I1IiiI
  if 43 - 43: I1IiiI % I1ii11iIi11i * Ii1I
  if 31 - 31: Ii1I / iii1I1I
  if 3 - 3: O00oOoOoO0o0O
  if 37 - 37: Ii1I * OoooooooOO * I11i + Oo0Ooo . I1IiiI
  if 61 - 61: OOooOOo . OOooOOo
  if 17 - 17: II111iiii / Oo0ooO0oo0oO
  if 80 - 80: OOooOOo * OoO0O00 + Ii1I
  if 62 - 62: OoooooooOO . O0 % Oo0Ooo
  if 98 - 98: o0oOOo0O0Ooo * Oo0Ooo - Ii1I . Oo0ooO0oo0oO
  if 2 - 2: Oo0Ooo - Oo0ooO0oo0oO % iIii1I11I1II1
  if 88 - 88: O0oo0OO0 - OoO0O00
  if 79 - 79: iii1I1I
  if 45 - 45: II111iiii + iii1I1I . I11i . O0 * i1IIi - Ii1I
  if 48 - 48: I1ii11iIi11i + Oo0Ooo
  if 76 - 76: I1ii11iIi11i
  if 98 - 98: II111iiii + I1IiiI - I1ii11iIi11i . Ii1I
  if 51 - 51: Ii1I + i11iIiiIii * OoO0O00 % Oo0Ooo / I1IiiI - iIii1I11I1II1
  if 20 - 20: O0oo0OO0 . I11i . Ii1I + I11i - OOooOOo * oO0o
  if 82 - 82: OoO0O00
  if 78 - 78: II111iiii / I11i - i11iIiiIii + I1ii11iIi11i * Oo0Ooo
  if 17 - 17: OoOoOO00
  if 72 - 72: iii1I1I . Oo0Ooo - i11iIiiIii / I1IiiI
  if 64 - 64: oO0o
  if 80 - 80: o0oOOo0O0Ooo % iIii1I11I1II1
  if 63 - 63: O00oOoOoO0o0O * i11iIiiIii
  if 86 - 86: I11i % I11i - OoOoOO00 + O0oo0OO0 / I1IiiI * OoooooooOO
  if 26 - 26: II111iiii * iii1I1I + o0oOOo0O0Ooo / O0 + i1IIi - I11i
  if 56 - 56: OOooOOo
  if 76 - 76: i1IIi % iIii1I11I1II1 - o0oOOo0O0Ooo + O00oOoOoO0o0O - I11i
  if 81 - 81: I1ii11iIi11i + OoooooooOO - OOooOOo * O0
  if 100 - 100: iIii1I11I1II1 - OoOoOO00
  if 28 - 28: Oo0Ooo . O0 . I11i
  if 60 - 60: II111iiii + O0oo0OO0 / oO0o % OoooooooOO - i1IIi
  if 57 - 57: Oo0ooO0oo0oO
  if 99 - 99: Oo0Ooo + O0oo0OO0 % Oo0ooO0oo0oO - o0oOOo0O0Ooo
  if 52 - 52: I1ii11iIi11i
  if 93 - 93: iii1I1I . i11iIiiIii
  if 24 - 24: OOooOOo . OoO0O00 + O0oo0OO0 . oO0o - I1ii11iIi11i % iii1I1I
  if 49 - 49: O0 . Oo0Ooo / Ii1I
  if 29 - 29: I1ii11iIi11i / oO0o * O0 - i11iIiiIii - OoO0O00 + Ii1I
  if 86 - 86: I1IiiI / I1ii11iIi11i * Ii1I % i11iIiiIii
  if 20 - 20: iii1I1I . OoooooooOO + iii1I1I + Oo0ooO0oo0oO * I1ii11iIi11i
  if 44 - 44: i11iIiiIii
  if 69 - 69: OOooOOo * O0 + i11iIiiIii
 if o000oo == "true" :
  if 65 - 65: O0 / iii1I1I . i1IIi * iii1I1I / iIii1I11I1II1 - oO0o
  if 93 - 93: OoOoOO00 % i11iIiiIii - Ii1I % OoO0O00
  if 55 - 55: o0oOOo0O0Ooo . I1ii11iIi11i
  if 63 - 63: oO0o
  print '@ares: deviceid: ' + oOooOOOoOo
  print '@ares: cpu freq: ' + OOoOO0oo0ooO
  print '@ares: gpu: ' + iii11
  print '@ares: kernel: ' + o00oOO0o
  print '@ares: mac: ' + OOO00O
  print '@ares: kodiver: ' + i1
  print '@ares: kodiplatform: ' + Oo00
  print '@ares: kodirelease: ' + i1i
  print '@ares: kodirunningon: ' + iiI111I1iIiI
  print '@ares: kodihostcpu: ' + II
  if 79 - 79: I1ii11iIi11i - oO0o - o0oOOo0O0Ooo . OOooOOo
  if 65 - 65: i11iIiiIii . OoO0O00 % iii1I1I + O00oOoOoO0o0O - i11iIiiIii
  if 60 - 60: O0oo0OO0
  if 14 - 14: Oo0Ooo % oO0o * iii1I1I - i11iIiiIii / I1ii11iIi11i * i11iIiiIii
  if 95 - 95: iIii1I11I1II1 + OoOoOO00 . I1IiiI + OoOoOO00 * I11i + OOooOOo
  if 14 - 14: Ii1I - O0
  if 68 - 68: II111iiii - I1ii11iIi11i - OoO0O00 * iIii1I11I1II1 / I1IiiI * I1ii11iIi11i
  if 45 - 45: O0oo0OO0 * I11i / iIii1I11I1II1 / I1IiiI % II111iiii
  if 49 - 49: Ii1I / iii1I1I . iii1I1I . iii1I1I + i11iIiiIii % I11i
  if 7 - 7: O00oOoOoO0o0O * Oo0ooO0oo0oO + OoOoOO00
  if 22 - 22: iii1I1I
  if 48 - 48: I1ii11iIi11i . I1IiiI
  if 73 - 73: O0 . O0oo0OO0 - OoooooooOO % I11i % i1IIi
  if 14 - 14: O0oo0OO0 + Ii1I * Oo0Ooo
global iI11iI
try :
 iI11iI = xbmcplugin . getSetting ( int ( sys . argv [ 1 ] ) , 'showadult' )
except :
 iI11iI = "0"
 if 98 - 98: O00oOoOoO0o0O * iii1I1I . OoooooooOO . O0
 if 89 - 89: iii1I1I / O0 % OoooooooOO - O0 . OoO0O00
 if 32 - 32: Oo0ooO0oo0oO
 if 26 - 26: O0 * Ii1I - I1IiiI - iii1I1I / iIii1I11I1II1
 if 57 - 57: I1ii11iIi11i - OoO0O00 * iIii1I11I1II1
 if 26 - 26: OoO0O00 % Oo0ooO0oo0oO % o0oOOo0O0Ooo % OoOoOO00 . iii1I1I % O0
def Oo ( settingid , value ) :
 if 91 - 91: II111iiii . Oo0Ooo . oO0o - OoooooooOO / OoOoOO00
 try :
  if 30 - 30: I11i % o0oOOo0O0Ooo + i1IIi * OoooooooOO * OoO0O00 - II111iiii
  if 55 - 55: OoO0O00
  with open ( iii , 'r' , 0 ) as o0o0Ooo0 :
   OoO000O = json . load ( o0o0Ooo0 )
   if 20 - 20: Oo0ooO0oo0oO * O0oo0OO0 * o0oOOo0O0Ooo - Oo0ooO0oo0oO
  oOooOOOoOo = OoO000O [ 'deviceid' ]
  if 32 - 32: Ii1I * oO0o
  if 85 - 85: i11iIiiIii . OoO0O00 + OoO0O00
  if 28 - 28: Oo0Ooo
  try :
   iIIiI1I1i = OoO000O [ 'automaintenance' ]
  except :
   iIIiI1I1i = "never"
   if 62 - 62: Oo0Ooo + OoooooooOO / iii1I1I
   if 60 - 60: Ii1I / OoOoOO00 . I11i % OOooOOo
  try :
   I111IIiii1Ii = OoO000O [ 'storageinfolastpopup' ]
  except :
   I111IIiii1Ii = "0"
   if 61 - 61: O0 . Ii1I . O0 * i11iIiiIii * II111iiii / O0oo0OO0
   if 69 - 69: I11i
  try :
   I11 = OoO000O [ 'fullautofreq' ]
  except :
   I11 = "never"
   if 17 - 17: I11i
   if 38 - 38: O0oo0OO0 % OOooOOo
  try :
   Ii = OoO000O [ 'fullautocache' ]
  except :
   Ii = "0"
   if 9 - 9: O0 . iIii1I11I1II1
   if 44 - 44: I1ii11iIi11i % O00oOoOoO0o0O
  try :
   iIII11Ii = OoO000O [ 'fullautopackages' ]
  except :
   iIII11Ii = "0"
   if 6 - 6: OoO0O00
   if 82 - 82: iIii1I11I1II1 . I11i / O00oOoOoO0o0O / OOooOOo * II111iiii % oO0o
  try :
   IIIi1i = OoO000O [ 'fullautothumb' ]
  except :
   IIIi1i = "0"
   if 62 - 62: II111iiii
   if 96 - 96: I11i % OoOoOO00 * I1ii11iIi11i
   if 94 - 94: Oo0Ooo - i1IIi . O0 % Oo0Ooo . Oo0ooO0oo0oO
   if 63 - 63: i11iIiiIii % I1ii11iIi11i % I1IiiI . O00oOoOoO0o0O * o0oOOo0O0Ooo + OOooOOo
   if 77 - 77: o0oOOo0O0Ooo
  try :
   IIi1II = OoO000O [ 'cacheinclude_genesis' ]
  except :
   IIi1II = "0"
   if 63 - 63: Oo0ooO0oo0oO * oO0o + Oo0ooO0oo0oO * Ii1I + Oo0Ooo / I1ii11iIi11i
  try :
   OOo0iiIii1IIi = OoO000O [ 'cacheinclude_navix' ]
  except :
   OOo0iiIii1IIi = "0"
   if 15 - 15: O0 . I1ii11iIi11i * I1ii11iIi11i
  try :
   i111IIIiI = OoO000O [ 'cacheinclude_youtube' ]
  except :
   i111IIIiI = "0"
   if 65 - 65: O0oo0OO0 + O0 % o0oOOo0O0Ooo
  try :
   I1Ii1 = OoO000O [ 'cacheinclude_ivue' ]
  except :
   I1Ii1 = "0"
   if 72 - 72: OOooOOo . OoOoOO00 / II111iiii
  try :
   oOOo00O0OOOo = OoO000O [ 'cacheinclude_salts' ]
  except :
   oOOo00O0OOOo = "0"
   if 69 - 69: OOooOOo * II111iiii - Oo0ooO0oo0oO - i1IIi + i11iIiiIii
  try :
   IiI = OoO000O [ 'cacheinclude_pulsar' ]
  except :
   IiI = "0"
   if 50 - 50: OoooooooOO * i1IIi / oO0o
   if 83 - 83: i1IIi
   if 38 - 38: OoooooooOO * iIii1I11I1II1
   if 54 - 54: OoooooooOO . O0oo0OO0
  try :
   ii = OoO000O [ 'totaltempfiles' ]
  except :
   ii = "0"
   if 71 - 71: Ii1I
  try :
   ooOo0OoOooo00 = OoO000O [ 'totalspacegained' ]
  except :
   ooOo0OoOooo00 = "0"
   if 31 - 31: I11i . i11iIiiIii . OoO0O00 * Oo0Ooo % Ii1I . o0oOOo0O0Ooo
  try :
   Ooo0Oo0oo0 = OoO000O [ 'lastbuildcheck' ]
  except :
   Ooo0Oo0oo0 = "0"
   if 92 - 92: OoooooooOO / O0 * i1IIi + iIii1I11I1II1
   if 93 - 93: Oo0ooO0oo0oO % O0oo0OO0
  try :
   II1I11iIIIii1 = OoO000O [ 'buildupdate' ]
  except :
   II1I11iIIIii1 = "0"
   if 25 - 25: Ii1I * iIii1I11I1II1 * o0oOOo0O0Ooo + OoOoOO00 . OoOoOO00
   if 3 - 3: OoO0O00 . I1IiiI . I11i . I1ii11iIi11i
   if 19 - 19: O0 * I11i % OoooooooOO
   if 36 - 36: o0oOOo0O0Ooo % I11i * I1ii11iIi11i % Ii1I + i1IIi - Oo0Ooo
   if 56 - 56: I1ii11iIi11i
  if settingid == "deviceid" :
   oOooOOOoOo = value
   if 32 - 32: OoOoOO00 % O0 % i11iIiiIii - Oo0ooO0oo0oO . I1IiiI
  if settingid == "totaltempfiles" :
   ii = value
   if 24 - 24: oO0o % o0oOOo0O0Ooo / O0oo0OO0 + o0oOOo0O0Ooo
  if settingid == "totalspacegained" :
   ooOo0OoOooo00 = value
   if 59 - 59: II111iiii % I1IiiI * O0 . OoooooooOO - OoooooooOO % O0
   if 56 - 56: oO0o - i1IIi * OoooooooOO - II111iiii
   if 28 - 28: i1IIi / I11i . o0oOOo0O0Ooo
  if settingid == "automaintenance" :
   iIIiI1I1i = value
   if 11 - 11: Oo0Ooo * OoooooooOO - i11iIiiIii
  if settingid == "fullautofreq" :
   I11 = value
   if 13 - 13: i11iIiiIii . O0 / OOooOOo * i1IIi
   if 14 - 14: O00oOoOoO0o0O + O00oOoOoO0o0O . I11i / Ii1I . iIii1I11I1II1
  if settingid == "fullautocache" :
   Ii = value
   if 10 - 10: II111iiii . OOooOOo / iii1I1I
   if 35 - 35: iii1I1I / Oo0Ooo + O0 * iIii1I11I1II1 - O0
  if settingid == "fullautopackages" :
   iIII11Ii = value
   if 3 - 3: I1ii11iIi11i
  if settingid == "fullautothumb" :
   IIIi1i = value
   if 42 - 42: I11i % Oo0Ooo + O00oOoOoO0o0O - I11i . iIii1I11I1II1 - Ii1I
   if 27 - 27: iii1I1I % Oo0Ooo . I1ii11iIi11i . i1IIi % OoOoOO00 . o0oOOo0O0Ooo
   if 37 - 37: iii1I1I + O0oo0OO0 * Ii1I + O00oOoOoO0o0O
   if 39 - 39: O0 * Oo0Ooo - I1IiiI + Ii1I / II111iiii
  if settingid == "cacheinclude_genesis" :
   IIi1II = value
   if 66 - 66: Oo0ooO0oo0oO + oO0o % OoooooooOO
   if 23 - 23: oO0o . OoOoOO00 + iIii1I11I1II1
  if settingid == "cacheinclude_navix" :
   OOo0iiIii1IIi = value
   if 17 - 17: O00oOoOoO0o0O
  if settingid == "cacheinclude_youtube" :
   i111IIIiI = value
   if 12 - 12: i1IIi . OoO0O00
  if settingid == "cacheinclude_ivue" :
   I1Ii1 = value
   if 14 - 14: OOooOOo + II111iiii % OOooOOo . oO0o * Oo0ooO0oo0oO
  if settingid == "cacheinclude_salts" :
   oOOo00O0OOOo = value
   if 54 - 54: Oo0ooO0oo0oO * I11i - O0oo0OO0
  if settingid == "cacheinclude_pulsar" :
   IiI = value
   if 15 - 15: iii1I1I / O0
  if settingid == "storageinfolastpopup" :
   I111IIiii1Ii = value
   if 61 - 61: i1IIi / i1IIi + Oo0ooO0oo0oO . O0oo0OO0 * Oo0ooO0oo0oO
   if 19 - 19: o0oOOo0O0Ooo . II111iiii / i1IIi
  if settingid == "lastbuildcheck" :
   Ooo0Oo0oo0 = value
   if 82 - 82: O0 / iii1I1I * OoO0O00 - I11i + Oo0Ooo
   if 47 - 47: I1ii11iIi11i * I1IiiI / I1ii11iIi11i + Ii1I * II111iiii
  if settingid == "buildupdate" :
   II1I11iIIIii1 = value
   if 78 - 78: O0oo0OO0 - i1IIi + OoOoOO00 + Oo0Ooo * I1ii11iIi11i * o0oOOo0O0Ooo
   if 97 - 97: i1IIi
   if 29 - 29: I1IiiI
   if 37 - 37: I1ii11iIi11i * O0oo0OO0 * I1IiiI * O0
   if 35 - 35: I1IiiI - I1ii11iIi11i * iii1I1I + O00oOoOoO0o0O / i1IIi
  OoO000O = { 'deviceid' : oOooOOOoOo , 'automaintenance' : iIIiI1I1i , 'storageinfolastpopup' : I111IIiii1Ii , 'fullautofreq' : I11 , 'fullautocache' : Ii , 'fullautopackages' : iIII11Ii , 'fullautothumb' : IIIi1i , 'cacheinclude_genesis' : IIi1II , 'cacheinclude_navix' : OOo0iiIii1IIi , 'cacheinclude_youtube' : i111IIIiI , 'cacheinclude_ivue' : I1Ii1 , 'cacheinclude_salts' : oOOo00O0OOOo , 'cacheinclude_pulsar' : IiI , 'totaltempfiles' : ii , 'totalspacegained' : ooOo0OoOooo00 , 'lastbuildcheck' : Ooo0Oo0oo0 , 'buildupdate' : II1I11iIIIii1 }
  if 46 - 46: Oo0Ooo . Oo0ooO0oo0oO % Oo0Ooo / II111iiii * Oo0ooO0oo0oO * OOooOOo
  if 59 - 59: O0oo0OO0 * iii1I1I
  if 31 - 31: I11i / O0
  with open ( iii , 'w' ) as o0o0Ooo0 :
   json . dump ( OoO000O , o0o0Ooo0 )
   o0o0Ooo0 . close
   if 57 - 57: i1IIi % Oo0ooO0oo0oO
 except :
  if 69 - 69: o0oOOo0O0Ooo
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Error" , ooO ( "errorwriteconfig" ) , "" , "" )
  if 69 - 69: O0oo0OO0
  if 83 - 83: iIii1I11I1II1 . o0oOOo0O0Ooo + O0oo0OO0 . OoooooooOO / Oo0ooO0oo0oO + II111iiii
  if 90 - 90: Ii1I * iii1I1I / OOooOOo
  if 68 - 68: OoOoOO00
  if 65 - 65: oO0o
  if 82 - 82: o0oOOo0O0Ooo
  if 80 - 80: i1IIi % OoOoOO00 + OoO0O00 - OoooooooOO / iIii1I11I1II1 + O0oo0OO0
socket . setdefaulttimeout ( 12 )
if 65 - 65: Ii1I
iIiIi1i1ii11 = urllib2 . Request ( i11i1 + iiiiiIIii )
iIiIi1i1ii11 . add_header ( 'User-Agent' , ii1I1i1I )
if 71 - 71: O0oo0OO0 % O0oo0OO0 . oO0o + i11iIiiIii - i11iIiiIii
if 16 - 16: iIii1I11I1II1 / I1IiiI / O0oo0OO0 - i11iIiiIii . Oo0ooO0oo0oO / OOooOOo
if 13 - 13: o0oOOo0O0Ooo % O0 - O0oo0OO0 * OoooooooOO / Oo0Ooo - OoooooooOO
if 78 - 78: oO0o % OoooooooOO
if 73 - 73: I1IiiI % Oo0ooO0oo0oO % O00oOoOoO0o0O + i1IIi - OoooooooOO / oO0o
try :
 o0O00o00Ooo = urllib2 . urlopen ( iIiIi1i1ii11 )
 if 78 - 78: OoooooooOO % oO0o - i11iIiiIii
except HTTPError , ii111I1iIiIi111I :
 if 37 - 37: O00oOoOoO0o0O % Ii1I % i1IIi
 print '@Ares: Server HTTP Error: ' + str ( ii111I1iIiIi111I . code )
 i1I1ii11i1Iii = "no"
 OOooo = xbmcgui . Dialog ( )
 OOooo . ok ( "Ares Wizard" , "Failed to reach Ares server. (HTTP Error) Ares will continue to work but with reduced features.. Hopefully this won't last too long." )
 if 23 - 23: Oo0ooO0oo0oO - O0 + i11iIiiIii
 if 98 - 98: OoooooooOO
 if 61 - 61: o0oOOo0O0Ooo . O00oOoOoO0o0O . O0 + OoooooooOO + O0
 if 65 - 65: i1IIi * OOooOOo * OoooooooOO - O00oOoOoO0o0O . iii1I1I - OoO0O00
except URLError , ii111I1iIiIi111I :
 if 71 - 71: Ii1I * OoOoOO00
 print '@Ares: Server URL Error: ' + str ( ii111I1iIiIi111I . reason )
 i1I1ii11i1Iii = "no"
 OOooo = xbmcgui . Dialog ( )
 OOooo . ok ( "Ares Wizard" , "Failed to reach Ares server. (URL Error) Ares will continue to work but with reduced features.. Hopefully this won't last too long." )
 if 33 - 33: i1IIi . i1IIi * OoooooooOO % O0oo0OO0 * o0oOOo0O0Ooo
 if 64 - 64: Oo0ooO0oo0oO / Oo0ooO0oo0oO + I1ii11iIi11i * OOooOOo % OOooOOo
 if 87 - 87: OoO0O00 * Oo0Ooo
except IOError , ii111I1iIiIi111I :
 print '@Ares: Server IO Error: ' + str ( ii111I1iIiIi111I . errno ) + ' - ' + str ( ii111I1iIiIi111I . strerror )
 i1I1ii11i1Iii = "no"
 OOooo = xbmcgui . Dialog ( )
 OOooo . ok ( "Ares Wizard" , "Failed to reach Ares server. (IO Error) Ares will continue to work but with reduced features.. Hopefully this won't last too long." )
 if 83 - 83: i1IIi * O0oo0OO0 - O00oOoOoO0o0O / Ii1I
 if 48 - 48: oO0o . II111iiii - OoOoOO00 % i1IIi . OoOoOO00
 if 32 - 32: Ii1I * I1IiiI - OOooOOo . Oo0Ooo / O0 + Ii1I
except ssl . SSLError , ii111I1iIiIi111I :
 print '@Ares: SSL Error: ' + str ( ii111I1iIiIi111I . reason )
 i1I1ii11i1Iii = "no"
 OOooo = xbmcgui . Dialog ( )
 OOooo . ok ( "Ares Wizard" , "Failed to reach Ares server (SSL Error) this could be due to security restrictions on your network." )
 if 67 - 67: OoOoOO00 % Oo0Ooo
 if 7 - 7: i11iIiiIii % I1ii11iIi11i / O0oo0OO0 % Oo0Ooo - OoO0O00
 if 73 - 73: I1ii11iIi11i
socket . setdefaulttimeout ( 30 )
if 92 - 92: i11iIiiIii + O0 * I11i
if 60 - 60: o0oOOo0O0Ooo / Oo0Ooo
if 19 - 19: iIii1I11I1II1 . OoO0O00 / OoooooooOO
if 2 - 2: O0 - O0 % O0oo0OO0 / I1ii11iIi11i
if 76 - 76: OoO0O00 * oO0o - OoO0O00
if 57 - 57: OoooooooOO / OoOoOO00 + oO0o . Ii1I
def Ii111IIII1 ( ) :
 if 94 - 94: O0oo0OO0 % I1IiiI % O0 . I1IiiI % Oo0ooO0oo0oO / OOooOOo
 if 79 - 79: iIii1I11I1II1 / iIii1I11I1II1 . iii1I1I . Ii1I
 global Ii1I1IIii1II
 global I1I1IiI1
 global oooooOoo0ooo
 global O0ii1ii1ii
 if 49 - 49: I1ii11iIi11i * O0oo0OO0 + OoOoOO00
 if 72 - 72: OoO0O00
 if 57 - 57: OOooOOo / OoO0O00 + I1ii11iIi11i
 O000oOo ( )
 if 60 - 60: O0 * Oo0Ooo % OOooOOo + O00oOoOoO0o0O . OoO0O00 . Oo0Ooo
 global OOoOO0oo0ooO
 OOoOO0oo0ooO = xbmc . getInfoLabel ( 'System.CpuFrequency' )
 if 70 - 70: I11i . I1ii11iIi11i * oO0o
 while OOoOO0oo0ooO == "Busy" :
  OOoOO0oo0ooO = xbmc . getInfoLabel ( 'System.CpuFrequency' )
  if 97 - 97: oO0o . iIii1I11I1II1 - OOooOOo
 global iii11
 iii11 = xbmc . getInfoLabel ( 'System.VideoEncoderInfo' )
 if 23 - 23: I1ii11iIi11i % I11i
 while iii11 == "Busy" :
  iii11 = xbmc . getInfoLabel ( 'System.VideoEncoderInfo' )
  if 18 - 18: OoooooooOO . i1IIi + II111iiii
 global o00oOO0o
 o00oOO0o = xbmc . getInfoLabel ( 'System.KernelVersion' )
 if 99 - 99: O0oo0OO0 - I1ii11iIi11i - I1IiiI - O0oo0OO0 + OoO0O00 + II111iiii
 while o00oOO0o == "Busy" :
  o00oOO0o = xbmc . getInfoLabel ( 'System.KernelVersion' )
  if 34 - 34: O0oo0OO0 * I11i
  if 31 - 31: O00oOoOoO0o0O . oO0o
 global OOO00O
 OOO00O = xbmc . getInfoLabel ( 'Network.MacAddress' )
 if 40 - 40: Ii1I - I11i / II111iiii * i1IIi + O00oOoOoO0o0O * II111iiii
 while OOO00O == "Busy" :
  OOO00O = xbmc . getInfoLabel ( 'Network.MacAddress' )
  if 53 - 53: I1ii11iIi11i - i11iIiiIii . OoO0O00 / OoOoOO00 - O0oo0OO0
  if 99 - 99: Ii1I - O00oOoOoO0o0O - i1IIi / i11iIiiIii . O00oOoOoO0o0O
 ooOoo0OoO0 = xbmc . getInfoLabel ( 'System.InternetState' )
 if 38 - 38: O00oOoOoO0o0O - i1IIi . i11iIiiIii
 while ooOoo0OoO0 == "Busy" :
  ooOoo0OoO0 = xbmc . getInfoLabel ( 'System.InternetState' )
  if 28 - 28: O0oo0OO0 / oO0o . I1ii11iIi11i
  if 83 - 83: I11i
  if 36 - 36: iIii1I11I1II1
  if 74 - 74: O00oOoOoO0o0O * I1ii11iIi11i - OoooooooOO
  if 59 - 59: Oo0ooO0oo0oO * OoO0O00 - O0oo0OO0 % oO0o
  if 95 - 95: II111iiii + II111iiii
  if 33 - 33: i1IIi . Oo0Ooo - O00oOoOoO0o0O
  if 30 - 30: OoooooooOO % OOooOOo
  if 14 - 14: OoOoOO00 / OoO0O00 / i11iIiiIii - OoOoOO00 / o0oOOo0O0Ooo - OOooOOo
  if 81 - 81: iii1I1I % Ii1I . Oo0ooO0oo0oO
  if 66 - 66: I1ii11iIi11i * Ii1I / OoooooooOO * O0 % OOooOOo
  if 49 - 49: II111iiii . I1IiiI * O0 * Ii1I / O0oo0OO0 * OoooooooOO
  if 82 - 82: Oo0Ooo / Ii1I / Ii1I % Ii1I
  if 20 - 20: Oo0ooO0oo0oO
  if 63 - 63: iIii1I11I1II1 . OoO0O00
  if 100 - 100: i1IIi * i1IIi
  if 26 - 26: OOooOOo . OoO0O00 % OoOoOO00
  if 94 - 94: O00oOoOoO0o0O
  if 15 - 15: Ii1I - O00oOoOoO0o0O / O0
  if 28 - 28: O0oo0OO0 . i1IIi / I1ii11iIi11i
  if 77 - 77: i11iIiiIii / O0oo0OO0 / i11iIiiIii % OoOoOO00 - O0oo0OO0
  if 80 - 80: O0oo0OO0 % OoOoOO00 . OoooooooOO . II111iiii % O00oOoOoO0o0O
  if 6 - 6: O0oo0OO0 % O00oOoOoO0o0O / Ii1I + O0oo0OO0 . oO0o
  if 70 - 70: iIii1I11I1II1 / Ii1I
  if 61 - 61: O0 * o0oOOo0O0Ooo + O0oo0OO0 - OOooOOo . I1IiiI - O00oOoOoO0o0O
  if 7 - 7: I1ii11iIi11i
  if 81 - 81: Oo0Ooo % II111iiii % o0oOOo0O0Ooo / I11i
  if 95 - 95: OoOoOO00 - O0 % OoooooooOO
  if 13 - 13: i11iIiiIii
  if 54 - 54: OOooOOo . I1ii11iIi11i * I11i % O0oo0OO0 . O0 * O00oOoOoO0o0O
  if 87 - 87: Ii1I % I1ii11iIi11i * Oo0Ooo
  if 59 - 59: Oo0Ooo / I11i - iIii1I11I1II1 * iIii1I11I1II1
  if 18 - 18: I11i * I1ii11iIi11i / i11iIiiIii / iIii1I11I1II1 * OoooooooOO . OOooOOo
  if 69 - 69: Oo0Ooo * Oo0ooO0oo0oO
  if 91 - 91: o0oOOo0O0Ooo . Oo0ooO0oo0oO / OoO0O00 / i11iIiiIii * o0oOOo0O0Ooo
  if 52 - 52: I1IiiI - i11iIiiIii / O00oOoOoO0o0O . oO0o
  if 38 - 38: oO0o + OoooooooOO * OoOoOO00 % oO0o
  if 91 - 91: i1IIi - I1ii11iIi11i * I1IiiI
  if 24 - 24: OoOoOO00 * Ii1I
  if 17 - 17: OoO0O00 . I1IiiI * O0
  if 81 - 81: OOooOOo
  if 58 - 58: II111iiii . O0oo0OO0 . Ii1I * OoooooooOO / Ii1I / I11i
  if 41 - 41: I11i + OoO0O00 . iii1I1I
  if 73 - 73: i11iIiiIii * I1IiiI + o0oOOo0O0Ooo / oO0o
  if 56 - 56: i1IIi
  if 11 - 11: i11iIiiIii % o0oOOo0O0Ooo / I11i * OoooooooOO
  if 82 - 82: O00oOoOoO0o0O
  if 10 - 10: Oo0Ooo % OOooOOo / I11i * O00oOoOoO0o0O - o0oOOo0O0Ooo
  if 54 - 54: i11iIiiIii / iIii1I11I1II1 % I1ii11iIi11i / I1IiiI . iIii1I11I1II1 / iii1I1I
  if 1 - 1: O0oo0OO0 / OoOoOO00 * OoOoOO00 - o0oOOo0O0Ooo % Ii1I
  if 96 - 96: O00oOoOoO0o0O / Ii1I % OoO0O00 . iIii1I11I1II1
  if 30 - 30: I11i - OoO0O00
  if 15 - 15: OoooooooOO
  if 31 - 31: II111iiii
  if 62 - 62: iIii1I11I1II1 % O0oo0OO0 % I1ii11iIi11i * O00oOoOoO0o0O
  if 87 - 87: O00oOoOoO0o0O
  if 45 - 45: oO0o + II111iiii * O0 % OOooOOo . iIii1I11I1II1
  if 55 - 55: O00oOoOoO0o0O
  if 43 - 43: OOooOOo
  if 17 - 17: i11iIiiIii
  if 94 - 94: OoooooooOO - O00oOoOoO0o0O + oO0o . OoooooooOO / i1IIi
  if 53 - 53: O0oo0OO0 % I1ii11iIi11i
  if 17 - 17: OoooooooOO % Ii1I % O0
  if 46 - 46: iii1I1I + O0oo0OO0 % OoooooooOO * I1ii11iIi11i
  if 89 - 89: O00oOoOoO0o0O - O00oOoOoO0o0O % iii1I1I / I11i + oO0o - O00oOoOoO0o0O
  if 97 - 97: Ii1I % OoOoOO00 / I1ii11iIi11i / iIii1I11I1II1 * OoooooooOO * OOooOOo
  if 80 - 80: oO0o / O0
  if 55 - 55: I1IiiI * I11i / O0 % OoOoOO00
  if 71 - 71: i11iIiiIii * OoOoOO00 * OOooOOo + oO0o + Oo0Ooo
  if 59 - 59: O00oOoOoO0o0O
  if 54 - 54: OOooOOo
  if 27 - 27: OoOoOO00 - OoO0O00 + o0oOOo0O0Ooo + Oo0ooO0oo0oO . OoO0O00
  if 86 - 86: II111iiii - OoooooooOO - Oo0ooO0oo0oO % iii1I1I
  if 16 - 16: Oo0ooO0oo0oO + Oo0Ooo + OoooooooOO
  if 87 - 87: I1IiiI . oO0o / O00oOoOoO0o0O - OoooooooOO
  if 33 - 33: oO0o % OoO0O00 . iIii1I11I1II1 / O00oOoOoO0o0O
  if 3 - 3: Ii1I + OoO0O00
  if 60 - 60: OoO0O00 . OoOoOO00 - I1ii11iIi11i - I1IiiI - II111iiii % Oo0Ooo
  if 62 - 62: O0 + iii1I1I - iii1I1I % iIii1I11I1II1
  if 47 - 47: O0oo0OO0 + I1IiiI
  if 40 - 40: iIii1I11I1II1 % Ii1I + II111iiii - I1IiiI
  if 80 - 80: oO0o
  if 81 - 81: OoooooooOO / Oo0ooO0oo0oO * iIii1I11I1II1 . Oo0Ooo + oO0o / O0
  if 84 - 84: II111iiii - o0oOOo0O0Ooo
  if 78 - 78: O00oOoOoO0o0O
  if 58 - 58: i11iIiiIii - OoOoOO00
  if 67 - 67: I1ii11iIi11i / iii1I1I + iIii1I11I1II1 % I1IiiI
  if 99 - 99: Oo0ooO0oo0oO . Ii1I
  if 92 - 92: i1IIi
  if 68 - 68: OoO0O00 % O00oOoOoO0o0O - oO0o - Oo0ooO0oo0oO . Oo0Ooo
  if 30 - 30: OoooooooOO % o0oOOo0O0Ooo + Oo0ooO0oo0oO * OoO0O00
  if 57 - 57: I11i + iIii1I11I1II1 . OoO0O00 + oO0o
  if 4 - 4: Ii1I
  if 43 - 43: i1IIi . I1IiiI * iIii1I11I1II1 * i11iIiiIii - OOooOOo + Oo0ooO0oo0oO
  if 56 - 56: Oo0Ooo % i11iIiiIii / Ii1I . O0oo0OO0 . OoO0O00 - OoOoOO00
  if 32 - 32: O0oo0OO0 / oO0o / I1IiiI
  if 22 - 22: OoO0O00 - OoOoOO00 . Oo0Ooo + o0oOOo0O0Ooo
  if 69 - 69: oO0o - I1IiiI
  if 10 - 10: i1IIi / iii1I1I . II111iiii * i1IIi % OoooooooOO
  if 83 - 83: I11i . OOooOOo + O0oo0OO0 * I11i . O0oo0OO0 + oO0o
  if 64 - 64: Ii1I . o0oOOo0O0Ooo - i1IIi
  if 35 - 35: I1ii11iIi11i % OoooooooOO
  if 59 - 59: I1IiiI % I11i
  if 32 - 32: I1IiiI * O0 + O0
  if 34 - 34: O00oOoOoO0o0O
  if 5 - 5: OoO0O00 . I1IiiI
  if 48 - 48: Oo0Ooo - OoO0O00 . I11i - iIii1I11I1II1 % Ii1I
  if 47 - 47: iii1I1I / OoooooooOO - II111iiii
  if 91 - 91: OoOoOO00 + o0oOOo0O0Ooo
  if 23 - 23: i1IIi
  if 9 - 9: i1IIi % O0oo0OO0 - OoO0O00 * OoOoOO00 . o0oOOo0O0Ooo
  if 18 - 18: Ii1I . OoOoOO00 + iii1I1I . I1IiiI + OoooooooOO . OoO0O00
  if 31 - 31: O0oo0OO0 - I11i
  if 49 - 49: iIii1I11I1II1 - iIii1I11I1II1 - OoOoOO00 + O00oOoOoO0o0O / OoOoOO00
  if 74 - 74: OoooooooOO + I1ii11iIi11i % O0
  if 32 - 32: I1ii11iIi11i + I1ii11iIi11i
  if 89 - 89: Oo0ooO0oo0oO + oO0o + Ii1I - OOooOOo
  if 12 - 12: OoOoOO00 - o0oOOo0O0Ooo - O0oo0OO0 / I11i
  if 17 - 17: OoO0O00 - O0oo0OO0 - II111iiii / O0oo0OO0 / Ii1I
  if 30 - 30: OOooOOo * I1ii11iIi11i % I1ii11iIi11i + iii1I1I * O00oOoOoO0o0O
  if 33 - 33: o0oOOo0O0Ooo + I11i * O0 * OoO0O00 . I1ii11iIi11i
  if 74 - 74: iii1I1I * iii1I1I * o0oOOo0O0Ooo / oO0o
  if 91 - 91: i11iIiiIii . I1ii11iIi11i / II111iiii
  if 97 - 97: Ii1I % i1IIi % O00oOoOoO0o0O + Oo0Ooo - O0 - I11i
  if 64 - 64: Ii1I - iii1I1I
  if 12 - 12: i1IIi
 o0Oo . setLabel ( '[COLOR=lightgray]' + OOoOO0oo0ooO + '[/COLOR]' )
 i11I . setLabel ( '[COLOR=lightgray]' + iii11 + '[/COLOR]' )
 if 99 - 99: II111iiii - I1ii11iIi11i * O00oOoOoO0o0O
 if 3 - 3: O00oOoOoO0o0O - I1ii11iIi11i * iii1I1I * I1ii11iIi11i + Oo0Ooo
 if 15 - 15: I1ii11iIi11i * Ii1I / iii1I1I . o0oOOo0O0Ooo / Ii1I % OoOoOO00
 if 75 - 75: OoooooooOO % i11iIiiIii % iIii1I11I1II1 % I1ii11iIi11i / i11iIiiIii
 OoO0OOoO0 . setLabel ( '[COLOR=lightgray]' + o00oOO0o + '[/COLOR]' )
 o00o . setLabel ( '[COLOR=lightgray]' + OOO00O + '[/COLOR]' )
 IiiI1II1II1i . setLabel ( '[COLOR=lightgray]' + ooOoo0OoO0 + '[/COLOR]' )
 if 96 - 96: Oo0ooO0oo0oO * oO0o / iIii1I11I1II1 / I11i
 if 5 - 5: o0oOOo0O0Ooo
 if 83 - 83: I11i * I1IiiI . II111iiii * i1IIi % O0
 if 35 - 35: OoOoOO00 % OoO0O00 + O0 * o0oOOo0O0Ooo % I1ii11iIi11i
 if 57 - 57: oO0o / I11i
 Ooo00O0 . setVisible ( True )
 OoO0OOoO0 . setVisible ( True )
 iiI11i . setVisible ( True )
 o0Oo . setVisible ( True )
 iiI1i . setVisible ( True )
 i11I . setVisible ( True )
 o0oO0o0oo0O0 . setVisible ( True )
 O0oo00oOOO0o . setVisible ( True )
 II1i . setVisible ( True )
 I111iiIIiI1I . setVisible ( True )
 ooO00Oo . setVisible ( True )
 Iiii1Ii1I . setVisible ( True )
 oooOOOOO . setVisible ( True )
 i1iIii . setVisible ( True )
 o0O0ooooooo00 . setVisible ( True )
 I1111ii11IIII . setVisible ( True )
 IiIi1II111I . setVisible ( True )
 o00o . setVisible ( True )
 IIi1i1 . setVisible ( True )
 o0O0Ooo . setVisible ( True )
 O0oO00oOOooO . setVisible ( True )
 IiIIii1iiI . setVisible ( True )
 ii1IiiII . setVisible ( True )
 IiiI1II1II1i . setVisible ( True )
 iIO0OO0o0O00oO . setVisible ( True )
 o00O . setVisible ( True )
 oO0o0oOo . setVisible ( True )
 OoO0O0oo0o . setVisible ( True )
 iIi11I11 . setVisible ( True )
 i1ioO . setVisible ( True )
 I11iiI . setVisible ( True )
 i1iIii1i111 . setVisible ( True )
 OOooo000OooO . setVisible ( True )
 o0o0 . setVisible ( True )
 OoOo . setVisible ( True )
 IiI1 . setVisible ( True )
 if 63 - 63: Oo0ooO0oo0oO * OoO0O00 * Oo0ooO0oo0oO + OoOoOO00
 if 25 - 25: iii1I1I * OoOoOO00 / I1IiiI / O00oOoOoO0o0O
 if 11 - 11: OOooOOo + i11iIiiIii
 if 14 - 14: OoOoOO00 / O00oOoOoO0o0O + OoO0O00 - Ii1I
 if 38 - 38: O0oo0OO0
 if 30 - 30: II111iiii + I11i . i11iIiiIii + iIii1I11I1II1
 if 100 - 100: oO0o * o0oOOo0O0Ooo / iii1I1I
 if 92 - 92: Oo0ooO0oo0oO / i11iIiiIii * OOooOOo
 if 55 - 55: Oo0ooO0oo0oO
 if 1 - 1: OoO0O00
 if 43 - 43: iIii1I11I1II1 - OOooOOo - o0oOOo0O0Ooo + I1ii11iIi11i - O0oo0OO0 % I1ii11iIi11i
 if 58 - 58: OoOoOO00
 if 27 - 27: O00oOoOoO0o0O * OOooOOo - OoooooooOO . Ii1I - II111iiii
try :
 if 62 - 62: I1IiiI / iIii1I11I1II1 * I11i
 with open ( iii , 'r' , 0 ) as o0o0Ooo0 :
  OoO000O = json . load ( o0o0Ooo0 )
  if 84 - 84: O00oOoOoO0o0O - OoOoOO00 . O00oOoOoO0o0O + Oo0ooO0oo0oO . iii1I1I
 oOooOOOoOo = OoO000O [ 'deviceid' ]
 if 96 - 96: Ii1I % iii1I1I * Ii1I % I1IiiI . o0oOOo0O0Ooo / o0oOOo0O0Ooo
 if len ( oOooOOOoOo ) <> 16 :
  if 7 - 7: OoO0O00 - Oo0ooO0oo0oO % i1IIi
  iI1i1IIi1i1 = 16
  oOooOOOoOo = '' . join ( random . choice ( string . ascii_uppercase + string . digits ) for _ in range ( iI1i1IIi1i1 ) )
  if 88 - 88: iIii1I11I1II1 / II111iiii . i11iIiiIii / OOooOOo / O00oOoOoO0o0O / O00oOoOoO0o0O
  if 62 - 62: OoOoOO00 + Ii1I . O0 . OOooOOo % iii1I1I
  if 28 - 28: Oo0Ooo . iii1I1I % O0 - OoOoOO00
  if not os . path . exists ( OOO00O0O ) :
   os . makedirs ( OOO00O0O )
   if 62 - 62: oO0o
   if 15 - 15: OoOoOO00 - I11i - I11i + O00oOoOoO0o0O * I1ii11iIi11i
 Oo ( 'deviceid' , oOooOOOoOo )
 if 21 - 21: OoOoOO00 . II111iiii
 if 15 - 15: O00oOoOoO0o0O / oO0o
except :
 if 22 - 22: iii1I1I . OoooooooOO . Oo0Ooo
 if 44 - 44: OoOoOO00 / Oo0Ooo . OoooooooOO % OoooooooOO * i11iIiiIii
 iI1i1IIi1i1 = 16
 oOooOOOoOo = '' . join ( random . choice ( string . ascii_uppercase + string . digits ) for _ in range ( iI1i1IIi1i1 ) )
 if 60 - 60: O00oOoOoO0o0O / iIii1I11I1II1 + OoooooooOO - I1ii11iIi11i * i11iIiiIii
 if not os . path . exists ( OOO00O0O ) :
  os . makedirs ( OOO00O0O )
  if 47 - 47: O0 . I1IiiI / Oo0ooO0oo0oO % i11iIiiIii
 OoO000O = { 'deviceid' : oOooOOOoOo }
 if 47 - 47: Ii1I . OoOoOO00 . iIii1I11I1II1 . o0oOOo0O0Ooo
 with open ( iii , 'w' ) as o0o0Ooo0 :
  json . dump ( OoO000O , o0o0Ooo0 )
  o0o0Ooo0 . close
  if 39 - 39: o0oOOo0O0Ooo
 Oo ( 'deviceid' , oOooOOOoOo )
 if 89 - 89: OoooooooOO + iii1I1I . O0oo0OO0 / Ii1I
 if 75 - 75: iIii1I11I1II1 * iii1I1I / OoOoOO00 * II111iiii . i1IIi
if o000oo == "true" :
 print '@ares: login start'
 if 6 - 6: Ii1I % Ii1I / OoooooooOO * oO0o . I1IiiI . i1IIi
 if 59 - 59: I11i . I11i * I1IiiI - Ii1I % OoOoOO00
 if 19 - 19: OoooooooOO / Oo0Ooo - O0oo0OO0 . OoOoOO00
 if 8 - 8: I11i % Oo0ooO0oo0oO . iIii1I11I1II1
try :
 OOO00O
 if 95 - 95: o0oOOo0O0Ooo + i11iIiiIii . I1ii11iIi11i . Oo0ooO0oo0oO . o0oOOo0O0Ooo
 if OOO00O == " " :
  Ii1111iI1i1 ( )
  if 93 - 93: iii1I1I
except :
 Ii1111iI1i1 ( )
 if 55 - 55: II111iiii % o0oOOo0O0Ooo - OoO0O00
 if 48 - 48: Oo0ooO0oo0oO * iIii1I11I1II1 % OoOoOO00
if o00O0 == "" :
 OooOO000 . setSetting ( "username" , "free" )
 OooOO000 . setSetting ( "accountstatus" , "free" )
 I1iIIiiIIi1i = "free"
 o00O0 = "free"
 O0ooO0Oo00o = "free"
 OooOO000 . setSetting ( "activationsleft" , '' )
 OooOO000 . setSetting ( "Subends" , '' )
 if 100 - 100: II111iiii - i11iIiiIii + OoO0O00 % Oo0ooO0oo0oO - iIii1I11I1II1 * i11iIiiIii
 if 30 - 30: OoO0O00 . OoO0O00 . Ii1I % Ii1I * i1IIi * oO0o
if i1I1ii11i1Iii == "no" :
 oooOoooo0Ooo0ooo0 = "instered"
else :
 if 50 - 50: i11iIiiIii . i11iIiiIii * i1IIi / i11iIiiIii . i1IIi - II111iiii
 iI1i1IIi1i1 = 4
 OoOoo00Oo0OoO = '' . join ( random . choice ( string . ascii_uppercase ) for _ in range ( iI1i1IIi1i1 ) )
 iiII1i1 = o00O0 + '&pass=' + oOO0O00Oo0O0o + '&deviceid=' + oOooOOOoOo + '&mac=' + OOO00O + '&kernel=' + o00oOO0o + '&cpufreq=' + OOoOO0oo0ooO + '&gpu=' + iii11 + '&kodiver=' + i1 + '&kodiplatform=' + Oo00 + '&kodirelease=' + i1i + '&kodirunningon=' + iiI111I1iIiI + '&kodihostcpu=' + II + '&code=' + OoOoo00Oo0OoO
 if 72 - 72: iIii1I11I1II1 / o0oOOo0O0Ooo . I1ii11iIi11i
 Oo0 = iiII1i1 . replace ( " " , "%20" )
 if 3 - 3: Oo0Ooo * oO0o % iIii1I11I1II1 % O0oo0OO0 + I1ii11iIi11i % o0oOOo0O0Ooo
 iiII1i1 = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=login&user=' + Oo0
 if 78 - 78: oO0o % o0oOOo0O0Ooo + I1IiiI % Oo0ooO0oo0oO * O0oo0OO0
 if 87 - 87: II111iiii + O0 / iii1I1I * Oo0ooO0oo0oO
 if o000oo == "true" :
  print '@ares: login url = ' + str ( iiII1i1 )
  if 52 - 52: iIii1I11I1II1 / iii1I1I . O0 * O00oOoOoO0o0O . I1IiiI
  if 67 - 67: II111iiii + Ii1I - I1IiiI * Oo0ooO0oo0oO
  if 19 - 19: i11iIiiIii * Oo0Ooo
  if 33 - 33: i11iIiiIii + I1IiiI
  if 95 - 95: I1ii11iIi11i / O00oOoOoO0o0O % iIii1I11I1II1 + O0
  if 6 - 6: O00oOoOoO0o0O
  if 73 - 73: o0oOOo0O0Ooo % o0oOOo0O0Ooo . OOooOOo * I1ii11iIi11i - Ii1I
  if 97 - 97: O00oOoOoO0o0O
 oooOoooo0Ooo0ooo0 = iIii111Ii ( iiII1i1 , 'no' )
 if 15 - 15: O0 - I1IiiI / i1IIi . O0oo0OO0
 if 64 - 64: Oo0ooO0oo0oO / i1IIi
 if 100 - 100: II111iiii
 if 16 - 16: Ii1I
if oooOoooo0Ooo0ooo0 == "downloadfailed" :
 print ' '
 print '@ares: Offline mode triggered via login fail'
 print ' '
 i1I1ii11i1Iii = "no"
 OOooo = xbmcgui . Dialog ( )
 OOooo . ok ( "Ares Wizard" , "Failed to reach Ares server. Ares will continue to work but with reduced features.. Hopefully this won't last too long." )
 if 96 - 96: o0oOOo0O0Ooo / O0oo0OO0 % Ii1I - Oo0ooO0oo0oO
 if 35 - 35: OOooOOo
 if 90 - 90: i11iIiiIii
if oooOoooo0Ooo0ooo0 == "devicemac-mismatch" :
 print '@ares: devicemac-mismatch, resetting account'
 Oo0O0oOoO0o0 = 'devicemac-mismatch'
 if 47 - 47: OoO0O00 . i11iIiiIii
 if 9 - 9: OoOoOO00 - I11i . OoooooooOO % Oo0ooO0oo0oO
if oooOoooo0Ooo0ooo0 == "mac0" :
 print '@ares: mac address not detected'
 Oo0O0oOoO0o0 = 'mac0'
 if 13 - 13: OoO0O00 * iIii1I11I1II1 + II111iiii - Oo0Ooo - OoOoOO00
if oooOoooo0Ooo0ooo0 == "inserted" :
 print '@ares: free account created'
 Oo0O0oOoO0o0 = 'inserted'
 if 43 - 43: iii1I1I / O0oo0OO0 * I1IiiI % Oo0ooO0oo0oO % I1IiiI
if oooOoooo0Ooo0ooo0 == "user-not-found" :
 print '@ares: user not found'
 Oo0O0oOoO0o0 = 'user-not-found'
 if 18 - 18: OoO0O00
 if 99 - 99: iii1I1I / oO0o . i11iIiiIii / I11i + i1IIi - I11i
try :
 if 50 - 50: i1IIi
 O00o0O00 = json . loads ( oooOoooo0Ooo0ooo0 )
 if 56 - 56: OoO0O00 + O0oo0OO0 / Ii1I
 if 75 - 75: OoOoOO00
 if 96 - 96: o0oOOo0O0Ooo * I11i * Oo0Ooo
 for oO00O in O00o0O00 :
  O0ooO0Oo00o = oO00O [ 'userlevel' ]
  OOoOoo = oO00O [ 'Subends' ]
  O00O0oOO00O00 = oO00O [ 'Banned' ]
  oOOOOo0 = oO00O [ 'BanReason' ]
  Iii11I = oO00O [ 'regremain' ]
  II1iII1IIIIi = oO00O [ 'deviceid' ]
  if 98 - 98: o0oOOo0O0Ooo
except :
 if 51 - 51: iIii1I11I1II1 / O00oOoOoO0o0O / iii1I1I
 if o00O0 == "free" :
  if 31 - 31: I11i + Oo0Ooo
  if 16 - 16: O0
  try :
   if 80 - 80: I11i / Oo0Ooo + I1ii11iIi11i
   O00o0O00 = json . loads ( oooOoooo0Ooo0ooo0 )
   if 18 - 18: II111iiii - iii1I1I / iIii1I11I1II1 % OoOoOO00 % I1ii11iIi11i / o0oOOo0O0Ooo
   if 47 - 47: OOooOOo
   if 24 - 24: Ii1I % o0oOOo0O0Ooo
   for oO00O in O00o0O00 :
    O00O0oOO00O00 = oO00O [ 'Banned' ]
    oOOOOo0 = oO00O [ 'BanReason' ]
    II1iII1IIIIi = oO00O [ 'deviceid' ]
    if 87 - 87: o0oOOo0O0Ooo % iii1I1I / Oo0ooO0oo0oO - O00oOoOoO0o0O + i11iIiiIii
    if 85 - 85: OoooooooOO * O00oOoOoO0o0O . OOooOOo / iii1I1I / OoooooooOO
   if O00O0oOO00O00 <> "" :
    OooOO000 . setSetting ( "accountstatus" , "Banned" )
    OOooo = xbmcgui . Dialog ( )
    OOooo . ok ( "Banned" , oOOOOo0 )
    sys . exit ( )
    if 87 - 87: OoO0O00
    if 32 - 32: i11iIiiIii - OoOoOO00 * I11i . Oo0Ooo * Oo0ooO0oo0oO
   Oo ( 'deviceid' , II1iII1IIIIi )
   OooOO000 . setSetting ( "deviceid" , II1iII1IIIIi )
   Oo0O0oOoO0o0 = 'inserted'
   if 21 - 21: OOooOOo
  except :
   Oo0O0oOoO0o0 = 'loginerror'
   if 11 - 11: oO0o % i11iIiiIii * O0
   if 28 - 28: O0oo0OO0 / iIii1I11I1II1 + OOooOOo . I1ii11iIi11i % OOooOOo + OoO0O00
   if 79 - 79: oO0o
   if 39 - 39: O0oo0OO0 % oO0o % O0 % O0 - iii1I1I - oO0o
  else :
   if 83 - 83: i11iIiiIii + iIii1I11I1II1
   Oo0O0oOoO0o0 = 'loginerror'
   if 21 - 21: o0oOOo0O0Ooo / i11iIiiIii % O0oo0OO0
 else :
  if 56 - 56: o0oOOo0O0Ooo * iIii1I11I1II1 . Ii1I + OoOoOO00 % O0oo0OO0
  Oo0O0oOoO0o0 = oooOoooo0Ooo0ooo0
  if 11 - 11: OOooOOo
  if 12 - 12: OoooooooOO * OOooOOo * I1ii11iIi11i * Oo0ooO0oo0oO
  if 26 - 26: OoooooooOO . i1IIi + OoO0O00
  if 42 - 42: i11iIiiIii * o0oOOo0O0Ooo % I11i % Oo0Ooo + o0oOOo0O0Ooo * i11iIiiIii
if not o00O0 == "free" :
 if 66 - 66: Ii1I / O00oOoOoO0o0O . OoooooooOO * Oo0Ooo % i11iIiiIii
 try :
  OooOO000 . setSetting ( "Subends" , OOoOoo )
  OooOO000 . setSetting ( "activationsleft" , Iii11I )
  OooOO000 . setSetting ( "accountstatus" , O0ooO0Oo00o )
 except :
  pass
  if 100 - 100: I1ii11iIi11i % II111iiii * i11iIiiIii - iii1I1I
  if 69 - 69: OOooOOo + iii1I1I / O0oo0OO0
 if O00O0oOO00O00 <> "" :
  OooOO000 . setSetting ( "accountstatus" , "Banned" )
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Banned" , oOOOOo0 )
  sys . exit ( )
  if 37 - 37: iIii1I11I1II1 * I11i / O00oOoOoO0o0O * Oo0Ooo % i11iIiiIii
  if 93 - 93: Oo0ooO0oo0oO + Oo0ooO0oo0oO
 if O0ooO0Oo00o == "admin" :
  OooOO000 . setSetting ( "accountstatus" , "admin" )
  if o000oo == "true" :
   print '@ares: admin login confirmed'
   if 65 - 65: OoooooooOO * I11i * oO0o % I1ii11iIi11i * II111iiii
   if 86 - 86: i11iIiiIii / I11i * iii1I1I - iii1I1I
 if O0ooO0Oo00o == "staff" :
  OooOO000 . setSetting ( "accountstatus" , "staff" )
  if o000oo == "true" :
   print '@ares: staff login confirmed'
   if 32 - 32: Oo0Ooo . O0
   if 48 - 48: I1ii11iIi11i % II111iiii + I11i
 if O0ooO0Oo00o == "Registered" :
  OooOO000 . setSetting ( "accountstatus" , "Registered" )
  if o000oo == "true" :
   print '@ares: login confirmed'
   if 25 - 25: O00oOoOoO0o0O * o0oOOo0O0Ooo / I1IiiI . O00oOoOoO0o0O % II111iiii
   if 50 - 50: OoOoOO00 * iii1I1I
 if O0ooO0Oo00o == "awaiting_activation" :
  OooOO000 . setSetting ( "accountstatus" , "awaiting_activation" )
  if o000oo == "true" :
   print '@ares: login confirmed'
   if 59 - 59: I1IiiI * I1IiiI / I11i
   if 92 - 92: o0oOOo0O0Ooo
   if 8 - 8: iii1I1I + I1ii11iIi11i . Ii1I
   if 50 - 50: Oo0Ooo
   if 16 - 16: Ii1I - OoOoOO00 % Oo0Ooo / Ii1I . I11i + Oo0ooO0oo0oO
   if 78 - 78: iIii1I11I1II1 + OoO0O00 + i11iIiiIii
   if 21 - 21: Oo0Ooo + Ii1I % Oo0ooO0oo0oO + OoOoOO00 % I11i
   if 22 - 22: i1IIi / OoooooooOO . OoO0O00
   if 83 - 83: I1IiiI - OoooooooOO + I1ii11iIi11i . Ii1I / o0oOOo0O0Ooo + Oo0ooO0oo0oO
if Oo0O0oOoO0o0 == "loginerror" :
 OooOO000 . setSetting ( "accountstatus" , "free" )
 if 90 - 90: I1IiiI - i11iIiiIii
 if 42 - 42: OOooOOo . Oo0Ooo
 if 21 - 21: iii1I1I . I1IiiI / I11i
 if 97 - 97: iIii1I11I1II1 + i1IIi - o0oOOo0O0Ooo
elif Oo0O0oOoO0o0 == "inserted" :
 OooOO000 . setSetting ( "username" , "free" )
 OooOO000 . setSetting ( "accountstatus" , "free" )
 I1iIIiiIIi1i = "free"
 o00O0 = "free"
 O0ooO0Oo00o = "free"
 OooOO000 . setSetting ( "activationsleft" , '' )
 OooOO000 . setSetting ( "Subends" , '' )
 if 73 - 73: OoO0O00 - i11iIiiIii % O0oo0OO0 / Oo0Ooo - OoooooooOO % OOooOOo
 if 79 - 79: I1IiiI / o0oOOo0O0Ooo . Ii1I * I1ii11iIi11i + I11i
elif Oo0O0oOoO0o0 == "user-not-found" :
 OooOO000 . setSetting ( "username" , "free" )
 OooOO000 . setSetting ( "accountstatus" , "free" )
 I1iIIiiIIi1i = "free"
 o00O0 = "free"
 O0ooO0Oo00o = "free"
 OooOO000 . setSetting ( "activationsleft" , '' )
 OooOO000 . setSetting ( "Subends" , '' )
 if 96 - 96: OoO0O00 * II111iiii
 if 1 - 1: I1IiiI - OoOoOO00
else :
 try :
  O00o0O00 = json . loads ( Oo0O0oOoO0o0 )
  if 74 - 74: OoOoOO00 * II111iiii + O0 + I11i
  if 3 - 3: iIii1I11I1II1 - i1IIi / iii1I1I + i1IIi + O0
  if 18 - 18: iIii1I11I1II1 . iii1I1I % OOooOOo % oO0o + iIii1I11I1II1 * OoooooooOO
  for oO00O in O00o0O00 :
   if o00O0 <> "free" :
    OOoOoo = oO00O [ 'Subends' ]
   O0ooO0Oo00o = oO00O [ 'userlevel' ]
   O00O0oOO00O00 = oO00O [ 'Banned' ]
   oOOOOo0 = oO00O [ 'BanReason' ]
 except :
  pass
  if 78 - 78: O00oOoOoO0o0O
  if 38 - 38: OoO0O00 * I1ii11iIi11i
  if 4 - 4: OoO0O00 . I1ii11iIi11i
  if 21 - 21: i11iIiiIii / OoO0O00 / I1ii11iIi11i * O0 - II111iiii * OOooOOo
  if 27 - 27: o0oOOo0O0Ooo . OoOoOO00 * Ii1I * iii1I1I * O0
  if 93 - 93: O00oOoOoO0o0O % O0oo0OO0 % II111iiii
  if 20 - 20: OoooooooOO * O0oo0OO0
  if 38 - 38: iii1I1I . OoooooooOO
  if 28 - 28: O0oo0OO0 * i1IIi . I1ii11iIi11i
  if 75 - 75: O0 / oO0o * Oo0ooO0oo0oO - OOooOOo / i1IIi
  if 61 - 61: I11i
  if 100 - 100: O0 - iIii1I11I1II1 * Oo0Ooo
def iIIiIIIii1Ii1 ( ) :
 try :
  import xbmc , xbmcgui , xbmcaddon , xbmcvfs
  if 59 - 59: I1ii11iIi11i % i11iIiiIii
  o0o0Ooo0 = xbmcvfs . File ( xbmcaddon . Addon ( ) . getAddonInfo ( 'changelog' ) )
  Ooo0000o = o0o0Ooo0 . read ( ) ; o0o0Ooo0 . close ( )
  if 5 - 5: I11i
  IIi11111iiiI = '%s - %s' % ( xbmc . getLocalizedString ( 24054 ) , xbmcaddon . Addon ( ) . getAddonInfo ( 'name' ) )
  if 4 - 4: I1IiiI * OoooooooOO
  id = 10147
  if 21 - 21: OoooooooOO
  xbmc . executebuiltin ( 'ActivateWindow(%d)' % id )
  xbmc . sleep ( 100 )
  if 36 - 36: iii1I1I
  O0o0oOIiIIII1ii1ii = xbmcgui . Window ( id )
  if 85 - 85: OoO0O00 . o0oOOo0O0Ooo . I1IiiI
  Oo000o0o0 = 50
  while ( Oo000o0o0 > 0 ) :
   try :
    xbmc . sleep ( 10 )
    O0o0oOIiIIII1ii1ii . getControl ( 1 ) . setLabel ( IIi11111iiiI )
    O0o0oOIiIIII1ii1ii . getControl ( 5 ) . setText ( Ooo0000o )
    Oo000o0o0 = 0
   except :
    Oo000o0o0 -= 1
    if 76 - 76: oO0o * Oo0ooO0oo0oO - iIii1I11I1II1
  return id
 except :
  return id
  if 25 - 25: OoOoOO00 / Oo0Ooo / OoooooooOO
  if 91 - 91: O00oOoOoO0o0O - I1ii11iIi11i - O0oo0OO0
  if 35 - 35: iIii1I11I1II1 . O0 + OoOoOO00 / OoO0O00 / O00oOoOoO0o0O * II111iiii
I1ii111I = xbmcplugin . getSetting ( int ( sys . argv [ 1 ] ) , 'firstrun' )
if I1ii111I == 'true' :
 IIIi1ii1i1 = iIIiIIIii1Ii1 ( )
 time . sleep ( 10 )
 OooOO000 . setSetting ( 'firstrun' , 'false' )
 if 87 - 87: II111iiii / iIii1I11I1II1 % I1ii11iIi11i
 if 11 - 11: o0oOOo0O0Ooo * OoO0O00
 if 92 - 92: OoOoOO00 . Oo0Ooo * I11i
 if 86 - 86: O0
def O0o00 ( text ) :
 try :
  import xbmc , xbmcgui , xbmcaddon , xbmcvfs
  if 60 - 60: I1IiiI * OoOoOO00 - oO0o + OoooooooOO % i1IIi
  if 24 - 24: I1ii11iIi11i - Oo0Ooo
  IIi11111iiiI = '%s' % ( xbmcaddon . Addon ( ) . getAddonInfo ( 'name' ) )
  if 36 - 36: I1IiiI . OOooOOo % II111iiii * O00oOoOoO0o0O
  id = 10147
  if 34 - 34: I11i % iii1I1I - Oo0ooO0oo0oO - I1IiiI
  xbmc . executebuiltin ( 'ActivateWindow(%d)' % id )
  xbmc . sleep ( 100 )
  if 44 - 44: Ii1I . o0oOOo0O0Ooo . iIii1I11I1II1 + OoooooooOO - I1IiiI
  O0o0oOIiIIII1ii1ii = xbmcgui . Window ( id )
  if 22 - 22: I11i * I1ii11iIi11i . OoooooooOO / Oo0Ooo / Ii1I
  Oo000o0o0 = 50
  while ( Oo000o0o0 > 0 ) :
   try :
    xbmc . sleep ( 10 )
    O0o0oOIiIIII1ii1ii . getControl ( 1 ) . setLabel ( IIi11111iiiI )
    O0o0oOIiIIII1ii1ii . getControl ( 5 ) . setText ( text )
    Oo000o0o0 = 0
   except :
    Oo000o0o0 -= 1
    if 54 - 54: O0oo0OO0 % Ii1I + Oo0ooO0oo0oO
    if 45 - 45: Ii1I / oO0o * O0oo0OO0 . Ii1I
  while xbmc . getCondVisibility ( 'Window.IsVisible(%d)' % id ) == 1 :
   xbmc . sleep ( 50 )
   if 25 - 25: I1ii11iIi11i / I1ii11iIi11i
  return id
 except :
  return id
  if 79 - 79: Oo0Ooo - OoO0O00 % Oo0Ooo . II111iiii
  if 84 - 84: Oo0ooO0oo0oO * OoooooooOO + O0
  if 84 - 84: i1IIi . I11i . i1IIi . Oo0Ooo
  if 21 - 21: II111iiii . O0 + Oo0Ooo - i11iIiiIii
  if 5 - 5: iIii1I11I1II1 * i11iIiiIii + OoO0O00 + I11i * O0 % Oo0ooO0oo0oO
global oO0oooo0
oO0oooo0 = 1
global Oo0oOo0Ooo
Oo0oOo0Ooo = 0
global iiI1
iiI1 = ""
if 29 - 29: OoooooooOO / O00oOoOoO0o0O + OoOoOO00 - O0oo0OO0 + O00oOoOoO0o0O . i1IIi
if 26 - 26: i11iIiiIii - II111iiii
if 43 - 43: I1IiiI
if 35 - 35: Oo0ooO0oo0oO + OoOoOO00 * OoooooooOO - II111iiii
IIIIiii1IIii = ""
if 19 - 19: i1IIi / Ii1I / OoOoOO00 . I1IiiI / Ii1I % o0oOOo0O0Ooo
Iii11iI1I = pyxbmct . AddonDialogWindow ( '' )
Iii11iI1I . setGeometry ( 1240 , 650 , 300 , 160 )
if 39 - 39: Oo0ooO0oo0oO - OoooooooOO
if 88 - 88: i1IIi + iIii1I11I1II1 * i11iIiiIii - OoooooooOO % o0oOOo0O0Ooo
if 74 - 74: Oo0ooO0oo0oO - i11iIiiIii
if 34 - 34: O00oOoOoO0o0O + O0oo0OO0 + Oo0Ooo / II111iiii
if 33 - 33: Ii1I . i1IIi - II111iiii - OoO0O00
if 31 - 31: I11i - OoOoOO00 / o0oOOo0O0Ooo * OoOoOO00 / Oo0Ooo + o0oOOo0O0Ooo
if 46 - 46: O00oOoOoO0o0O * OoO0O00 / OOooOOo + Oo0Ooo
if 24 - 24: Oo0ooO0oo0oO % OOooOOo . O0 * Oo0Ooo
if 52 - 52: O0 . O0oo0OO0 + iii1I1I / i11iIiiIii
if 52 - 52: oO0o % Oo0Ooo * II111iiii
if 24 - 24: i11iIiiIii * i1IIi * i1IIi
if 27 - 27: i1IIi - oO0o + OOooOOo
if 3 - 3: O00oOoOoO0o0O % O0oo0OO0 . OoooooooOO
if 19 - 19: O0oo0OO0 * Ii1I - oO0o
if 78 - 78: OoO0O00 - Ii1I / OOooOOo
if 81 - 81: OoOoOO00
def i1111 ( ) :
 if 51 - 51: I11i + Oo0ooO0oo0oO / I1IiiI
 if 3 - 3: iIii1I11I1II1 / OOooOOo % oO0o . Ii1I - Ii1I
 global oooO
 global IIIIiii1IIii
 global OOo0
 global iiIiii
 global I1II1
 global wizardtextbackup
 global oooi1i1iI1iiiI
 global iiII1iiiiiii
 global OOii1ii1i11I1I
 global ooOooo0O00
 global wizardname
 global oo0
 if 2 - 2: I1ii11iIi11i % Ii1I
 if 51 - 51: I1ii11iIi11i % OoooooooOO - OoooooooOO . I11i
 I1IiiIiii1 . setLabel ( ' ' )
 O0Ooo000 . setLabel ( ' ' )
 IiIIiii11II1 . setLabel ( ' ' )
 iiIiii . setLabel ( ' ' )
 iiII1iiiiiii . setLabel ( ' ' )
 if 97 - 97: i1IIi % I11i . o0oOOo0O0Ooo * I1IiiI % II111iiii
 I1II1 = ii111 . getListItem ( ii111 . getSelectedPosition ( ) ) . getLabel ( )
 if 41 - 41: I11i . I1ii11iIi11i
 IIiII11 = "COLOR"
 if IIiII11 in I1II1 :
  oo0O00OOOOO = I1II1 . find ( ']' )
  OoOII11IiI1 = I1II1 [ oo0O00OOOOO + 1 : ]
  OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
  if 69 - 69: O0 * Oo0ooO0oo0oO % Oo0ooO0oo0oO / oO0o
  I1II1 = OoOII11IiI1 [ : OoOOOO00oOO ]
  if 2 - 2: oO0o % OoO0O00
 wizardname = I1II1
 if 3 - 3: oO0o / OoO0O00 % i11iIiiIii
 ooOO0ooo0o . setVisible ( False )
 i1IiI1I . setVisible ( False )
 o0OOo00oO0oOO . setVisible ( False )
 oooO00Oo . setVisible ( False )
 ooO00o . setVisible ( False )
 o0o00O0oOooO0 . setVisible ( False )
 o0oO0OO00ooOO . setVisible ( False )
 if 26 - 26: Oo0ooO0oo0oO . O0oo0OO0 / II111iiii % Ii1I
 if 82 - 82: OOooOOo % O0 % iIii1I11I1II1 % O00oOoOoO0o0O + i11iIiiIii
 if "Assorted Builds" in I1II1 :
  O000oOo ( )
  Ooo0O ( )
  ooOooo0O00 = ""
  wizardname = ""
  oo0 = ""
 elif I1II1 == "The Black Box Builds" or I1II1 == "The Black Box Builds (Test Purposes)" :
  OoOo00O0Ooo00 ( )
 else :
  if 12 - 12: I1ii11iIi11i
  if i1I1ii11i1Iii == "yes" :
   if 16 - 16: O00oOoOoO0o0O . o0oOOo0O0Ooo / o0oOOo0O0Ooo - O00oOoOoO0o0O
   O00o0O00 = json . loads ( OOo0 )
   for oO00O in O00o0O00 :
    if I1II1 == oO00O [ 'name' ] :
     if 97 - 97: OoooooooOO
     if 16 - 16: O0oo0OO0
     if 56 - 56: iii1I1I % I1IiiI * OOooOOo * i11iIiiIii
     ooOooo0O00 = oO00O [ 'url' ]
     if 15 - 15: I1IiiI - oO0o - II111iiii + O0
     if o000oo == "true" :
      print '@ares: wizardurl...'
      print ooOooo0O00
      if 54 - 54: iIii1I11I1II1 - O00oOoOoO0o0O - O00oOoOoO0o0O
      if 18 - 18: i11iIiiIii + iIii1I11I1II1 . i11iIiiIii
     oooO = iIii111Ii ( ooOooo0O00 , 'yes' )
     if 63 - 63: iii1I1I - OoO0O00 * OOooOOo
     if oooO == "downloadfailed" :
      return ( )
      if 89 - 89: iii1I1I / Oo0Ooo
     oooO = oooO . replace ( '\n' , '' ) . replace ( '\r' , '' )
     if 66 - 66: o0oOOo0O0Ooo + OoOoOO00 % OoooooooOO . I11i
     if 30 - 30: II111iiii - Oo0Ooo - i11iIiiIii + O0
     if 93 - 93: i1IIi + O0oo0OO0 / OoO0O00 - I11i % Oo0Ooo / Ii1I
     if o000oo == "true" :
      print '@ares: wizarddata....'
      print oooO
      if 1 - 1: Oo0Ooo / Ii1I . i11iIiiIii % OOooOOo + o0oOOo0O0Ooo + O0
     O0o0O . reset ( )
     o00000 = 0
     if 28 - 28: iIii1I11I1II1 - I11i + OoOoOO00 + II111iiii - OoO0O00 % Oo0ooO0oo0oO
     if "currentversion=" in oooO :
      if 97 - 97: OoO0O00 . OoOoOO00
      Iiiii = re . compile ( 'name="(.+?)".+?rl="(.+?)".+?mg="(.+?)".+?anart="(.+?)".+?escription="(.+?)".+?urrentversion="(.+?)"' ) . findall ( oooO )
      if 78 - 78: I1ii11iIi11i + I1ii11iIi11i . OoOoOO00 - O00oOoOoO0o0O * iIii1I11I1II1 * O0
      for I1 , iiII1i1 , OoO , II11IiIi11 , ooOO , oO0o0 in Iiiii :
       if 26 - 26: OoooooooOO + oO0o + OoO0O00 . O0
       if 46 - 46: OoooooooOO - Oo0Ooo * O0oo0OO0 * OOooOOo * O0oo0OO0 . oO0o
       O0o0O . addItem ( '[COLOR=goldenrod]' + I1 + '[/COLOR]' )
       o00000 = o00000 + 1
       if 96 - 96: Ii1I / O00oOoOoO0o0O % o0oOOo0O0Ooo + I11i
       if 46 - 46: OoO0O00 * I1IiiI
     elif "version=" in oooO :
      if 25 - 25: O0oo0OO0 . O00oOoOoO0o0O % O0 % i1IIi
      print "version found in wizarddata"
      if 53 - 53: O0 % Oo0ooO0oo0oO
      Iiiii = re . compile ( 'name="(.+?)".+?rl="(.+?)".+?mg="(.+?)".+?anart="(.+?)".+?escription="(.+?)".+?ersion="(.+?)"' ) . findall ( oooO )
      if 41 - 41: O00oOoOoO0o0O
      for I1 , iiII1i1 , OO0O00 , II11IiIi11 , ooOO , o0o0O00oOo in Iiiii :
       if 29 - 29: Oo0ooO0oo0oO
       if 70 - 70: oO0o . O0 % I11i % O00oOoOoO0o0O - I11i * I1ii11iIi11i
       O0o0O . addItem ( '[COLOR=goldenrod]' + I1 + '[/COLOR]' )
       o00000 = o00000 + 1
       if 22 - 22: i1IIi
     else :
      if 82 - 82: oO0o . iIii1I11I1II1 - I1ii11iIi11i
      Iiiii = re . compile ( 'name="(.+?)".+?rl="(.+?)".+?mg="(.+?)".+?anart="(.+?)".+?escription="(.+?)"' ) . findall ( oooO )
      if 55 - 55: Oo0Ooo % Ii1I . iIii1I11I1II1 * O0oo0OO0
      for I1 , iiII1i1 , OoO , II11IiIi11 , ooOO in Iiiii :
       if 33 - 33: O0 - I1IiiI / I1ii11iIi11i / OoO0O00 + iii1I1I - oO0o
       if 27 - 27: O0oo0OO0 + Oo0ooO0oo0oO - O0oo0OO0 % i11iIiiIii * Oo0Ooo * o0oOOo0O0Ooo
       O0o0O . addItem ( '[COLOR=goldenrod]' + I1 + '[/COLOR]' )
       o00000 = o00000 + 1
       if 88 - 88: OOooOOo
       if 25 - 25: OoO0O00 + o0oOOo0O0Ooo . Oo0ooO0oo0oO - Ii1I . oO0o * Ii1I
  else :
   if 85 - 85: i1IIi
   print ' '
   print ' SELECTNAME: ' + I1II1
   print ' '
   if 94 - 94: OoooooooOO . O0 / OoooooooOO
   if 67 - 67: i11iIiiIii + OoOoOO00
   if 50 - 50: Oo0ooO0oo0oO . i1IIi + I1ii11iIi11i . OOooOOo
   if 97 - 97: I1IiiI
   wizardtextbackup = wizardtextbackup . replace ( '\n' , '' ) . replace ( '\r' , '' )
   if 63 - 63: O0 - OoOoOO00 / i11iIiiIii / OoooooooOO / Oo0ooO0oo0oO / II111iiii
   if o000oo == "true" :
    print wizardtextbackup
    if 45 - 45: II111iiii . OoO0O00 + OoO0O00 * iIii1I11I1II1
   Iiiii = re . compile ( 'name="(.+?)".+?rl="(.+?)"' ) . findall ( wizardtextbackup )
   if 23 - 23: O00oOoOoO0o0O * OoOoOO00 % Ii1I / Ii1I - Oo0ooO0oo0oO - OOooOOo
   for I1 , iiII1i1 in Iiiii :
    if 86 - 86: OOooOOo . OoooooooOO * I1IiiI - Oo0Ooo / i11iIiiIii * iii1I1I
    if o000oo == "true" :
     print ' '
     print 'name=' + I1
     print 'url=' + iiII1i1
     print ' '
     if 56 - 56: I1IiiI . I11i % iii1I1I
    if I1 == I1II1 :
     if 33 - 33: I11i / OOooOOo - OOooOOo / i11iIiiIii * OoOoOO00 + O0
     ooOooo0O00 = iiII1i1
     break
     if 2 - 2: i11iIiiIii % I1IiiI
     if 90 - 90: II111iiii
     if 2 - 2: Ii1I - OoooooooOO - i11iIiiIii % Oo0Ooo / Ii1I
   if o000oo == "true" :
    print '@ares: wizardurl...'
    print ooOooo0O00
    if 77 - 77: o0oOOo0O0Ooo . o0oOOo0O0Ooo * O0oo0OO0 + OOooOOo - i11iIiiIii
    if 45 - 45: I1IiiI . I1IiiI - Oo0Ooo * OOooOOo
   oooO = iIii111Ii ( ooOooo0O00 , 'yes' )
   if 71 - 71: i1IIi / I11i
   if oooO == "downloadfailed" :
    return ( )
    if 14 - 14: OoooooooOO
   oooO = oooO . replace ( '\n' , '' ) . replace ( '\r' , '' )
   if 99 - 99: o0oOOo0O0Ooo * o0oOOo0O0Ooo
   if 6 - 6: i11iIiiIii + oO0o % Oo0ooO0oo0oO + i11iIiiIii - OOooOOo
   if 12 - 12: iii1I1I . oO0o % O00oOoOoO0o0O * OoooooooOO . O00oOoOoO0o0O
   if o000oo == "true" :
    print '@ares: wizarddata....'
    print oooO
    if 15 - 15: I1IiiI . I1IiiI / i11iIiiIii
   O0o0O . reset ( )
   o00000 = 0
   if 17 - 17: iIii1I11I1II1 / OoO0O00 - II111iiii
   if 46 - 46: iIii1I11I1II1 * oO0o / i11iIiiIii + II111iiii + I11i
   if "currentversion=" in oooO :
    if 30 - 30: O0 * O00oOoOoO0o0O - O0oo0OO0 % O0 * Ii1I
    Iiiii = re . compile ( 'name="(.+?)".+?rl="(.+?)".+?mg="(.+?)".+?anart="(.+?)".+?escription="(.+?)".+?urrentversion="(.+?)"' ) . findall ( oooO )
    if 29 - 29: I1ii11iIi11i % I1ii11iIi11i % Ii1I + Oo0ooO0oo0oO % iIii1I11I1II1
    for I1 , iiII1i1 , OoO , II11IiIi11 , ooOO , oO0o0 in Iiiii :
     if 41 - 41: I1ii11iIi11i % O0oo0OO0
     if 37 - 37: Oo0Ooo . I1IiiI % OoOoOO00 . OoO0O00 - Oo0Ooo / OoO0O00
     O0o0O . addItem ( '[COLOR=goldenrod]' + I1 + '[/COLOR]' )
     o00000 = o00000 + 1
     if 34 - 34: i11iIiiIii + OoO0O00 + i11iIiiIii . O00oOoOoO0o0O % O0
     if 64 - 64: o0oOOo0O0Ooo . iIii1I11I1II1
   elif "version=" in oooO :
    if 86 - 86: Oo0ooO0oo0oO - I11i . iIii1I11I1II1 - iIii1I11I1II1
    Iiiii = re . compile ( 'name="(.+?)".+?rl="(.+?)".+?mg="(.+?)".+?anart="(.+?)".+?escription="(.+?)".+?ersion="(.+?)"' ) . findall ( oooO )
    if 61 - 61: Ii1I % Oo0Ooo + OoOoOO00
    for I1 , iiII1i1 , OoO , II11IiIi11 , ooOO , o0o0O00oOo in Iiiii :
     if 60 - 60: oO0o . OoooooooOO
     if 40 - 40: I11i
     O0o0O . addItem ( '[COLOR=goldenrod]' + I1 + '[/COLOR]' )
     o00000 = o00000 + 1
     if 44 - 44: Oo0ooO0oo0oO
   else :
    if 35 - 35: II111iiii + iii1I1I / I1ii11iIi11i * I1IiiI . I11i
    Iiiii = re . compile ( 'name="(.+?)".+?rl="(.+?)".+?mg="(.+?)".+?anart="(.+?)".+?escription="(.+?)"' ) . findall ( oooO )
    if 97 - 97: I1IiiI / o0oOOo0O0Ooo
    for I1 , iiII1i1 , OoO , II11IiIi11 , ooOO in Iiiii :
     if 13 - 13: I1ii11iIi11i
     if 72 - 72: Oo0Ooo + O00oOoOoO0o0O / Ii1I * Oo0Ooo
     O0o0O . addItem ( '[COLOR=goldenrod]' + I1 + '[/COLOR]' )
     o00000 = o00000 + 1
     if 41 - 41: OOooOOo - OoOoOO00 . I1IiiI + i11iIiiIii + OoO0O00 * iii1I1I
     if 85 - 85: OoO0O00 + II111iiii
     if 87 - 87: OoO0O00
     if 93 - 93: OoooooooOO
     if 80 - 80: o0oOOo0O0Ooo
     if 3 - 3: i11iIiiIii / OOooOOo + oO0o
     if 10 - 10: OoO0O00 . OoO0O00 + O0
     if 13 - 13: i1IIi . I1IiiI
     if 45 - 45: Oo0ooO0oo0oO % I11i
     if 37 - 37: iii1I1I
     if 70 - 70: O0 + iIii1I11I1II1 % O0 * o0oOOo0O0Ooo - Oo0Ooo - Oo0ooO0oo0oO
     if 94 - 94: i1IIi + O00oOoOoO0o0O / OoooooooOO - oO0o / OOooOOo / OoOoOO00
     if 55 - 55: OOooOOo
     if 5 - 5: I11i / OoOoOO00
     if 48 - 48: i1IIi - oO0o . OoooooooOO - OoO0O00 - i1IIi
     if 19 - 19: oO0o % Ii1I + I1ii11iIi11i . II111iiii * i11iIiiIii
     if 87 - 87: Ii1I / O0oo0OO0 % OoOoOO00 * I1ii11iIi11i - OoooooooOO / OoOoOO00
  O000oOo ( )
  O0o0O . setVisible ( True )
  if 24 - 24: I11i . OOooOOo * i1IIi . I1ii11iIi11i / Oo0ooO0oo0oO / O0
  if o00000 > 11 :
   iiiii1I1III1 . setVisible ( True )
  else :
   iiiii1I1III1 . setVisible ( False )
   if 62 - 62: o0oOOo0O0Ooo % II111iiii
  if o00000 > 0 :
   if 22 - 22: oO0o - o0oOOo0O0Ooo
   oooo00oO0O . controlDown ( O0o0O )
   O0o0O . controlUp ( oooo00oO0O )
   if 44 - 44: i1IIi - iIii1I11I1II1 * iii1I1I . Oo0ooO0oo0oO % i1IIi
   if 16 - 16: oO0o + O0oo0OO0 % OoOoOO00 + O0oo0OO0 / OoO0O00
   ii1O0oOOo . controlDown ( O0o0O )
   oooo00oO0O . controlDown ( O0o0O )
   if 73 - 73: Oo0Ooo . I11i * iii1I1I . I1ii11iIi11i . O0
   iiIiIi1I1 . controlDown ( O0o0O )
   Oo0OOo . controlDown ( O0o0O )
   ii11I1IIII11 . controlDown ( O0o0O )
   iiI1II11I1iI . controlDown ( O0o0O )
   O0o0O . controlRight ( i1III1iI )
   i1III1iI . controlLeft ( O0o0O )
   i1III1iI . controlUp ( ooooo0O0 )
   i1III1iI . controlDown ( ooOo000OoO0o )
   if 8 - 8: I1ii11iIi11i / i1IIi - i1IIi - I1ii11iIi11i
   if 78 - 78: iii1I1I % iii1I1I % O0 - I11i - OoO0O00
   if 59 - 59: I1IiiI / I1ii11iIi11i * i1IIi % iii1I1I
   ooooo0O0 . controlUp ( oooo00oO0O )
   ooooo0O0 . controlDown ( i1III1iI )
   ooooo0O0 . controlLeft ( O0o0O )
   if 78 - 78: iIii1I11I1II1 / I1ii11iIi11i / O00oOoOoO0o0O
   ooOo000OoO0o . controlUp ( i1III1iI )
   ooOo000OoO0o . controlDown ( IiII1i1iI )
   ooOo000OoO0o . controlLeft ( O0o0O )
   if 11 - 11: I11i
   IiII1i1iI . controlUp ( ooOo000OoO0o )
   IiII1i1iI . controlLeft ( O0o0O )
   if 59 - 59: OOooOOo - O0oo0OO0 - II111iiii / i1IIi * OOooOOo . OoooooooOO
   if 46 - 46: O00oOoOoO0o0O * OoooooooOO . o0oOOo0O0Ooo - O0oo0OO0 * I1IiiI
   if 83 - 83: Oo0Ooo . o0oOOo0O0Ooo + iii1I1I + o0oOOo0O0Ooo % iIii1I11I1II1 * OoOoOO00
   if 65 - 65: OOooOOo . II111iiii * i11iIiiIii + OOooOOo
   OOii1ii1i11I1I . setVisible ( True )
   if 99 - 99: I1ii11iIi11i % Oo0Ooo
   if 31 - 31: o0oOOo0O0Ooo - II111iiii * OOooOOo . OOooOOo - oO0o
   if 57 - 57: OOooOOo / i11iIiiIii / O0oo0OO0 - Oo0Ooo . iIii1I11I1II1
   iiII1iiiiiii . setVisible ( True )
   if 84 - 84: O00oOoOoO0o0O
   if 42 - 42: O0 . O0oo0OO0 / I11i
   if 69 - 69: OoOoOO00 / O0oo0OO0 * I1IiiI
   iiIiii . setVisible ( True )
   if 76 - 76: O0 + II111iiii * OoO0O00
   O0Ooo000 . setVisible ( True )
   IIi11iI1Iii . setVisible ( True )
   if 1 - 1: o0oOOo0O0Ooo
   if 34 - 34: o0oOOo0O0Ooo + OOooOOo . OoO0O00 + I1IiiI + OoooooooOO
   if 90 - 90: Ii1I / OoOoOO00 - iIii1I11I1II1 / i1IIi * O0oo0OO0 - Oo0ooO0oo0oO
   I1IiiIiii1 . setVisible ( True )
   i11i . setVisible ( True )
   if 2 - 2: iii1I1I * I11i * Oo0ooO0oo0oO + i11iIiiIii + oO0o
   if 81 - 81: o0oOOo0O0Ooo * OoO0O00
   IiIi1i . setVisible ( True )
   if 18 - 18: i11iIiiIii / o0oOOo0O0Ooo - oO0o . I11i * i1IIi
   if 67 - 67: Ii1I
   if 64 - 64: OoOoOO00 + iii1I1I * OoOoOO00 - I1IiiI * OoooooooOO
   i1III1iI . setVisible ( True )
   IiII1i1iI . setVisible ( True )
   ooooo0O0 . setVisible ( True )
   ooOo000OoO0o . setVisible ( True )
   if 27 - 27: II111iiii + i11iIiiIii
   i1oO00O . setVisible ( True )
   oo0o0ooooo . setVisible ( True )
   if 32 - 32: i1IIi
   if 76 - 76: II111iiii % Oo0ooO0oo0oO - I1ii11iIi11i
   if Oo0O0oOoO0o0 == 'mac0' :
    IiII1i1iI . setEnabled ( False )
   else :
    IiII1i1iI . setEnabled ( True )
    if 50 - 50: II111iiii / I1IiiI . Ii1I % i11iIiiIii
    if 66 - 66: oO0o / OOooOOo / iii1I1I
    if 5 - 5: O0oo0OO0 . oO0o
    if 77 - 77: iii1I1I / i11iIiiIii
    if 20 - 20: O0 . I11i
    if 67 - 67: OoOoOO00 - Oo0ooO0oo0oO - iIii1I11I1II1
    if 31 - 31: II111iiii + o0oOOo0O0Ooo * i11iIiiIii . o0oOOo0O0Ooo
    if 73 - 73: oO0o / OOooOOo * II111iiii % OoooooooOO - i1IIi - Oo0ooO0oo0oO
   II11iI = O0o0O . getListItem ( O0o0O . getSelectedPosition ( ) ) . getLabel ( )
   if 49 - 49: iii1I1I / OOooOOo + OoooooooOO + OOooOOo - OOooOOo - Oo0Ooo
   IIiII11 = "COLOR"
   if IIiII11 in II11iI :
    oo0O00OOOOO = II11iI . find ( ']' )
    OoOII11IiI1 = II11iI [ oo0O00OOOOO + 1 : ]
    OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
    if 99 - 99: Ii1I * o0oOOo0O0Ooo + iIii1I11I1II1 / Oo0Ooo
    II11iI = OoOII11IiI1 [ : OoOOOO00oOO ]
    if 37 - 37: oO0o / i11iIiiIii - OoO0O00
    if 16 - 16: I11i
   o00000 = 0
   if 23 - 23: o0oOOo0O0Ooo + Oo0ooO0oo0oO - O00oOoOoO0o0O
   if 23 - 23: i11iIiiIii - Ii1I % iii1I1I + I11i * oO0o
   if "currentversion=" in oooO :
    if 45 - 45: iii1I1I - I1ii11iIi11i * O0 % OoO0O00 % I1IiiI
    Iiiii = re . compile ( 'name="(.+?)".+?rl="(.+?)".+?mg="(.+?)".+?anart="(.+?)".+?escription="(.+?)".+?urrentversion="(.+?)"' ) . findall ( oooO )
    if 21 - 21: O00oOoOoO0o0O * oO0o - OoOoOO00 . i1IIi
    for I1 , iiII1i1 , OoO , II11IiIi11 , ooOO , oO0o0 in Iiiii :
     if 52 - 52: OoOoOO00 . I1ii11iIi11i . Oo0Ooo
     if II11iI == I1 :
      if 99 - 99: OoooooooOO - i1IIi % o0oOOo0O0Ooo / o0oOOo0O0Ooo + O00oOoOoO0o0O
      iiII1iiiiiii . setLabel ( label = '[COLOR=darkgray]' + I1 + '[/COLOR]' )
      OOii1ii1i11I1I . setImage ( II11IiIi11 )
      o00000 = o00000 + 1
      IiIIiii11II1 . setLabel ( label = '[COLOR=darkgray]' + oO0o0 + '[/COLOR]' )
      if 96 - 96: OoooooooOO + OOooOOo - O0oo0OO0 / oO0o % oO0o
      break
      if 34 - 34: O00oOoOoO0o0O
      if 55 - 55: I1ii11iIi11i
   elif "version=" in oooO :
    if 79 - 79: OOooOOo + o0oOOo0O0Ooo % iii1I1I . oO0o
    Iiiii = re . compile ( 'name="(.+?)".+?rl="(.+?)".+?mg="(.+?)".+?anart="(.+?)".+?escription="(.+?)".+?ersion="(.+?)"' ) . findall ( oooO )
    if 49 - 49: Ii1I + i11iIiiIii * OoOoOO00 . OoOoOO00 . I1ii11iIi11i . Oo0Ooo
    for I1 , iiII1i1 , OoO , II11IiIi11 , ooOO , o0o0O00oOo in Iiiii :
     if 61 - 61: I11i / OOooOOo
     if II11iI == I1 :
      if 85 - 85: OoOoOO00 - I11i . OoOoOO00 . OoOoOO00
      iiII1iiiiiii . setLabel ( label = '[COLOR=darkgray]' + I1 + '[/COLOR]' )
      OOii1ii1i11I1I . setImage ( II11IiIi11 )
      o00000 = o00000 + 1
      iiii1i1II1 . setVisible ( True )
      IiIIiii11II1 . setLabel ( label = '[COLOR=darkgray]' + o0o0O00oOo + '[/COLOR]' )
      IiIIiii11II1 . setVisible ( True )
      break
      if 62 - 62: O00oOoOoO0o0O % OoooooooOO * OoO0O00 + OoO0O00 % Ii1I % iii1I1I
   else :
    if 66 - 66: I1IiiI . OOooOOo - OoO0O00 % Oo0Ooo * o0oOOo0O0Ooo - oO0o
    Iiiii = re . compile ( 'name="(.+?)".+?rl="(.+?)".+?mg="(.+?)".+?anart="(.+?)".+?escription="(.+?)"' ) . findall ( oooO )
    if 68 - 68: I11i - i11iIiiIii / o0oOOo0O0Ooo + Oo0ooO0oo0oO / I1IiiI
    for I1 , iiII1i1 , OoO , II11IiIi11 , ooOO in Iiiii :
     if 31 - 31: O0oo0OO0 . OoooooooOO . i1IIi
     if II11iI == I1 :
      if 65 - 65: OoO0O00 . Oo0ooO0oo0oO
      iiII1iiiiiii . setLabel ( label = '[COLOR=darkgray]' + I1 + '[/COLOR]' )
      OOii1ii1i11I1I . setImage ( II11IiIi11 )
      o00000 = o00000 + 1
      iiii1i1II1 . setVisible ( True )
      IiIIiii11II1 . setVisible ( True )
      break
      if 12 - 12: O0oo0OO0 + O0 - oO0o . O00oOoOoO0o0O
      if 46 - 46: O00oOoOoO0o0O . Oo0ooO0oo0oO / iii1I1I
      if 63 - 63: II111iiii - I1ii11iIi11i * II111iiii
      if 92 - 92: OoO0O00 % Oo0ooO0oo0oO * O0 % iIii1I11I1II1 / i1IIi / OoOoOO00
      if 67 - 67: O0oo0OO0 + I11i + O0oo0OO0 . OOooOOo % o0oOOo0O0Ooo / Oo0ooO0oo0oO
      if 78 - 78: I1ii11iIi11i . O0
      if 56 - 56: oO0o - i1IIi * O0 / I11i * I1IiiI . I11i
      if 54 - 54: i11iIiiIii % i1IIi + Oo0Ooo / OoOoOO00
    if i1I1ii11i1Iii == "yes" :
     if 26 - 26: I11i . I1ii11iIi11i
     if oooi1i1iI1iiiI <> "" :
      pass
     else :
      iI1i1IIi1i1 = 4
      OoOoo00Oo0OoO = '' . join ( random . choice ( string . ascii_uppercase ) for _ in range ( iI1i1IIi1i1 ) )
      iiII1i1 = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=getbuildsother&code=' + OoOoo00Oo0OoO
      if 55 - 55: OoOoOO00 * O0oo0OO0 % OoO0O00 - OoO0O00
      if 34 - 34: O0 * OoO0O00 - oO0o - O00oOoOoO0o0O * Ii1I . II111iiii
      if o000oo == "true" :
       print '@ares: buildlistotherurl...'
       print '@ares: (2)'
       print iiII1i1
       if 28 - 28: O0 % iii1I1I - i1IIi
       if 49 - 49: Oo0ooO0oo0oO . I11i - iIii1I11I1II1
       if 41 - 41: Oo0ooO0oo0oO * i11iIiiIii % Oo0ooO0oo0oO . oO0o
       if 97 - 97: oO0o - iii1I1I + O00oOoOoO0o0O . OoOoOO00 + iIii1I11I1II1
      oooi1i1iI1iiiI = iIii111Ii ( iiII1i1 , 'yes' )
      if 75 - 75: Oo0ooO0oo0oO + Oo0ooO0oo0oO . O0oo0OO0 % iii1I1I / iIii1I11I1II1 * iii1I1I
      if oooi1i1iI1iiiI == "downloadfailed" :
       return ( )
       if 13 - 13: II111iiii * i11iIiiIii - i1IIi * OoO0O00 + i1IIi
       if 43 - 43: O0 % oO0o * I1IiiI
       if 64 - 64: II111iiii + i11iIiiIii
     if o000oo == "true" :
      print ' '
      print '@ares: buildlistotherraw...'
      print ' '
      print oooi1i1iI1iiiI
      if 17 - 17: O0 * I1IiiI
      if 40 - 40: iIii1I11I1II1 * iii1I1I % iIii1I11I1II1
      if 39 - 39: i1IIi . Ii1I - Oo0Ooo
      if 91 - 91: I1IiiI - OoooooooOO - OoooooooOO
     O00o0O00 = json . loads ( oooi1i1iI1iiiI )
     for oO00O in O00o0O00 :
      if oO00O [ 'name' ] == II11iI :
       if 69 - 69: iii1I1I * i11iIiiIii / i1IIi
       if o000oo == "true" :
        print '@ares: build name found...'
        if 86 - 86: I1IiiI % I11i * O0 + i1IIi % O0oo0OO0
        if 97 - 97: II111iiii * OoOoOO00 - O0oo0OO0 / i11iIiiIii / OoOoOO00
        if 25 - 25: Oo0Ooo / Oo0Ooo
        if 74 - 74: OOooOOo
       global ii1I1
       ii1I1 = oO00O [ 'rating' ]
       I1I1iiiiiIi1 = '[COLOR=darkgray]' + oO00O [ 'votes' ] + '[/COLOR]'
       i1Io00OOOo = oO00O [ 'votes' ]
       IIOOO0O00O0OOOO = '[COLOR=darkgray]This week: ' + oO00O [ 'thismonth' ] + ' / Total: ' + oO00O [ 'downloads' ] + '[/COLOR]'
       Ii1 = oO00O [ 'downloads' ]
       if 30 - 30: O0 . Ii1I / o0oOOo0O0Ooo + I1IiiI - O0
       O0Ooo000 . setVisible ( True )
       IIi11iI1Iii . setVisible ( True )
       O0Ooo000 . setLabel ( label = I1I1iiiiiIi1 )
       if 88 - 88: i11iIiiIii
       if 33 - 33: OoO0O00 + O0
       I1IiiIiii1 . setVisible ( True )
       i11i . setVisible ( True )
       I1IiiIiii1 . setLabel ( label = IIOOO0O00O0OOOO )
       if 20 - 20: o0oOOo0O0Ooo % I11i . Oo0ooO0oo0oO - i1IIi . O0
       IiIi1i . setVisible ( True )
       if 10 - 10: i1IIi
       iI1i1Iiii ( ii1I1 , i1Io00OOOo )
       break
       if 49 - 49: O0oo0OO0 - Ii1I . O0
       if 46 - 46: OOooOOo
       if 64 - 64: I1IiiI / OoOoOO00
       if 6 - 6: i11iIiiIii - iii1I1I * i1IIi - iii1I1I
       if 8 - 8: I11i / i11iIiiIii . O0 / OoO0O00 * oO0o + O0oo0OO0
       if 91 - 91: I1IiiI
       if 84 - 84: O0 % Ii1I
     O0Ooo000 . setVisible ( True )
     if 3 - 3: I1IiiI . I11i / I1ii11iIi11i
     if 2 - 2: O00oOoOoO0o0O + I11i / iIii1I11I1II1 . i11iIiiIii . i1IIi * Oo0ooO0oo0oO
     ii1iI1i1 = os . path . join ( oO0 , I1 + '.zip' )
     if 14 - 14: Oo0Ooo . O0 - oO0o - i11iIiiIii
     if os . path . isfile ( ii1iI1i1 ) :
      ooOo000OoO0o . setEnabled ( True )
     else :
      ooOo000OoO0o . setEnabled ( False )
      if 8 - 8: I1IiiI / iIii1I11I1II1 / OoooooooOO / Oo0Ooo / Oo0ooO0oo0oO
      if 80 - 80: I11i
     I1IiiIiii1 . setVisible ( True )
     if 26 - 26: II111iiii + I1IiiI . II111iiii - oO0o % OoO0O00
     if 1 - 1: OoO0O00 - II111iiii
     IiIi1i . setVisible ( True )
     if 75 - 75: Oo0Ooo - OoOoOO00 + oO0o % i1IIi * OOooOOo
     if 56 - 56: OoOoOO00 / OoO0O00 / I1IiiI % OoooooooOO
     if 39 - 39: I1IiiI + II111iiii * Oo0Ooo % Ii1I . o0oOOo0O0Ooo * oO0o
     ooooo0O0 . setVisible ( True )
     i1III1iI . setVisible ( True )
     IiII1i1iI . setVisible ( True )
     ooOo000OoO0o . setVisible ( True )
     IiIIiii11II1 . setVisible ( True )
     iiii1i1II1 . setVisible ( True )
     if 42 - 42: Ii1I / Oo0Ooo
     if Oo0O0oOoO0o0 == 'mac0' :
      IiII1i1iI . setEnabled ( False )
     else :
      IiII1i1iI . setEnabled ( True )
      if 25 - 25: OoooooooOO % Ii1I * O0oo0OO0 * I11i + I1IiiI % I1ii11iIi11i
      if 70 - 70: Ii1I + I1ii11iIi11i * I11i * i1IIi . O0oo0OO0
      if 76 - 76: OoooooooOO * OoOoOO00 . OoooooooOO
      if 46 - 46: Oo0ooO0oo0oO * o0oOOo0O0Ooo % II111iiii / O0oo0OO0
      if 29 - 29: OoO0O00 - i11iIiiIii % Oo0Ooo % o0oOOo0O0Ooo
      if 30 - 30: oO0o - Ii1I % Ii1I
      if 8 - 8: O00oOoOoO0o0O
      if 68 - 68: O00oOoOoO0o0O . OoooooooOO - i11iIiiIii + i11iIiiIii
  IIIIiii1IIii = "buildother"
  if 81 - 81: OoOoOO00 + iii1I1I . i11iIiiIii
  if 10 - 10: OoOoOO00 + I11i - iIii1I11I1II1 - I11i
  if 58 - 58: Oo0ooO0oo0oO
  if 98 - 98: Ii1I / OoO0O00 % OoooooooOO
  if 65 - 65: Oo0ooO0oo0oO % Oo0Ooo - I1IiiI % O0oo0OO0 + iIii1I11I1II1 / iIii1I11I1II1
  if 94 - 94: O00oOoOoO0o0O - Oo0Ooo . o0oOOo0O0Ooo - Oo0ooO0oo0oO - oO0o . I11i
  if 39 - 39: oO0o + OoOoOO00
  if 68 - 68: i1IIi * oO0o / i11iIiiIii
  Iii11iI1I . setFocus ( oooo00oO0O )
  if 96 - 96: I1IiiI
def o0OoO0 ( ) :
 if 9 - 9: II111iiii / OoOoOO00
 global i1I1i111Ii
 global I1
 if 67 - 67: i1IIi - o0oOOo0O0Ooo % i11iIiiIii . Ii1I - II111iiii
 O00o0O00 = json . loads ( i1I1i111Ii )
 for oO00O in O00o0O00 :
  if oO00O [ 'name' ] == I1 :
   iiII1i1 = oO00O [ 'url' ]
   if 73 - 73: OoOoOO00 * O0 / o0oOOo0O0Ooo / i11iIiiIii . OOooOOo / I1ii11iIi11i
   iIiIi1i1ii11 = urllib2 . Request ( iiII1i1 )
   iIiIi1i1ii11 . add_header ( 'User-Agent' , I1ii1Ii1 )
   if 66 - 66: I1IiiI . OoooooooOO * OoooooooOO * O00oOoOoO0o0O - O00oOoOoO0o0O
   try :
    if 93 - 93: i11iIiiIii - O00oOoOoO0o0O * oO0o
    o0o0Ooo0 = urllib2 . urlopen ( iIiIi1i1ii11 )
    if 25 - 25: Oo0ooO0oo0oO
   except HTTPError , ii111I1iIiIi111I :
    OOooo = xbmcgui . Dialog ( )
    OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . code ) )
    print '@Ares: HTTP Error: ' + str ( ii111I1iIiIi111I . code )
    return ( 'downloadfailed' )
    if 77 - 77: O0oo0OO0 * I1IiiI
   except URLError , ii111I1iIiIi111I :
    OOooo = xbmcgui . Dialog ( )
    OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . reason ) , "" , "" )
    print '@Ares: URL Error: ' + str ( ii111I1iIiIi111I . reason )
    return ( 'downloadfailed' )
    if 27 - 27: O0
   except IOError , ii111I1iIiIi111I :
    OOooo = xbmcgui . Dialog ( )
    OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . errno ) + " - " + str ( ii111I1iIiIi111I . strerror ) , "" , "" )
    print '@Ares: IO Error: ' + str ( ii111I1iIiIi111I . errno ) + ' - ' + str ( ii111I1iIiIi111I . strerror )
    return ( 'downloadfailed' )
    if 32 - 32: O0
   except :
    OOooo = xbmcgui . Dialog ( )
    OOooo . ok ( "Download Error" , "Unspecified Error (sorry)" , "" , "" )
    print '@Ares: Download Error: Unspecified'
    return ( 'downloadfailed' )
    if 48 - 48: iii1I1I . O0 * Oo0Ooo * Ii1I . I11i . O0
    if 50 - 50: I11i . I1ii11iIi11i
   IiO0 = o0o0Ooo0 . headers [ "Content-Length" ]
   if 53 - 53: O0 . o0oOOo0O0Ooo . II111iiii * OoOoOO00 . OOooOOo
   IiO0 = float ( IiO0 )
   if 78 - 78: OoOoOO00 * OoOoOO00 - OoO0O00 / oO0o
   IiO0 = IiO0 / 1024 / 1024
   if 24 - 24: O0oo0OO0 . oO0o + Oo0ooO0oo0oO . I1ii11iIi11i . II111iiii
   if 25 - 25: I1IiiI
   if 88 - 88: i1IIi
   i1oO00O . setLabel ( '[COLOR=darkgray]' + "%.2f" % IiO0 + '[/COLOR]' )
   break
   if 93 - 93: I1ii11iIi11i . OoO0O00
   if 67 - 67: II111iiii + OoooooooOO + I1IiiI
   if 76 - 76: O0 / Oo0Ooo . OoOoOO00
 Iii11iI1I . setFocus ( i1III1iI )
 if 81 - 81: o0oOOo0O0Ooo + II111iiii % O0oo0OO0 - oO0o + Oo0ooO0oo0oO - I1ii11iIi11i
 if 99 - 99: iIii1I11I1II1
def OO00oO ( ) :
 if 51 - 51: OoooooooOO * O0 - OoO0O00 . Oo0Ooo % II111iiii + O00oOoOoO0o0O
 global oooO
 if 48 - 48: O00oOoOoO0o0O . II111iiii - i11iIiiIii * iii1I1I
 if IIIIiii1IIii == "blackbox" :
  Iii11iI1I . setFocus ( i1III1iI )
  return ( )
  if 51 - 51: OoooooooOO + I11i . iii1I1I + i11iIiiIii * iii1I1I - OoO0O00
  if 60 - 60: iii1I1I * iIii1I11I1II1 . OoOoOO00 . o0oOOo0O0Ooo / iIii1I11I1II1
  if 36 - 36: i1IIi . OoooooooOO - II111iiii - OoOoOO00 - O00oOoOoO0o0O
 II11iI = O0o0O . getListItem ( O0o0O . getSelectedPosition ( ) ) . getLabel ( )
 if 53 - 53: I1ii11iIi11i - II111iiii . i11iIiiIii
 IIiII11 = "COLOR"
 if IIiII11 in II11iI :
  oo0O00OOOOO = II11iI . find ( ']' )
  OoOII11IiI1 = II11iI [ oo0O00OOOOO + 1 : ]
  OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
  if 76 - 76: iIii1I11I1II1 - Oo0Ooo
  II11iI = OoOII11IiI1 [ : OoOOOO00oOO ]
  if 79 - 79: I1IiiI * O00oOoOoO0o0O . OoooooooOO % O0oo0OO0 * O0oo0OO0
 Iiiii = re . compile ( 'name="(.+?)".+?rl="(.+?)".+?mg="(.+?)".+?anart="(.+?)".+?escription="(.+?)"' ) . findall ( oooO )
 for I1 , iiII1i1 , OoO , II11IiIi11 , ooOO in Iiiii :
  if 17 - 17: O0oo0OO0 - O0oo0OO0 . oO0o / O0oo0OO0
  if I1 == II11iI :
   if 36 - 36: I1ii11iIi11i * i1IIi + iIii1I11I1II1
   iIiIi1i1ii11 = urllib2 . Request ( iiII1i1 )
   iIiIi1i1ii11 . add_header ( 'User-Agent' , I1ii1Ii1 )
   if 55 - 55: I1IiiI . O0oo0OO0 - I1IiiI % oO0o / iIii1I11I1II1 * Ii1I
   if 77 - 77: OOooOOo
   try :
    if 29 - 29: II111iiii % iIii1I11I1II1 * O0 . o0oOOo0O0Ooo
    o0o0Ooo0 = urllib2 . urlopen ( iIiIi1i1ii11 )
    if 56 - 56: i1IIi . Oo0ooO0oo0oO + I11i - i11iIiiIii
   except HTTPError , ii111I1iIiIi111I :
    OOooo = xbmcgui . Dialog ( )
    OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . code ) )
    print '@Ares: HTTP Error: ' + str ( ii111I1iIiIi111I . code )
    return ( 'downloadfailed' )
    if 100 - 100: iIii1I11I1II1 - i1IIi . OOooOOo
   except URLError , ii111I1iIiIi111I :
    OOooo = xbmcgui . Dialog ( )
    OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . reason ) , "" , "" )
    print '@Ares: URL Error: ' + str ( ii111I1iIiIi111I . reason )
    return ( 'downloadfailed' )
    if 73 - 73: O0oo0OO0 / I11i / i11iIiiIii - I1ii11iIi11i % Oo0ooO0oo0oO
   except IOError , ii111I1iIiIi111I :
    OOooo = xbmcgui . Dialog ( )
    OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . errno ) + " - " + str ( ii111I1iIiIi111I . strerror ) , "" , "" )
    print '@Ares: IO Error: ' + str ( ii111I1iIiIi111I . errno ) + ' - ' + str ( ii111I1iIiIi111I . strerror )
    return ( 'downloadfailed' )
    if 92 - 92: I1IiiI - o0oOOo0O0Ooo % I1ii11iIi11i / iii1I1I % oO0o
   except :
    OOooo = xbmcgui . Dialog ( )
    OOooo . ok ( "Download Error" , "Unspecified Error (sorry)" , "" , "" )
    print '@Ares: Download Error: Unspecified'
    return ( 'downloadfailed' )
    if 43 - 43: Oo0Ooo % oO0o . i11iIiiIii - O0
   IiO0 = o0o0Ooo0 . headers [ "Content-Length" ]
   if 5 - 5: i1IIi + Ii1I
   IiO0 = float ( IiO0 )
   if 38 - 38: I1IiiI . O0 + OOooOOo / I1ii11iIi11i . iIii1I11I1II1 - i1IIi
   IiO0 = IiO0 / 1024 / 1024
   if 3 - 3: Oo0Ooo + oO0o
   if 65 - 65: I1IiiI / OoOoOO00 % I1IiiI * i11iIiiIii * OoooooooOO / I11i
   if 91 - 91: i11iIiiIii / i11iIiiIii
   i1oO00O . setLabel ( "%.2f" % IiO0 )
   break
   if 9 - 9: I11i / O0oo0OO0 + iIii1I11I1II1 + I1IiiI - II111iiii
 Iii11iI1I . setFocus ( i1III1iI )
 if 96 - 96: iii1I1I + Oo0Ooo - OoooooooOO . i1IIi + i1IIi % iIii1I11I1II1
 if 80 - 80: OoooooooOO / O0 / O0oo0OO0 - Oo0Ooo . i11iIiiIii
 if 3 - 3: Oo0Ooo - OOooOOo * OoO0O00 - II111iiii . OoooooooOO
 if 14 - 14: I1IiiI
def OoOo00O0Ooo00 ( ) :
 if 41 - 41: O0oo0OO0 % i1IIi + OoO0O00 / oO0o
 global oooi1i1iI1iiiI
 global IIIIiii1IIii
 global iiIiii
 global I1II1
 global Ooo0oOooo0
 global oOOOoo00
 if 48 - 48: i1IIi . Oo0Ooo . i1IIi . I1ii11iIi11i * I1IiiI - Ii1I
 IIIIiii1IIii = "blackbox"
 I1IiiIiii1 . setLabel ( ' ' )
 O0Ooo000 . setLabel ( ' ' )
 iiIiii . setLabel ( ' ' )
 if 83 - 83: OoooooooOO
 O0o0O . reset ( )
 o00000 = 0
 if 42 - 42: I1ii11iIi11i . i1IIi - OoOoOO00 - oO0o + i11iIiiIii
 if 65 - 65: I1IiiI - O0
 if 15 - 15: I11i + OoOoOO00 / Oo0Ooo - I1IiiI * I1ii11iIi11i % oO0o
 if 90 - 90: Ii1I / I11i
 o0OO = "http://tbbwizard.co.uk"
 if 92 - 92: I1IiiI . I11i / OoO0O00 * Ii1I
 iiII1i1 = o0OO + "/pod/curr_builds.php"
 if 12 - 12: OoooooooOO % oO0o
 if 92 - 92: Oo0ooO0oo0oO % OoO0O00 + O0 + OoOoOO00 / OoO0O00 * iIii1I11I1II1
 if 79 - 79: O0
 iIiIi1i1ii11 = urllib2 . Request ( iiII1i1 )
 iIiIi1i1ii11 . add_header ( 'User-Agent' , 'Kodi/Ares Wizard' )
 if 71 - 71: OoO0O00 - O0
 try :
  o0O00o00Ooo = urllib2 . urlopen ( iIiIi1i1ii11 )
  if 73 - 73: iIii1I11I1II1
 except HTTPError , ii111I1iIiIi111I :
  if 7 - 7: OoOoOO00
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . code ) )
  print '@Ares: HTTP Error: ' + str ( ii111I1iIiIi111I . code )
  return ( 'downloadfailed' )
  if 55 - 55: oO0o . OoO0O00 + iIii1I11I1II1 + OoOoOO00 / I1ii11iIi11i - O0
 except URLError , ii111I1iIiIi111I :
  if 14 - 14: II111iiii - OoO0O00 - O0 * OoooooooOO / I1IiiI
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . reason ) , "" , "" )
  print '@Ares: URL Error: ' + str ( ii111I1iIiIi111I . reason )
  return ( 'downloadfailed' )
  if 3 - 3: I11i
 except IOError , ii111I1iIiIi111I :
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . errno ) + " - " + str ( ii111I1iIiIi111I . strerror ) , "" , "" )
  print '@Ares: IO Error: ' + str ( ii111I1iIiIi111I . errno ) + ' - ' + str ( ii111I1iIiIi111I . strerror )
  return ( 'downloadfailed' )
  if 46 - 46: I1ii11iIi11i * O0oo0OO0 - iIii1I11I1II1
 except :
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( 'Ares Wizard' , 'Failed to communicate with BlackBox server' )
  print '@Ares: Download Error: Unspecified'
  return ( 'downloadfailed' )
  if 25 - 25: II111iiii / OOooOOo + Oo0Ooo - iIii1I11I1II1 - OoOoOO00
  if 97 - 97: OOooOOo . OOooOOo / I1ii11iIi11i + I1IiiI * i1IIi
 O00o0O00 = o0O00o00Ooo . read ( )
 if 53 - 53: O0
 Ooo0oOooo0 = json . loads ( O00o0O00 )
 if 28 - 28: iii1I1I % OoO0O00 . OoO0O00 / O00oOoOoO0o0O * Oo0Ooo * iii1I1I
 if 49 - 49: I1IiiI / O0oo0OO0 * iii1I1I + I1IiiI % oO0o % Oo0ooO0oo0oO
 if 27 - 27: OoO0O00 / iii1I1I . I1ii11iIi11i
 if 71 - 71: OoO0O00 . i11iIiiIii . iIii1I11I1II1 + I1IiiI - o0oOOo0O0Ooo
 if 34 - 34: iii1I1I
 for i1IIii1i in Ooo0oOooo0 :
  O0o0O . addItem ( '[COLOR=goldenrod]' + i1IIii1i [ 'bfriendlyname' ] + '[/COLOR]' )
  if 6 - 6: OoO0O00 . OoOoOO00 + I1ii11iIi11i
  o00000 = o00000 + 1
  if 24 - 24: OoO0O00 . Ii1I
  if 26 - 26: O0 * I1IiiI - OOooOOo * OoooooooOO * II111iiii % OoOoOO00
  if 56 - 56: OOooOOo * i11iIiiIii % Oo0ooO0oo0oO * OoOoOO00 % Oo0Ooo * O00oOoOoO0o0O
 O000oOo ( )
 O0o0O . setVisible ( True )
 if 30 - 30: i1IIi + o0oOOo0O0Ooo - OoOoOO00 . OOooOOo
 if o00000 > 11 :
  iiiii1I1III1 . setVisible ( True )
 else :
  iiiii1I1III1 . setVisible ( False )
  if 95 - 95: i1IIi . I11i + O0 . I11i - I11i / Oo0Ooo
 if o00000 > 0 :
  if 41 - 41: OoooooooOO . OOooOOo - Ii1I * OoO0O00 % i11iIiiIii
  oooo00oO0O . controlDown ( O0o0O )
  O0o0O . controlUp ( oooo00oO0O )
  if 7 - 7: Ii1I
  if 16 - 16: O00oOoOoO0o0O * o0oOOo0O0Ooo % II111iiii - II111iiii + Oo0ooO0oo0oO
  ii1O0oOOo . controlDown ( O0o0O )
  oooo00oO0O . controlDown ( O0o0O )
  if 55 - 55: OoO0O00 % OoOoOO00
  iiIiIi1I1 . controlDown ( O0o0O )
  Oo0OOo . controlDown ( O0o0O )
  ii11I1IIII11 . controlDown ( O0o0O )
  iiI1II11I1iI . controlDown ( O0o0O )
  O0o0O . controlRight ( i1III1iI )
  i1III1iI . controlLeft ( O0o0O )
  i1III1iI . controlUp ( ooooo0O0 )
  i1III1iI . controlDown ( ooOo000OoO0o )
  if 58 - 58: Ii1I
  if 17 - 17: OoO0O00 - oO0o % Oo0Ooo % oO0o * O0oo0OO0 / O00oOoOoO0o0O
  if 88 - 88: Oo0ooO0oo0oO . II111iiii * O0 % O00oOoOoO0o0O
  ooooo0O0 . controlUp ( oooo00oO0O )
  ooooo0O0 . controlDown ( i1III1iI )
  ooooo0O0 . controlLeft ( O0o0O )
  if 15 - 15: O0 % i1IIi - OOooOOo . O00oOoOoO0o0O
  ooOo000OoO0o . controlUp ( i1III1iI )
  ooOo000OoO0o . controlDown ( IiII1i1iI )
  ooOo000OoO0o . controlLeft ( O0o0O )
  if 1 - 1: I1IiiI
  IiII1i1iI . controlUp ( ooOo000OoO0o )
  IiII1i1iI . controlLeft ( O0o0O )
  if 40 - 40: o0oOOo0O0Ooo % I11i % O0
  if 88 - 88: o0oOOo0O0Ooo - oO0o
  if 73 - 73: II111iiii
  global OOii1ii1i11I1I
  if 7 - 7: O0 / OoO0O00
  OOii1ii1i11I1I . setVisible ( True )
  if 90 - 90: iii1I1I % oO0o / iIii1I11I1II1
  global iiII1iiiiiii
  if 52 - 52: I1IiiI / o0oOOo0O0Ooo
  iiII1iiiiiii . setVisible ( True )
  if 20 - 20: O0oo0OO0 . I1IiiI - iIii1I11I1II1 / iii1I1I
  if 46 - 46: O0oo0OO0 . i11iIiiIii
  if 89 - 89: OoO0O00 - OOooOOo - i1IIi - OoO0O00 % iIii1I11I1II1
  iiIiii . setVisible ( True )
  if 52 - 52: o0oOOo0O0Ooo * O0 + I1ii11iIi11i
  O0Ooo000 . setVisible ( True )
  IIi11iI1Iii . setVisible ( True )
  if 83 - 83: I11i + OOooOOo - OoooooooOO
  if 7 - 7: O00oOoOoO0o0O % Oo0ooO0oo0oO / OoooooooOO / o0oOOo0O0Ooo + OoO0O00 - OoO0O00
  if 15 - 15: i1IIi + OOooOOo / Ii1I
  I1IiiIiii1 . setVisible ( True )
  i11i . setVisible ( True )
  if 51 - 51: OOooOOo + O0
  if 91 - 91: i11iIiiIii + o0oOOo0O0Ooo % OoO0O00 / oO0o - i1IIi
  IiIi1i . setVisible ( True )
  if 82 - 82: Ii1I . OoooooooOO + OoooooooOO % OoO0O00 % I1ii11iIi11i
  if 65 - 65: Oo0Ooo . I11i
  if 7 - 7: Oo0Ooo * II111iiii
  i1III1iI . setVisible ( True )
  IiII1i1iI . setVisible ( True )
  ooooo0O0 . setVisible ( True )
  ooOo000OoO0o . setVisible ( True )
  if 11 - 11: OoOoOO00 % OoooooooOO
  i1oO00O . setVisible ( False )
  oo0o0ooooo . setVisible ( False )
  if 92 - 92: OoOoOO00 - iii1I1I * Ii1I - i1IIi
  if 87 - 87: Ii1I * O0oo0OO0 + iIii1I11I1II1 * o0oOOo0O0Ooo * iIii1I11I1II1 . I11i
  if Oo0O0oOoO0o0 == 'mac0' :
   IiII1i1iI . setEnabled ( False )
  else :
   IiII1i1iI . setEnabled ( True )
   if 66 - 66: Ii1I / OoO0O00 . O0 . I11i % OoooooooOO / OOooOOo
   if 49 - 49: I1IiiI * iii1I1I - OoO0O00 % Ii1I + Ii1I * O0oo0OO0
   if 94 - 94: OoOoOO00 - I11i + Ii1I + OoOoOO00 + II111iiii
   if 61 - 61: O00oOoOoO0o0O + Ii1I / oO0o . OoooooooOO + iii1I1I
   if 29 - 29: OOooOOo
   if 69 - 69: oO0o % OoooooooOO * iii1I1I
   if 58 - 58: oO0o / i11iIiiIii . OoOoOO00 % O0 / iIii1I11I1II1
   if 50 - 50: O0oo0OO0 . I11i / O0 . I11i
  II11iI = O0o0O . getListItem ( O0o0O . getSelectedPosition ( ) ) . getLabel ( )
  if 91 - 91: i11iIiiIii . I1ii11iIi11i + I11i
  IIiII11 = "COLOR"
  if IIiII11 in II11iI :
   oo0O00OOOOO = II11iI . find ( ']' )
   OoOII11IiI1 = II11iI [ oo0O00OOOOO + 1 : ]
   OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
   if 67 - 67: I1ii11iIi11i * O0oo0OO0 * I1IiiI / I11i - O00oOoOoO0o0O + oO0o
   II11iI = OoOII11IiI1 [ : OoOOOO00oOO ]
   if 11 - 11: O0 + i1IIi / o0oOOo0O0Ooo * OoO0O00
   if 64 - 64: i1IIi % O00oOoOoO0o0O . Oo0ooO0oo0oO . iIii1I11I1II1 + OoO0O00 - iIii1I11I1II1
   if 52 - 52: II111iiii - O00oOoOoO0o0O
   if 91 - 91: iIii1I11I1II1 + iii1I1I . I11i % i11iIiiIii - i11iIiiIii + I1IiiI
  if i1I1ii11i1Iii == "yes" :
   if 75 - 75: I1ii11iIi11i / I1IiiI - iIii1I11I1II1 / OoO0O00 * OOooOOo
   if oooi1i1iI1iiiI <> "" :
    pass
   else :
    iI1i1IIi1i1 = 4
    OoOoo00Oo0OoO = '' . join ( random . choice ( string . ascii_uppercase ) for _ in range ( iI1i1IIi1i1 ) )
    iiII1i1 = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=getbuildsother&code=' + OoOoo00Oo0OoO
    if 73 - 73: OoooooooOO % O00oOoOoO0o0O / O0oo0OO0 * I11i + i1IIi % i11iIiiIii
    if 91 - 91: i11iIiiIii
    if o000oo == "true" :
     print '@ares: buildlistotherurl...'
     print '@ares: (3)'
     print iiII1i1
     if 6 - 6: O0 - iIii1I11I1II1 + O0oo0OO0 . o0oOOo0O0Ooo * i11iIiiIii
     if 53 - 53: OOooOOo / I1IiiI / oO0o * OOooOOo / i1IIi - O0oo0OO0
    oooi1i1iI1iiiI = iIii111Ii ( iiII1i1 , 'yes' )
    if 71 - 71: O0 + Oo0Ooo % oO0o - o0oOOo0O0Ooo
    if oooi1i1iI1iiiI == "downloadfailed" :
     return ( )
     if 82 - 82: iIii1I11I1II1
     if 64 - 64: Oo0ooO0oo0oO + I1IiiI % OOooOOo + II111iiii
     if 46 - 46: I1IiiI
    if o000oo == "true" :
     print ' '
     print '@ares: buildlistotherraw...'
     print ' '
     print oooi1i1iI1iiiI
     if 72 - 72: iii1I1I
     if 100 - 100: I1IiiI
     if 55 - 55: i1IIi % O00oOoOoO0o0O
     if 44 - 44: oO0o - iIii1I11I1II1 / Oo0ooO0oo0oO - iIii1I11I1II1 % i1IIi + Oo0ooO0oo0oO
   O00o0O00 = json . loads ( oooi1i1iI1iiiI )
   for oO00O in O00o0O00 :
    if oO00O [ 'name' ] == II11iI :
     if 74 - 74: I11i . OoOoOO00 + OoOoOO00
     if o000oo == "true" :
      print ' '
      print '@ares: build name found...'
      if 87 - 87: O00oOoOoO0o0O + o0oOOo0O0Ooo . i1IIi % O0oo0OO0
      if 44 - 44: Oo0Ooo - OOooOOo . Ii1I * OoooooooOO
      if 93 - 93: OoO0O00 . OoO0O00
      if 52 - 52: OOooOOo . oO0o / Oo0Ooo . OoooooooOO % I1ii11iIi11i
     global ii1I1
     ii1I1 = oO00O [ 'rating' ]
     I1I1iiiiiIi1 = '[COLOR=darkgray]' + oO00O [ 'votes' ] + '[/COLOR]'
     i1Io00OOOo = oO00O [ 'votes' ]
     IIOOO0O00O0OOOO = '[COLOR=darkgray]This week: ' + oO00O [ 'thismonth' ] + ' / Total: ' + oO00O [ 'downloads' ] + '[/COLOR]'
     Ii1 = oO00O [ 'downloads' ]
     if 65 - 65: Oo0ooO0oo0oO % II111iiii . iii1I1I - iIii1I11I1II1 - I1IiiI
     O0Ooo000 . setVisible ( True )
     IIi11iI1Iii . setVisible ( True )
     O0Ooo000 . setLabel ( label = I1I1iiiiiIi1 )
     if 63 - 63: I1IiiI . OoOoOO00 - II111iiii
     if 55 - 55: Oo0ooO0oo0oO - o0oOOo0O0Ooo
     I1IiiIiii1 . setVisible ( True )
     i11i . setVisible ( True )
     I1IiiIiii1 . setLabel ( label = IIOOO0O00O0OOOO )
     if 32 - 32: O0oo0OO0 * Ii1I / O0oo0OO0 . OoOoOO00 + I1ii11iIi11i - Oo0ooO0oo0oO
     IiIi1i . setVisible ( True )
     if 14 - 14: O00oOoOoO0o0O * O0 + O0 - Oo0ooO0oo0oO . i11iIiiIii - O00oOoOoO0o0O
     iI1i1Iiii ( ii1I1 , i1Io00OOOo )
     break
     if 37 - 37: I11i
     if 19 - 19: OoooooooOO % O0oo0OO0
     if 57 - 57: OoOoOO00 + i1IIi . iIii1I11I1II1 . iIii1I11I1II1 / iIii1I11I1II1 % oO0o
     if 7 - 7: i11iIiiIii * I1ii11iIi11i / OoO0O00 * oO0o
     if 35 - 35: O00oOoOoO0o0O . i1IIi + I1ii11iIi11i . O00oOoOoO0o0O + Oo0ooO0oo0oO . oO0o
     if 2 - 2: II111iiii
     if 18 - 18: iIii1I11I1II1 % I1ii11iIi11i % Oo0Ooo
  O0Ooo000 . setVisible ( True )
  if 47 - 47: Oo0ooO0oo0oO - I1IiiI % OOooOOo * Ii1I % I1IiiI
  if 95 - 95: OoO0O00 + OoOoOO00 % Oo0Ooo . Ii1I * I1IiiI + O0oo0OO0
  ii1iI1i1 = os . path . join ( oO0 , II11iI + '.zip' )
  if 22 - 22: Oo0Ooo . OoO0O00
  if os . path . isfile ( ii1iI1i1 ) :
   ooOo000OoO0o . setEnabled ( True )
  else :
   ooOo000OoO0o . setEnabled ( False )
   if 55 - 55: Oo0Ooo % OoooooooOO * II111iiii % OoooooooOO
   if 30 - 30: O0oo0OO0 / o0oOOo0O0Ooo + OoooooooOO + OoOoOO00 + OoO0O00
  I1IiiIiii1 . setVisible ( True )
  if 40 - 40: OoooooooOO / O00oOoOoO0o0O
  if 82 - 82: i11iIiiIii - oO0o - i1IIi
  IiIi1i . setVisible ( True )
  if 78 - 78: oO0o % iii1I1I / i1IIi / Oo0ooO0oo0oO
  if 44 - 44: o0oOOo0O0Ooo + Ii1I + I1IiiI % O0
  if 100 - 100: OoooooooOO
  ooooo0O0 . setVisible ( True )
  i1III1iI . setVisible ( True )
  IiII1i1iI . setVisible ( True )
  ooOo000OoO0o . setVisible ( True )
  if 27 - 27: i11iIiiIii % II111iiii + O0oo0OO0
  if Oo0O0oOoO0o0 == 'mac0' :
   IiII1i1iI . setEnabled ( False )
  else :
   IiII1i1iI . setEnabled ( True )
   if 76 - 76: OOooOOo - O0oo0OO0 + iIii1I11I1II1 + I1IiiI * oO0o
   if 93 - 93: i11iIiiIii * i11iIiiIii - I1IiiI + iIii1I11I1II1 * i11iIiiIii
   if 14 - 14: Oo0ooO0oo0oO . OoooooooOO . I1IiiI - O00oOoOoO0o0O + iIii1I11I1II1
   if 47 - 47: OOooOOo % i1IIi
   if 23 - 23: Ii1I * Ii1I / I11i
   if 11 - 11: OOooOOo
   if 58 - 58: OoO0O00 * OoooooooOO
   if 47 - 47: iii1I1I - Oo0Ooo
   if 19 - 19: O0 . i1IIi + I11i / II111iiii + Oo0ooO0oo0oO
 if o00000 > 0 :
  if 26 - 26: Ii1I * oO0o % I1IiiI - OOooOOo . O0oo0OO0
  if 35 - 35: i1IIi % i11iIiiIii + Ii1I
  Iii11iI1I . setFocus ( oooo00oO0O )
  if 14 - 14: OoO0O00 * OoooooooOO
  if 45 - 45: iIii1I11I1II1 * I1IiiI . OoOoOO00
  I1II1 = O0o0O . getListItem ( O0o0O . getSelectedPosition ( ) ) . getLabel ( )
  if 97 - 97: I11i % II111iiii % Ii1I . II111iiii . iIii1I11I1II1
  IIiII11 = "COLOR"
  if IIiII11 in I1II1 :
   oo0O00OOOOO = I1II1 . find ( ']' )
   OoOII11IiI1 = I1II1 [ oo0O00OOOOO + 1 : ]
   OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
   if 98 - 98: i11iIiiIii + O0 - O0 - iii1I1I
   if 25 - 25: oO0o / O0 + O0oo0OO0 % i11iIiiIii / I1IiiI
   if 62 - 62: iii1I1I . I11i * i1IIi + iii1I1I
  i1oO00O . setLabel ( '[COLOR=darkgray]' + ooO ( "pressonbuild" ) + '[/COLOR]' )
  if 95 - 95: Ii1I / o0oOOo0O0Ooo % Oo0ooO0oo0oO - I1IiiI / OOooOOo * OOooOOo
  if 6 - 6: OoO0O00 % O00oOoOoO0o0O + iIii1I11I1II1
  if 18 - 18: II111iiii . Ii1I + OoOoOO00 + O0 - I11i
  I1II1 = OoOII11IiI1 [ : OoOOOO00oOO ]
  if 30 - 30: II111iiii
  if 26 - 26: I11i - i1IIi - Oo0Ooo * O0 * OOooOOo . OoooooooOO
  if 99 - 99: oO0o . OoO0O00 / OOooOOo
  for i1IIii1i in Ooo0oOooo0 :
   if 12 - 12: iIii1I11I1II1 + Oo0ooO0oo0oO * O0oo0OO0 % OoooooooOO / iIii1I11I1II1
   if I1II1 == i1IIii1i [ 'bfriendlyname' ] :
    o0iii1i = i1IIii1i [ 'bicon' ]
    IIIII = i1IIii1i [ 'bicon' ]
    Ii1IIi1I11i = i1IIii1i [ 'bfriendlyname' ]
    oOOOoo00 = i1IIii1i [ 'bslug' ]
    break
    if 43 - 43: O0 . i1IIi - OoooooooOO - i1IIi - I1ii11iIi11i
  OOii1ii1i11I1I . setImage ( IIIII )
  if 8 - 8: OoOoOO00 / Ii1I
  if 12 - 12: iIii1I11I1II1
 else :
  Iii11iI1I . setFocus ( oooo00oO0O )
  if 52 - 52: oO0o . I1ii11iIi11i + oO0o
  if 73 - 73: II111iiii / i11iIiiIii / Oo0ooO0oo0oO
  if 1 - 1: iii1I1I + OoOoOO00 / O00oOoOoO0o0O - I1IiiI % I1IiiI
def IIIi1iI1 ( ) :
 if 21 - 21: OOooOOo % O0 / I11i
 global oooi1i1iI1iiiI
 global IIIIiii1IIii
 global I1II1
 global Ooo0oOooo0
 global oOOOoo00
 global oOooOOOoOo
 global OOO00O
 global o00O0
 if 15 - 15: O0 - i1IIi . iIii1I11I1II1 - i11iIiiIii / Ii1I
 if 11 - 11: iIii1I11I1II1 + I1IiiI
 if 15 - 15: o0oOOo0O0Ooo
 o0OO = "http://tbbwizard.co.uk"
 if 55 - 55: i11iIiiIii / OoooooooOO - I11i
 iiII1i1 = o0OO + "/pod/build.php?" + "b=" + oOOOoo00
 if 89 - 89: I11i - i1IIi - i1IIi * OOooOOo - O0
 iIiIi1i1ii11 = urllib2 . Request ( iiII1i1 )
 iIiIi1i1ii11 . add_header ( 'User-Agent' , 'Kodi/Ares Wizard' )
 if 94 - 94: Oo0Ooo / I11i . I1ii11iIi11i
 try :
  o0O00o00Ooo = urllib2 . urlopen ( iIiIi1i1ii11 )
  if 31 - 31: i11iIiiIii + iIii1I11I1II1 . II111iiii
 except HTTPError , ii111I1iIiIi111I :
  if 72 - 72: O0oo0OO0 * OoO0O00 + Oo0Ooo / Ii1I % OOooOOo
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . code ) )
  print '@Ares: HTTP Error: ' + str ( ii111I1iIiIi111I . code )
  return ( 'downloadfailed' )
  if 84 - 84: OoOoOO00 / o0oOOo0O0Ooo
 except URLError , ii111I1iIiIi111I :
  if 9 - 9: Ii1I
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . reason ) , "" , "" )
  print '@Ares: URL Error: ' + str ( ii111I1iIiIi111I . reason )
  return ( 'downloadfailed' )
  if 76 - 76: I1IiiI % Oo0Ooo / iIii1I11I1II1 - Oo0Ooo
 except IOError , ii111I1iIiIi111I :
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . errno ) + " - " + str ( ii111I1iIiIi111I . strerror ) , "" , "" )
  print '@Ares: IO Error: ' + str ( ii111I1iIiIi111I . errno ) + ' - ' + str ( ii111I1iIiIi111I . strerror )
  return ( 'downloadfailed' )
  if 34 - 34: OoOoOO00 - i1IIi + OOooOOo + Ii1I . o0oOOo0O0Ooo
 except :
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( 'Ares Wizard' , 'Failed to communicate with BlackBox server' )
  print '@Ares: Download Error: Unspecified'
  return ( 'downloadfailed' )
  if 42 - 42: OoO0O00
 O00o0O00 = o0O00o00Ooo . read ( )
 if 59 - 59: OoO0O00 . O0oo0OO0 % OoO0O00
 if 22 - 22: Oo0Ooo
 i1Ii1ii1 = json . loads ( O00o0O00 )
 if 93 - 93: Oo0Ooo / II111iiii . Oo0Ooo + i1IIi + i1IIi
 if 30 - 30: OoOoOO00 . OOooOOo % OOooOOo / II111iiii + i1IIi
 if 61 - 61: i1IIi % II111iiii * II111iiii . o0oOOo0O0Ooo / I1ii11iIi11i - O0oo0OO0
 if i1Ii1ii1 . get ( 'auth' ) :
  if 93 - 93: Ii1I - i1IIi
  iiII1i1 = i1Ii1ii1 . get ( 'url' )
  id = i1Ii1ii1 . get ( 'id' )
  if 3 - 3: oO0o + OoO0O00 - iii1I1I / Ii1I
  if 58 - 58: Ii1I * I11i
  if 95 - 95: oO0o
  if 49 - 49: I1IiiI
  if 23 - 23: O0oo0OO0
  IIiIiiIIiI = IIi1III11I1Ii ( I1II1 , iiII1i1 , oOooOOOoOo , OOO00O , o00O0 , 'blackbox' , id )
  if 62 - 62: OoooooooOO . iIii1I11I1II1 * II111iiii . O00oOoOoO0o0O
  if IIiIiiIIiI == "kodirunning" :
   if 80 - 80: I11i + o0oOOo0O0Ooo - O0oo0OO0 . OoO0O00 * oO0o + OOooOOo
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    if 96 - 96: i1IIi + i1IIi * I1ii11iIi11i . Oo0Ooo * Oo0Ooo
    O000oOo ( )
    if 82 - 82: iIii1I11I1II1 % oO0o - O0oo0OO0 / O0 - iii1I1I
    II1iI11ii1 . setImage ( I1Ii1iI1 )
    ii1iI11 . setEnabled ( False )
    oooo00oO0O . setEnabled ( False )
    ii1O0oOOo . setEnabled ( False )
    iiIIii1iIiIi . setEnabled ( False )
    iiIiIi1I1 . setEnabled ( False )
    Oo0OOo . setEnabled ( False )
    ii11I1IIII11 . setEnabled ( False )
    iiI1II11I1iI . setEnabled ( False )
    iii111iI . setEnabled ( False )
    if 59 - 59: OoOoOO00 . I11i / OoooooooOO - Ii1I * O00oOoOoO0o0O
    if 11 - 11: oO0o . I1IiiI % O0 * Oo0ooO0oo0oO % O0oo0OO0
    if 26 - 26: OoooooooOO + iii1I1I * Oo0ooO0oo0oO
    if 71 - 71: OOooOOo . I1ii11iIi11i + II111iiii
  if IIiIiiIIiI == 'downloadfalse' :
   if 26 - 26: I1ii11iIi11i % O0 / Ii1I + i11iIiiIii - Ii1I
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( ooO ( "areswizard" ) , ooO ( "downloadfailed2" ) )
   if 48 - 48: I1IiiI - i11iIiiIii * I1ii11iIi11i
  elif IIiIiiIIiI == 'notvalidzip' :
   if 70 - 70: I1ii11iIi11i * OoOoOO00
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( ooO ( "areswizard" ) , ooO ( "notvalidzip" ) )
   if 63 - 63: Oo0ooO0oo0oO . O00oOoOoO0o0O - OoOoOO00 % O00oOoOoO0o0O - O0oo0OO0 / O0oo0OO0
   if 42 - 42: i1IIi . OoOoOO00 * OoOoOO00 * OoOoOO00
  elif IIiIiiIIiI == 'cancelled' :
   if 14 - 14: II111iiii / O0oo0OO0 . I1IiiI
   pass
   if 66 - 66: O0oo0OO0 % oO0o . iii1I1I * i1IIi
   if 81 - 81: OoooooooOO * I1IiiI / O0oo0OO0
  elif IIiIiiIIiI == 'unzipfail' :
   if 10 - 10: I1IiiI - II111iiii / O00oOoOoO0o0O * II111iiii
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( ooO ( "areswizard" ) , ooO ( "unzipfail" ) )
   if 67 - 67: II111iiii . Ii1I % oO0o . Oo0Ooo + O00oOoOoO0o0O
  else :
   if 10 - 10: OOooOOo - OoO0O00 * oO0o / iIii1I11I1II1 - OoOoOO00
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( ooO ( "areswizard" ) , ooO ( "kodinotclosed" ) )
   if 20 - 20: O00oOoOoO0o0O % I1IiiI + iIii1I11I1II1 % iii1I1I
   if 100 - 100: o0oOOo0O0Ooo - Oo0Ooo % O0oo0OO0 . i11iIiiIii % OoooooooOO
   if 39 - 39: I1ii11iIi11i / i11iIiiIii * i1IIi * Oo0Ooo
   if 39 - 39: OoO0O00 * OoooooooOO / i1IIi + Oo0Ooo
   if 57 - 57: O0
 else :
  if 83 - 83: OOooOOo / Ii1I * I1IiiI % oO0o / iIii1I11I1II1
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Message from The Black Box" , i1Ii1ii1 . get ( 'etit' ) , i1Ii1ii1 . get ( 'emsg' ) )
  if 1 - 1: I11i / OoooooooOO / iii1I1I
  if 68 - 68: i1IIi / Oo0Ooo / I11i * Oo0Ooo
  if 91 - 91: OoO0O00 . iii1I1I
def oOOO ( ) :
 if 14 - 14: II111iiii . I1IiiI
 I1 = i1111iI1 . getListItem ( i1111iI1 . getSelectedPosition ( ) ) . getLabel ( )
 if 84 - 84: Oo0ooO0oo0oO + oO0o * iii1I1I * Oo0ooO0oo0oO
 if 61 - 61: iii1I1I * i1IIi * O0oo0OO0 + OoO0O00 * I1IiiI / O0
 IIiII11 = "COLOR"
 if IIiII11 in I1 :
  oo0O00OOOOO = I1 . find ( ']' )
  OoOII11IiI1 = I1 [ oo0O00OOOOO + 1 : ]
  OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
  I1 = OoOII11IiI1 [ : OoOOOO00oOO ]
  if 87 - 87: OoOoOO00 . o0oOOo0O0Ooo % i11iIiiIii
  if 77 - 77: iIii1I11I1II1 + OoOoOO00 - Oo0ooO0oo0oO * oO0o % OoO0O00
  if 38 - 38: I1ii11iIi11i + II111iiii - I11i . O00oOoOoO0o0O + O00oOoOoO0o0O - O00oOoOoO0o0O
  if 44 - 44: iii1I1I
 if I1 == "Primewire\\1Channel: Blocked URL fix" :
  if 63 - 63: Oo0ooO0oo0oO . o0oOOo0O0Ooo / Oo0ooO0oo0oO % OoO0O00 * OoOoOO00 + Oo0Ooo
  Iii11iI1I . setFocus ( I11i1I1ii1i1 )
  if 44 - 44: O0 - I11i
  if 43 - 43: O0
 if I1 == "IceFilms: Blocked URL fix" :
  if 50 - 50: I11i - OoooooooOO
  Iii11iI1I . setFocus ( I11i1I1ii1i1 )
  if 29 - 29: oO0o * oO0o
  if 44 - 44: Oo0ooO0oo0oO . I1IiiI * oO0o * Ii1I
 if I1 == "Advanced Settings Wizard" :
  if 41 - 41: i1IIi % i11iIiiIii + I11i % OoooooooOO / I1ii11iIi11i
  Iii11iI1I . setFocus ( I1ii1Ii1OoO )
  if 8 - 8: OoooooooOO - OoO0O00 / i11iIiiIii / O0 . O00oOoOoO0o0O
  if 86 - 86: Oo0ooO0oo0oO * OoooooooOO + iii1I1I + o0oOOo0O0Ooo
  if 79 - 79: i1IIi % I1ii11iIi11i - OoO0O00 % I1ii11iIi11i
  if 6 - 6: Oo0Ooo / iii1I1I . i11iIiiIii
  if 8 - 8: I1ii11iIi11i + O0 - oO0o % II111iiii . O0oo0OO0
  if 86 - 86: O00oOoOoO0o0O
  if 71 - 71: Ii1I - i1IIi . I1IiiI
def IiiiIiII11 ( ) :
 if 24 - 24: OoooooooOO % OoO0O00 / OoOoOO00 + iii1I1I
 ooOo = speedtest . speedtest ( )
 if 36 - 36: OOooOOo + Oo0Ooo * O0oo0OO0
 if 45 - 45: oO0o . O0oo0OO0
 if ooOo == "uploadfail" :
  if 92 - 92: II111iiii % Ii1I + II111iiii + II111iiii
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( ooO ( "areswizard" ) , ooO ( "speedtestuploadfailed" ) )
  return ( )
  if 24 - 24: I1IiiI - I1ii11iIi11i
  if 85 - 85: II111iiii + i11iIiiIii % Ii1I
  if 25 - 25: OoOoOO00 + O00oOoOoO0o0O . i11iIiiIii
  if 87 - 87: I1IiiI + OoooooooOO + O0
  if 32 - 32: Ii1I / I1ii11iIi11i . Ii1I
  if 65 - 65: O00oOoOoO0o0O
  if 74 - 74: Oo0Ooo + i1IIi - II111iiii / Oo0ooO0oo0oO / iii1I1I
  if 66 - 66: Oo0ooO0oo0oO / O00oOoOoO0o0O * iIii1I11I1II1
  if 42 - 42: O0oo0OO0 - i11iIiiIii % II111iiii * Oo0ooO0oo0oO . O0 % I11i
  if 82 - 82: Oo0Ooo % O0 + I1ii11iIi11i % I1ii11iIi11i
  if 74 - 74: O0 * O00oOoOoO0o0O . I11i - O0oo0OO0 + O0 + I11i
  if 48 - 48: oO0o . o0oOOo0O0Ooo - OOooOOo
  if 29 - 29: Oo0Ooo - Ii1I - Oo0Ooo
  if 89 - 89: Oo0Ooo . OoO0O00 . I1ii11iIi11i * oO0o . O0
  if 72 - 72: i11iIiiIii % I11i / O0oo0OO0 + I1IiiI * iii1I1I
  if 69 - 69: O0oo0OO0 + O0 . O00oOoOoO0o0O . o0oOOo0O0Ooo
  if 38 - 38: O00oOoOoO0o0O / i1IIi
  if 60 - 60: OoOoOO00
  if 75 - 75: II111iiii / iIii1I11I1II1 / OoooooooOO
  if 61 - 61: O00oOoOoO0o0O . O00oOoOoO0o0O
  if 17 - 17: OoOoOO00 % Oo0Ooo / O0oo0OO0 . Ii1I % OoO0O00
  if 32 - 32: I1IiiI + Oo0ooO0oo0oO / O0 * i11iIiiIii % Oo0Ooo + II111iiii
  if 95 - 95: iii1I1I / Oo0ooO0oo0oO + O0oo0OO0
 ooOoOO = random . randrange ( 10000 )
 Iii11i111iI = os . path . join ( OOO00O0O , 'speedtest-' + str ( ooOoOO ) )
 os . mkdir ( Iii11i111iI )
 if 76 - 76: O0oo0OO0 - O0
 if 23 - 23: O0 * Ii1I * Oo0ooO0oo0oO % Oo0ooO0oo0oO
 if 7 - 7: II111iiii + I11i
 ooOOO00000oo = os . path . join ( OOO00O0O , 'speedtest3.png' )
 iii1 = os . path . join ( OOO00O0O , 'speedtest2.png' )
 iII11 = os . path . join ( OOO00O0O , 'speedtest1.png' )
 if 33 - 33: O0
 if 31 - 31: OoO0O00
 II1IIi1iI1I1 = os . path . join ( Iii11i111iI , 'speedtest3.png' )
 I11iI = os . path . join ( Iii11i111iI , 'speedtest2.png' )
 IIIiiiI1iIi1 = os . path . join ( Iii11i111iI , 'speedtest1.png' )
 if 39 - 39: O0 % Ii1I . I11i * o0oOOo0O0Ooo
 if os . path . isfile ( ooOOO00000oo ) :
  os . remove ( ooOOO00000oo )
  if 14 - 14: I11i . iIii1I11I1II1 + O0oo0OO0 % OoooooooOO
 if os . path . isfile ( iii1 ) :
  os . rename ( iii1 , ooOOO00000oo )
  shutil . copyfile ( ooOOO00000oo , II1IIi1iI1I1 )
  if 9 - 9: oO0o + Ii1I / I1ii11iIi11i * iIii1I11I1II1 + o0oOOo0O0Ooo
 if os . path . isfile ( iII11 ) :
  os . rename ( iII11 , iii1 )
  shutil . copyfile ( iii1 , I11iI )
  if 64 - 64: I11i % i11iIiiIii % I1ii11iIi11i
  if 14 - 14: O0oo0OO0 - OoOoOO00 - I1ii11iIi11i % I11i + OoooooooOO
  if 4 - 4: O0oo0OO0 - I1IiiI / iIii1I11I1II1 + I1ii11iIi11i % iIii1I11I1II1 * I1IiiI
 iIiIi1i1ii11 = urllib2 . Request ( ooOo [ 0 ] )
 iIiIi1i1ii11 . add_header ( 'User-Agent' , I1ii1Ii1 )
 if 30 - 30: i11iIiiIii % OOooOOo
 try :
  if 52 - 52: I11i - oO0o . i11iIiiIii - II111iiii + Ii1I . iii1I1I
  o0O00o00Ooo = urllib2 . urlopen ( iIiIi1i1ii11 )
  if 27 - 27: I1IiiI + OoOoOO00 + iii1I1I
  if 70 - 70: I11i + O00oOoOoO0o0O . Oo0ooO0oo0oO - I1ii11iIi11i
 except HTTPError , ii111I1iIiIi111I :
  if 34 - 34: i1IIi % Oo0Ooo . oO0o
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . code ) )
  print '@Ares: HTTP Error: ' + str ( ii111I1iIiIi111I . code )
  return ( 'downloadfailed' )
  if 36 - 36: I1ii11iIi11i / O0oo0OO0 - O00oOoOoO0o0O + OOooOOo + O0oo0OO0
 except URLError , ii111I1iIiIi111I :
  if 62 - 62: Oo0Ooo . OoO0O00 * O0oo0OO0 . i11iIiiIii * O0
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . reason ) , "" , "" )
  print '@Ares: URL Error: ' + str ( ii111I1iIiIi111I . reason )
  return ( 'downloadfailed' )
  if 10 - 10: Oo0Ooo / OoOoOO00 * OOooOOo - O00oOoOoO0o0O + Ii1I
 except IOError , ii111I1iIiIi111I :
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . errno ) + " - " + str ( ii111I1iIiIi111I . strerror ) , "" , "" )
  print '@Ares: IO Error: ' + str ( ii111I1iIiIi111I . errno ) + ' - ' + str ( ii111I1iIiIi111I . strerror )
  return ( 'downloadfailed' )
  if 62 - 62: I1IiiI . Ii1I
  if 74 - 74: Ii1I - I11i % Oo0ooO0oo0oO - I1IiiI - Ii1I - II111iiii
 except :
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( 'Ares Wizard' , 'Failed to communicate with Speedtest.net server' )
  print '@Ares: Download Error: Unspecified'
  return ( 'downloadfailed' )
  if 81 - 81: i1IIi * I1ii11iIi11i + O00oOoOoO0o0O - OoO0O00 * i1IIi
  if 6 - 6: iIii1I11I1II1 % OoOoOO00 % II111iiii % o0oOOo0O0Ooo
  if 52 - 52: Ii1I - I1IiiI * iIii1I11I1II1 % Oo0Ooo * OOooOOo
  if 67 - 67: OoooooooOO * I11i * Ii1I * iIii1I11I1II1
  if 22 - 22: OoO0O00 / o0oOOo0O0Ooo
 I1I1I = o0O00o00Ooo . read ( )
 file = open ( iII11 , "wb" )
 file . write ( I1I1I )
 file . close ( )
 if 51 - 51: I1IiiI + OoOoOO00 - II111iiii / I1IiiI
 shutil . copyfile ( iII11 , IIIiiiI1iIi1 )
 if 58 - 58: Oo0Ooo . O0oo0OO0 / I1IiiI
 if 35 - 35: oO0o / I11i * o0oOOo0O0Ooo + II111iiii + Oo0ooO0oo0oO
 if os . path . isfile ( ooOOO00000oo ) :
  o0o00o0Oo . setImage ( II1IIi1iI1I1 )
 else :
  o0o00o0Oo . setImage ( os . path . join ( IIiIi1iI , 'nodata.png' ) )
  if 7 - 7: Oo0Ooo * O0oo0OO0 * I1IiiI + iIii1I11I1II1
  if 75 - 75: oO0o
 if os . path . isfile ( iii1 ) :
  iIi11i . setImage ( I11iI )
 else :
  iIi11i . setImage ( os . path . join ( IIiIi1iI , 'nodata.png' ) )
  if 50 - 50: oO0o / Oo0Ooo
  if 32 - 32: OoO0O00 % oO0o * I1ii11iIi11i + I11i / O0oo0OO0
 if os . path . isfile ( iII11 ) :
  ooo0O0o0OoOO . setImage ( IIIiiiI1iIi1 )
 else :
  ooo0O0o0OoOO . setImage ( os . path . join ( IIiIi1iI , 'nodata.png' ) )
  if 5 - 5: o0oOOo0O0Ooo + iii1I1I / OoooooooOO + Ii1I . OoOoOO00 / oO0o
 time . sleep ( 5 )
 shutil . rmtree ( Iii11i111iI )
 if 18 - 18: II111iiii . o0oOOo0O0Ooo
 if 75 - 75: OoooooooOO - Oo0Ooo
 if 56 - 56: II111iiii - i11iIiiIii - oO0o . o0oOOo0O0Ooo
 if 4 - 4: i1IIi
def O0o0OO ( ) :
 if 75 - 75: I1IiiI
 I1 = O00ooooo00 . getListItem ( O00ooooo00 . getSelectedPosition ( ) ) . getLabel ( )
 if 27 - 27: i1IIi . Oo0Ooo . oO0o
 if 44 - 44: iii1I1I * I11i + i11iIiiIii + i1IIi / O00oOoOoO0o0O * II111iiii
 IIiII11 = "COLOR"
 if IIiII11 in I1 :
  oo0O00OOOOO = I1 . find ( ']' )
  OoOII11IiI1 = I1 [ oo0O00OOOOO + 1 : ]
  OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
  I1 = OoOII11IiI1 [ : OoOOOO00oOO ]
  if 58 - 58: OOooOOo
  if 72 - 72: OoO0O00 + OOooOOo - Oo0Ooo % Oo0ooO0oo0oO . O00oOoOoO0o0O
  if 95 - 95: iii1I1I % OOooOOo - O00oOoOoO0o0O - OoOoOO00 % o0oOOo0O0Ooo * O0
  if 16 - 16: O0oo0OO0 / Oo0Ooo
 if I1 == "System Information" :
  if 48 - 48: Oo0Ooo / oO0o + iii1I1I % iii1I1I
  Ii111IIII1 ( )
  Iii11iI1I . setFocus ( ii11I1IIII11 )
  if 9 - 9: I1ii11iIi11i - o0oOOo0O0Ooo . Oo0Ooo + I1ii11iIi11i . OOooOOo
  if 30 - 30: OoooooooOO - iIii1I11I1II1 / oO0o * Ii1I / Ii1I
  if 52 - 52: OoOoOO00 - OoO0O00 + I1IiiI + O00oOoOoO0o0O
 if I1 == "Upload Kodi Log" :
  iII1I ( )
  if 31 - 31: OoOoOO00 + I1IiiI + I1ii11iIi11i + I11i * II111iiii % oO0o
  if 90 - 90: OOooOOo * iIii1I11I1II1 / i1IIi
  if 60 - 60: OOooOOo * O0oo0OO0 . oO0o
 if I1 == "Internet Speed Test" :
  if 47 - 47: oO0o % OOooOOo / OOooOOo % OoOoOO00 % O0oo0OO0 / OoOoOO00
  iII11 = os . path . join ( OOO00O0O , 'speedtest1.png' )
  if 51 - 51: I1IiiI . I11i - OoOoOO00
  if os . path . isfile ( iII11 ) :
   ooo0O0o0OoOO . setImage ( iII11 )
  else :
   ooo0O0o0OoOO . setImage ( os . path . join ( IIiIi1iI , 'nodata.png' ) )
   if 10 - 10: Oo0Ooo * OOooOOo / O00oOoOoO0o0O . o0oOOo0O0Ooo
  ooo0O0o0OoOO . setVisible ( True )
  if 97 - 97: Ii1I . Ii1I % iii1I1I
  if 49 - 49: Oo0Ooo % OOooOOo - OoooooooOO + O00oOoOoO0o0O
  if 54 - 54: iIii1I11I1II1 - OoooooooOO / I11i / oO0o % I1IiiI + OoOoOO00
  iii1 = os . path . join ( OOO00O0O , 'speedtest2.png' )
  if 26 - 26: OoO0O00 * II111iiii % OOooOOo * iii1I1I + iii1I1I
  if os . path . isfile ( iii1 ) :
   iIi11i . setImage ( iii1 )
  else :
   iIi11i . setImage ( os . path . join ( IIiIi1iI , 'nodata.png' ) )
   if 25 - 25: I11i - I1ii11iIi11i
  iIi11i . setVisible ( True )
  if 100 - 100: O0oo0OO0 / Ii1I + OoOoOO00 . OoooooooOO
  if 83 - 83: O0
  if 35 - 35: i11iIiiIii - I11i . OoOoOO00 * II111iiii % i11iIiiIii
  ooOOO00000oo = os . path . join ( OOO00O0O , 'speedtest3.png' )
  if 55 - 55: o0oOOo0O0Ooo / O0 / OoooooooOO * Oo0Ooo % iii1I1I
  if os . path . isfile ( ooOOO00000oo ) :
   o0o00o0Oo . setImage ( ooOOO00000oo )
  else :
   o0o00o0Oo . setImage ( os . path . join ( IIiIi1iI , 'nodata.png' ) )
   if 24 - 24: I1ii11iIi11i % OOooOOo + OoooooooOO + OoO0O00
  o0o00o0Oo . setVisible ( True )
  if 100 - 100: Oo0Ooo % OoO0O00 - OoOoOO00
  if 46 - 46: o0oOOo0O0Ooo
  if 28 - 28: i1IIi
  if 81 - 81: oO0o % OoooooooOO . O0oo0OO0 - OoOoOO00 / I1IiiI
  if 62 - 62: O0oo0OO0 * I11i / I11i
  if 42 - 42: Oo0ooO0oo0oO * Oo0ooO0oo0oO / Ii1I / OOooOOo * OOooOOo
  if 92 - 92: Oo0Ooo / iii1I1I - OoooooooOO - o0oOOo0O0Ooo % Oo0ooO0oo0oO
  OOOOOo . setVisible ( True )
  if 35 - 35: i1IIi % iii1I1I % I11i * iIii1I11I1II1 % Ii1I - Oo0Ooo
  oOOoo . setVisible ( True )
  if 94 - 94: iii1I1I
  Iii11iI1I . setFocus ( OOOOOo )
  if 68 - 68: OoooooooOO % OOooOOo / OoooooooOO / O0oo0OO0 + Ii1I - o0oOOo0O0Ooo
  OOOOOo . controlLeft ( O00ooooo00 )
  OOOOOo . controlUp ( ii11I1IIII11 )
  O00ooooo00 . controlRight ( OOOOOo )
  if 81 - 81: I1IiiI
  if 62 - 62: Ii1I * OoOoOO00
  if 27 - 27: Oo0Ooo + Oo0Ooo / II111iiii % O0oo0OO0
 if I1 == "Erase all Data/Fresh Start" :
  if 11 - 11: Ii1I
  OOo0o00oo0Oo = xbmcgui . Dialog ( ) . yesno ( ooO ( "areswizard" ) , ooO ( "buildinstallfreshstart1" ) , '' , ooO ( "buildinstallfreshstart2" ) , yeslabel = 'Yes' , nolabel = 'No' )
  if 60 - 60: OoO0O00 * O0 / Ii1I
  if OOo0o00oo0Oo == 1 :
   if 28 - 28: Oo0Ooo . i11iIiiIii . O0
   iiII1i1 = "http://localhost:8080/jsonrpc"
   oooo = { 'content-type' : 'application/json' }
   if 19 - 19: Oo0Ooo / OoooooooOO
   Oo0oO0 = { "jsonrpc" : "2.0" , "method" : "Settings.SetSettingValue" , "id" : 1 , "params" : { "setting" : "lookandfeel.skin" , "value" : "skin.confluence" } }
   if 67 - 67: o0oOOo0O0Ooo . Oo0Ooo % I11i
   if 38 - 38: OOooOOo - OoO0O00 . Oo0ooO0oo0oO
   try :
    iIiIi1i1ii11 = urllib2 . Request ( iiII1i1 , Oo0oO0 , oooo )
    if 50 - 50: o0oOOo0O0Ooo
    if 85 - 85: II111iiii . iii1I1I - i1IIi
    o0O00o00Ooo = urllib2 . urlopen ( iIiIi1i1ii11 ) . read ( )
    if 23 - 23: iii1I1I . Ii1I - OoO0O00 / I1ii11iIi11i / O0
   except :
    if 4 - 4: i1IIi % Oo0Ooo % Ii1I * Oo0ooO0oo0oO - I11i
    pass
    if 76 - 76: iIii1I11I1II1 / Oo0ooO0oo0oO % I1ii11iIi11i % OOooOOo
    if 13 - 13: O00oOoOoO0o0O
   oOOOoo ( )
   if 12 - 12: I1ii11iIi11i / oO0o
   if o000oo == "true" :
    print '----------------------------------'
    print '-->   kodi still running       <--'
    print '-----------------------------------'
    if 40 - 40: O00oOoOoO0o0O
   oO00o ( )
   if 96 - 96: OoooooooOO . I11i + Ii1I
   O000oOo ( )
   if 56 - 56: II111iiii + O00oOoOoO0o0O . i1IIi * Ii1I
   II1iI11ii1 . setImage ( I1Ii1iI1 )
   ii1iI11 . setEnabled ( False )
   oooo00oO0O . setEnabled ( False )
   ii1O0oOOo . setEnabled ( False )
   iiIIii1iIiIi . setEnabled ( False )
   iiIiIi1I1 . setEnabled ( False )
   Oo0OOo . setEnabled ( False )
   ii11I1IIII11 . setEnabled ( False )
   iiI1II11I1iI . setEnabled ( False )
   iii111iI . setEnabled ( False )
   if 37 - 37: II111iiii - OOooOOo
   if 63 - 63: OoO0O00
 if I1 == "Force Close Kodi" :
  if 45 - 45: O0 / O0oo0OO0 / i1IIi + I1IiiI % OoooooooOO . O0
  I1i ( )
  if 9 - 9: oO0o - I11i
  if 57 - 57: i1IIi
  if 81 - 81: OoOoOO00 + O00oOoOoO0o0O + OoooooooOO % o0oOOo0O0Ooo + O00oOoOoO0o0O * I1IiiI
  if 13 - 13: i11iIiiIii % Oo0Ooo . i1IIi - I1ii11iIi11i - i1IIi / Oo0Ooo
def I1I1IiI ( control ) :
 if 23 - 23: iii1I1I * O0oo0OO0
 control . setAnimations ( [ ( 'WindowOpen' , 'effect=fade start=0 end=100 time=500' , ) ,
 ( 'WindowClose' , 'effect=fade start=100 end=0 time=500' , ) ] )
 if 80 - 80: iii1I1I - oO0o * OoOoOO00
 if 24 - 24: I1ii11iIi11i / OoO0O00
def O0O00 ( ) :
 if 35 - 35: II111iiii / i11iIiiIii - O00oOoOoO0o0O / iii1I1I + iii1I1I
 global oooO
 global IIIIiii1IIii
 global i1I1i111Ii
 global I1II1
 if 55 - 55: O00oOoOoO0o0O + OoooooooOO * I1ii11iIi11i . O00oOoOoO0o0O * I1ii11iIi11i + O00oOoOoO0o0O
 if 81 - 81: iIii1I11I1II1 . Oo0ooO0oo0oO + OoOoOO00
 if IIIIiii1IIii == "buildother" :
  if 31 - 31: I11i / OoOoOO00 + o0oOOo0O0Ooo
  I1II1 = O0o0O . getListItem ( O0o0O . getSelectedPosition ( ) ) . getLabel ( )
  if 80 - 80: Oo0Ooo
  if 58 - 58: O0oo0OO0 + OOooOOo
  IIiII11 = "COLOR"
  if IIiII11 in I1II1 :
   oo0O00OOOOO = I1II1 . find ( ']' )
   OoOII11IiI1 = I1II1 [ oo0O00OOOOO + 1 : ]
   OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
   if 76 - 76: II111iiii - o0oOOo0O0Ooo % OoO0O00 + iii1I1I
   if 38 - 38: O0oo0OO0 - I11i * i1IIi + iIii1I11I1II1
   I1II1 = OoOII11IiI1 [ : OoOOOO00oOO ]
   if 41 - 41: Ii1I . OoO0O00 + I1ii11iIi11i + OoOoOO00
   if 76 - 76: iii1I1I - iIii1I11I1II1
  Iiiii = re . compile ( 'name="(.+?)".+?rl="(.+?)".+?mg="(.+?)".+?anart="(.+?)".+?escription="(.+?)"' ) . findall ( oooO )
  if 23 - 23: I11i / OoO0O00 % OOooOOo
  for I1 , iiII1i1 , OoO , II11IiIi11 , ooOO in Iiiii :
   if 9 - 9: Oo0ooO0oo0oO % I1ii11iIi11i . OoooooooOO + OoO0O00 % OOooOOo * OoooooooOO
   if I1II1 == I1 :
    if 21 - 21: Ii1I % O0
    iiII1i1 = iiII1i1
    break
    if 15 - 15: II111iiii * Ii1I + O00oOoOoO0o0O % iii1I1I
  IIiIiiIIiI = IIi1III11I1Ii ( I1II1 , iiII1i1 , oOooOOOoOo , OOO00O , o00O0 , 'normal' , '' )
  if 96 - 96: II111iiii * O0oo0OO0 / Oo0Ooo
  if IIiIiiIIiI == "kodirunning" :
   if 35 - 35: I1IiiI
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    if 54 - 54: I1ii11iIi11i % o0oOOo0O0Ooo . i1IIi
    O000oOo ( )
    if 72 - 72: Ii1I
    II1iI11ii1 . setImage ( I1Ii1iI1 )
    ii1iI11 . setEnabled ( False )
    oooo00oO0O . setEnabled ( False )
    ii1O0oOOo . setEnabled ( False )
    iiIIii1iIiIi . setEnabled ( False )
    iiIiIi1I1 . setEnabled ( False )
    Oo0OOo . setEnabled ( False )
    ii11I1IIII11 . setEnabled ( False )
    iiI1II11I1iI . setEnabled ( False )
    iii111iI . setEnabled ( False )
    if 87 - 87: iii1I1I - I1IiiI
    if 54 - 54: iIii1I11I1II1 + oO0o * o0oOOo0O0Ooo % OoooooooOO . Oo0Ooo
    if 32 - 32: iii1I1I
    if 33 - 33: Oo0ooO0oo0oO + Oo0Ooo * OoOoOO00 % Oo0ooO0oo0oO * oO0o - OoO0O00
  if IIiIiiIIiI == 'downloadfalse' :
   if 40 - 40: I11i . OoooooooOO * O0 / O0oo0OO0 + O0
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( ooO ( "areswizard" ) , ooO ( "downloadfailed2" ) )
   if 97 - 97: Oo0ooO0oo0oO - Oo0ooO0oo0oO * OOooOOo % OoOoOO00 - OoOoOO00 - O0oo0OO0
  elif IIiIiiIIiI == 'notvalidzip' :
   if 52 - 52: O0 % iii1I1I
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( ooO ( "areswizard" ) , ooO ( "notvalidzip" ) )
   if 81 - 81: OoooooooOO % OoOoOO00 % Oo0Ooo - I1IiiI
  elif IIiIiiIIiI == 'cancelled' :
   if 43 - 43: o0oOOo0O0Ooo % o0oOOo0O0Ooo
   pass
   if 48 - 48: O0
  elif IIiIiiIIiI == 'unzipfail' :
   if 5 - 5: OOooOOo / i11iIiiIii . I11i % OOooOOo
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( ooO ( "areswizard" ) , ooO ( "unzipfail" ) )
   if 1 - 1: II111iiii + O0 * OoOoOO00 / O00oOoOoO0o0O . O0
  else :
   if 87 - 87: O00oOoOoO0o0O + I1IiiI
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( ooO ( "areswizard" ) , ooO ( "kodinotclosed" ) )
   if 74 - 74: OoO0O00 + OoO0O00 % iii1I1I / I11i / O0
 else :
  if 54 - 54: o0oOOo0O0Ooo / OoooooooOO * Oo0ooO0oo0oO . OoOoOO00 - O0oo0OO0
  I1II1 = i1I11ii . getListItem ( i1I11ii . getSelectedPosition ( ) ) . getLabel ( )
  if 69 - 69: oO0o - OoO0O00
  IIiII11 = "COLOR"
  if IIiII11 in I1II1 :
   oo0O00OOOOO = I1II1 . find ( ']' )
   OoOII11IiI1 = I1II1 [ oo0O00OOOOO + 1 : ]
   OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
   if 80 - 80: Oo0ooO0oo0oO + iIii1I11I1II1 . II111iiii + I1IiiI - oO0o % OoOoOO00
   if 10 - 10: iIii1I11I1II1
   I1II1 = OoOII11IiI1 [ : OoOOOO00oOO ]
   if 44 - 44: OoOoOO00 * oO0o . I1ii11iIi11i + i11iIiiIii
  O00o0O00 = json . loads ( i1I1i111Ii )
  for oO00O in O00o0O00 :
   if oO00O [ 'name' ] == I1II1 :
    iiII1i1 = oO00O [ 'url' ]
    OoO = 'http://' + oO00O [ 'icon' ]
    iiI1IIIi = oO00O [ 'descr' ]
    II11IiIi11 = 'http://' + oO00O [ 'icon' ]
    I1Ii111I111 = oO00O [ 'author' ]
    ii1I1 = oO00O [ 'rating' ]
    I1I1iiiiiIi1 = oO00O [ 'votes' ]
    i1Io00OOOo = oO00O [ 'votes' ]
    global IIOOO0O00O0OOOO
    IIOOO0O00O0OOOO = int ( oO00O [ 'downloads' ] )
    if 85 - 85: I11i
    if 36 - 36: Oo0ooO0oo0oO % OoO0O00
    if 1 - 1: OoooooooOO - OoOoOO00
    if 35 - 35: O0oo0OO0
  IIiIiiIIiI = IIi1III11I1Ii ( I1II1 , iiII1i1 , oOooOOOoOo , OOO00O , o00O0 , 'normal' , '' )
  if 35 - 35: Oo0Ooo - iIii1I11I1II1 / i1IIi + OoO0O00 - OoooooooOO / i11iIiiIii
  if IIiIiiIIiI == "kodirunning" :
   if 79 - 79: I1IiiI * Oo0ooO0oo0oO * Oo0ooO0oo0oO
   O000oOo ( )
   if 92 - 92: iii1I1I % I1ii11iIi11i
   II1iI11ii1 . setImage ( I1Ii1iI1 )
   ii1iI11 . setEnabled ( False )
   oooo00oO0O . setEnabled ( False )
   ii1O0oOOo . setEnabled ( False )
   iiIIii1iIiIi . setEnabled ( False )
   iiIiIi1I1 . setEnabled ( False )
   Oo0OOo . setEnabled ( False )
   ii11I1IIII11 . setEnabled ( False )
   iiI1II11I1iI . setEnabled ( False )
   iii111iI . setEnabled ( False )
   if 16 - 16: oO0o
   if 52 - 52: OoooooooOO % Oo0ooO0oo0oO - O0oo0OO0 * I11i
  if IIiIiiIIiI == 'downloadfalse' :
   if 24 - 24: Ii1I + O00oOoOoO0o0O + OoooooooOO / oO0o / I1IiiI + O00oOoOoO0o0O
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( ooO ( "areswizard" ) , ooO ( "downloadfailed2" ) )
   if 52 - 52: Oo0ooO0oo0oO
  elif IIiIiiIIiI == 'notvalidzip' :
   if 38 - 38: OoO0O00 + I1IiiI % O00oOoOoO0o0O
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( ooO ( "areswizard" ) , ooO ( "notvalidzip" ) )
   if 87 - 87: oO0o * Ii1I - O0oo0OO0 / oO0o
   if 65 - 65: OoOoOO00
  elif IIiIiiIIiI == 'cancelled' :
   if 87 - 87: I11i - i11iIiiIii - OOooOOo . OoOoOO00 + O00oOoOoO0o0O . OoO0O00
   pass
   if 70 - 70: iIii1I11I1II1 % OoooooooOO / OoO0O00 . O0 - I11i % II111iiii
   if 84 - 84: OOooOOo * i1IIi . iIii1I11I1II1 * iii1I1I + O0oo0OO0 + II111iiii
  elif IIiIiiIIiI == 'unzipfail' :
   if 97 - 97: Ii1I - O00oOoOoO0o0O
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( ooO ( "areswizard" ) , ooO ( "unzipfail" ) )
   if 64 - 64: oO0o . Oo0ooO0oo0oO / Oo0ooO0oo0oO - II111iiii
  else :
   pass
   if 81 - 81: I1ii11iIi11i
 return ( IIiIiiIIiI )
 if 64 - 64: oO0o * OoO0O00 / OOooOOo + Ii1I % Oo0Ooo . O00oOoOoO0o0O
 if 2 - 2: O0oo0OO0 + I11i
 if 47 - 47: i11iIiiIii + iIii1I11I1II1 % I1ii11iIi11i - oO0o % OoO0O00
def oOoOO00oOo0o ( ) :
 if 25 - 25: iIii1I11I1II1 + O0 % OoO0O00
 if 96 - 96: I1ii11iIi11i / I1IiiI - I1ii11iIi11i / II111iiii - O00oOoOoO0o0O
 if 74 - 74: Ii1I * OoooooooOO % OOooOOo + OoooooooOO + iii1I1I
 if 83 - 83: i1IIi
 O00o0O00 = json . loads ( oO00ooooO0o )
 for oO00O in O00o0O00 :
  if oO00O [ 'name' ] == I1 :
   global iiII1i1
   iiII1i1 = oO00O [ 'url' ]
   global OoO
   OoO = 'http://' + oO00O [ 'icon' ]
   global iiI1IIIi
   iiI1IIIi = oO00O [ 'descr' ]
   global II11IiIi11
   II11IiIi11 = 'http://' + oO00O [ 'icon' ]
   global o0o0O00oOo
   o0o0O00oOo = oO00O [ 'version' ]
   global Oo0oo0O0o00O
   Oo0oo0O0o00O = oO00O [ 'name' ]
   global oo00OO0000oO
   oo00OO0000oO = oO00O [ 'addonpath' ]
   global I1iiii1I
   I1iiii1I = oO00O [ 'type' ]
   global IIOOO0O00O0OOOO
   IIOOO0O00O0OOOO = int ( oO00O [ 'downloads' ] )
   global weekdownloads
   weekdownloads = int ( oO00O [ 'thismonth' ] )
   global repopath
   repopath = oO00O [ 'devrepo' ]
   if 2 - 2: i1IIi / OOooOOo * O0
   if 99 - 99: OoooooooOO . OoOoOO00 / II111iiii
   if 64 - 64: iii1I1I / i1IIi . I1IiiI + O0
   if 5 - 5: O0 . i11iIiiIii
   if 71 - 71: o0oOOo0O0Ooo + iii1I1I + Oo0ooO0oo0oO
def IiO0OoOo00oo ( ) :
 if 81 - 81: OoOoOO00
 global iiII1i1
 global OoO
 global iiI1IIIi
 global II11IiIi11
 global IIOOO0O00O0OOOO
 global oo00OO0000oO
 global I1iiii1I
 global weekdownloads
 if 52 - 52: iii1I1I * O00oOoOoO0o0O % I1IiiI * I11i
 if 73 - 73: O0oo0OO0 * Oo0ooO0oo0oO
 if 62 - 62: OOooOOo . I1IiiI * iIii1I11I1II1 + OoO0O00 * Oo0ooO0oo0oO / oO0o
 O00o0O00 = json . loads ( oo0o )
 for oO00O in O00o0O00 :
  if oO00O [ 'name' ] == I1 :
   iiII1i1 = oO00O [ 'url' ]
   OoO = 'http://' + oO00O [ 'icon' ]
   iiI1IIIi = oO00O [ 'descr' ]
   II11IiIi11 = 'http://' + oO00O [ 'icon' ]
   if 14 - 14: iii1I1I / OoO0O00
   IIOOO0O00O0OOOO = int ( oO00O [ 'downloads' ] )
   if 75 - 75: O00oOoOoO0o0O
   I1iiii1I = "repo"
   oo00OO0000oO = oO00O [ 'repopath' ]
   if 68 - 68: O00oOoOoO0o0O - i1IIi % O00oOoOoO0o0O . OoO0O00 . i11iIiiIii . OoooooooOO
   if 32 - 32: iii1I1I + OoO0O00 % O00oOoOoO0o0O + I1IiiI
def O0O0Ooo ( ) :
 if 29 - 29: iii1I1I % I1ii11iIi11i % o0oOOo0O0Ooo + O0 - I1ii11iIi11i
 global OOo0
 iI1i1IIi1i1 = 4
 OoOoo00Oo0OoO = '' . join ( random . choice ( string . ascii_uppercase ) for _ in range ( iI1i1IIi1i1 ) )
 iiII1i1 = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=getbuildmain&code=' + OoOoo00Oo0OoO
 if 4 - 4: OOooOOo * i1IIi + OoO0O00 - I11i - I11i
 if 9 - 9: OoO0O00 + Oo0ooO0oo0oO - OOooOOo - Oo0ooO0oo0oO + Ii1I
 if 54 - 54: OoOoOO00
 if o000oo == "true" :
  print '@ares: buildmainurl...'
  print iiII1i1
  if 53 - 53: O0oo0OO0
  if 72 - 72: i11iIiiIii
  if 64 - 64: O0oo0OO0 % OoooooooOO / i1IIi / OoO0O00
  if 2 - 2: I11i % o0oOOo0O0Ooo . OoO0O00 . OoO0O00
 OOo0 = iIii111Ii ( iiII1i1 , 'yes' )
 if 89 - 89: Oo0ooO0oo0oO - oO0o + II111iiii + OoO0O00 - O00oOoOoO0o0O
 if OOo0 == "downloadfailed" :
  return ( )
  if 27 - 27: O0oo0OO0 - o0oOOo0O0Ooo + OoO0O00
  if 38 - 38: OoOoOO00 + OoO0O00 . i11iIiiIii + Ii1I % i1IIi % I1IiiI
  if 93 - 93: i11iIiiIii
def oo0oO0O0o ( ) :
 if 78 - 78: i1IIi + O0 % I1ii11iIi11i + Ii1I . iii1I1I
 global IIIIiii1IIii
 global OOo0
 global wizardtextbackup
 ii111 . reset ( )
 O0o0O . reset ( )
 i1I11ii . reset ( )
 if 11 - 11: OoooooooOO + O00oOoOoO0o0O
 IIIIiii1IIii = "buildmain"
 if 15 - 15: Oo0Ooo . I1IiiI % O0 . I1IiiI
 O000oOo ( )
 if 59 - 59: Oo0ooO0oo0oO
 if 72 - 72: I1ii11iIi11i - iii1I1I / OoOoOO00 + o0oOOo0O0Ooo
 if 48 - 48: i1IIi . i1IIi
 if 80 - 80: Ii1I - O0
 o00000 = 0
 if 3 - 3: i1IIi
 if 16 - 16: Oo0ooO0oo0oO * OoOoOO00
 if i1I1ii11i1Iii == "yes" :
  if 98 - 98: I1ii11iIi11i + Oo0ooO0oo0oO
  if 42 - 42: Oo0Ooo + OoOoOO00 - O0 / Oo0Ooo - OoooooooOO . Ii1I
  if 64 - 64: OoooooooOO
  if OOo0 == "" :
   O0O0Ooo ( )
   if 25 - 25: O00oOoOoO0o0O
   if 29 - 29: OoOoOO00 % Oo0ooO0oo0oO * OoooooooOO
   if 8 - 8: i11iIiiIii - O0oo0OO0 / O00oOoOoO0o0O
   if 17 - 17: i11iIiiIii * OoO0O00 . o0oOOo0O0Ooo . OoooooooOO . OoOoOO00 - I1ii11iIi11i
   if 78 - 78: I1ii11iIi11i - OoooooooOO + O0
   if 15 - 15: I1ii11iIi11i / O00oOoOoO0o0O % I1IiiI
   if 16 - 16: Ii1I
  if o000oo == "true" :
   print '@ares: buildmainraw....'
   print OOo0
   if 26 - 26: o0oOOo0O0Ooo / I11i + OoOoOO00 / OoOoOO00
   if 31 - 31: O0oo0OO0
   if 84 - 84: i11iIiiIii * OOooOOo . iii1I1I - Ii1I * i1IIi - I1ii11iIi11i
   if 1 - 1: II111iiii
   if 94 - 94: I1ii11iIi11i * iii1I1I % iii1I1I % I11i - iii1I1I
   if 38 - 38: O00oOoOoO0o0O - OoO0O00 % Ii1I - II111iiii
  ooO00 = 1
  oOo0oOOOoooOo = 0
  if 75 - 75: O0oo0OO0 % II111iiii + OoOoOO00 % i11iIiiIii / iIii1I11I1II1
  while oOo0oOOOoooOo == 0 :
   if 81 - 81: II111iiii * O0oo0OO0 + OoooooooOO
   try :
    O00o0O00 = json . loads ( OOo0 )
    oOo0oOOOoooOo = 1
   except :
    I1Iii11iI = xbmcgui . DialogProgress ( )
    I1Iii11iI . create ( ooO ( "areswizard" ) , 'Getting data...' , 'Attempt: ' + str ( ooO00 ) , ' ' )
    ooO00 = ooO00 + 1
    time . sleep ( 3 )
    O0O0Ooo ( )
    I1Iii11iI . close
    if ooO00 > 3 :
     OOooo = xbmcgui . Dialog ( )
     OOooo . ok ( ooO ( "areswizard" ) , "Failed to get data from server. This may just be temporary, please try again." )
     Iii11iI1I . setFocus ( oooo00oO0O )
     return ( )
     if 59 - 59: i11iIiiIii - i1IIi * i1IIi . Oo0ooO0oo0oO % OoooooooOO / oO0o
     if 97 - 97: iii1I1I
  for oO00O in O00o0O00 :
   if 2 - 2: OoOoOO00 % i1IIi
   if oO00O [ 'areshost' ] == "Yes" and oO00O [ 'name' ] <> "Assorted Builds (Test Purposes)" and oO00O [ 'name' ] <> "Assorted Builds" :
    ii111 . addItem ( '[COLOR=lime]' + oO00O [ 'name' ] + '[/COLOR]' )
   else :
    ii111 . addItem ( '[COLOR=goldenrod]' + oO00O [ 'name' ] + '[/COLOR]' )
   o00000 = o00000 + 1
   if 7 - 7: OoOoOO00 . i1IIi * i11iIiiIii % i11iIiiIii
   if 54 - 54: OoO0O00 / I1IiiI . Oo0Ooo
   if 39 - 39: OoO0O00 . Oo0ooO0oo0oO
 elif i1I1ii11i1Iii == "no" :
  if 41 - 41: Oo0Ooo * I1ii11iIi11i - II111iiii - II111iiii
  if 7 - 7: oO0o
  if 41 - 41: Oo0ooO0oo0oO
  if 93 - 93: Ii1I + O0oo0OO0 + Ii1I
  if 23 - 23: I1IiiI - i1IIi / Oo0ooO0oo0oO
  if 4 - 4: O00oOoOoO0o0O . I1ii11iIi11i + iii1I1I % Oo0ooO0oo0oO
  iiII1i1 = I1IIiiIiii + O000oo0O + i1I1iI
  wizardtextbackup = iIii111Ii ( iiII1i1 , 'yes' )
  if 28 - 28: O0oo0OO0
  Iiiii = re . compile ( 'name="(.+?)"' ) . findall ( wizardtextbackup )
  if 27 - 27: iii1I1I * I1IiiI
  for I1 in Iiiii :
   if 60 - 60: i1IIi / I1IiiI - I1ii11iIi11i
   ii111 . addItem ( '[COLOR=goldenrod]' + I1 + '[/COLOR]' )
   o00000 = o00000 + 1
   if 41 - 41: O0oo0OO0 + Oo0ooO0oo0oO / OOooOOo + I11i % Oo0Ooo
   if 91 - 91: I1IiiI % I1ii11iIi11i % oO0o / i1IIi * iIii1I11I1II1 + I11i
   if 48 - 48: Oo0ooO0oo0oO / I1ii11iIi11i / OoO0O00 / II111iiii * OoOoOO00
   if 73 - 73: I11i / I1IiiI - O00oOoOoO0o0O - i1IIi * O00oOoOoO0o0O - OOooOOo
 ii111 . setVisible ( True )
 if 39 - 39: I11i . Oo0ooO0oo0oO * II111iiii
 oooo00oO0O . controlDown ( ii111 )
 ii111 . controlUp ( oooo00oO0O )
 if 21 - 21: Ii1I
 Iii11iI1I . setFocus ( oooo00oO0O )
 if 92 - 92: OoO0O00 * I1ii11iIi11i + iIii1I11I1II1
 if 88 - 88: iIii1I11I1II1 + iIii1I11I1II1 * i11iIiiIii . I1ii11iIi11i % oO0o
 if 94 - 94: I1IiiI / I1ii11iIi11i / OOooOOo
 if o00000 > 10 :
  iiiii1I1III1 . setVisible ( True )
 else :
  iiiii1I1III1 . setVisible ( False )
  if 45 - 45: II111iiii
  if 98 - 98: i11iIiiIii + I1ii11iIi11i * OOooOOo / OoOoOO00
  if 84 - 84: o0oOOo0O0Ooo
  if 40 - 40: OoooooooOO - oO0o / O0 * O0oo0OO0 . O0 + i11iIiiIii
  if 9 - 9: OOooOOo % O0 % O0 / I1ii11iIi11i . II111iiii / II111iiii
  if 78 - 78: iIii1I11I1II1 - i1IIi . I11i . o0oOOo0O0Ooo
  if 66 - 66: OOooOOo * Oo0Ooo
def o0000Oo0oo ( ) :
 if 27 - 27: OOooOOo
 pass
 if 95 - 95: oO0o - O0oo0OO0 + Oo0Ooo
 if 32 - 32: iIii1I11I1II1 - Oo0ooO0oo0oO . o0oOOo0O0Ooo
def oo0O ( ) :
 if 29 - 29: oO0o . i1IIi * i11iIiiIii
 global i1I1i111Ii
 if 19 - 19: oO0o . oO0o
 iI1i1IIi1i1 = 4
 OoOoo00Oo0OoO = '' . join ( random . choice ( string . ascii_uppercase ) for _ in range ( iI1i1IIi1i1 ) )
 if 43 - 43: oO0o * O0
 if iI11iI == "true" :
  iiII1i1 = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=getbuildsincadult&code=' + OoOoo00Oo0OoO
  if 85 - 85: i1IIi . I1ii11iIi11i / O0
 else :
  iiII1i1 = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=getbuilds&code=' + OoOoo00Oo0OoO
  if 58 - 58: I1IiiI / Ii1I
  if 54 - 54: OoO0O00 - iIii1I11I1II1 + oO0o + II111iiii + I1ii11iIi11i * iii1I1I
 if o000oo == "true" :
  print '@ares: buildlisturl...'
  print iiII1i1
  if 17 - 17: oO0o / Ii1I
  if 26 - 26: Oo0ooO0oo0oO / I11i % I11i + o0oOOo0O0Ooo - O00oOoOoO0o0O
  if 89 - 89: Ii1I
  if 23 - 23: II111iiii
 i1I1i111Ii = iIii111Ii ( iiII1i1 , 'yes' )
 if 61 - 61: OoOoOO00 / I1IiiI . I1ii11iIi11i % OOooOOo
 if i1I1i111Ii == "downloadfailed" :
  reutrn ( )
  if 70 - 70: OOooOOo * OoOoOO00 / oO0o + Oo0Ooo / O0
  if 16 - 16: Oo0Ooo / OoooooooOO / O00oOoOoO0o0O + Oo0Ooo * i11iIiiIii
  if 15 - 15: o0oOOo0O0Ooo / i11iIiiIii
def Ooo0O ( ) :
 if 63 - 63: I1ii11iIi11i - Ii1I + I11i
 if 98 - 98: iii1I1I / O00oOoOoO0o0O * I1IiiI / oO0o - iIii1I11I1II1
 global i1I1i111Ii
 global IIIIiii1IIii
 if 72 - 72: O0 . OOooOOo
 if 99 - 99: i1IIi + iIii1I11I1II1 - Oo0ooO0oo0oO + OoO0O00 + Oo0Ooo . I1ii11iIi11i
 if 74 - 74: i1IIi
 if 80 - 80: Oo0ooO0oo0oO + O0oo0OO0 . I1ii11iIi11i % OoooooooOO
 IIIIiii1IIii = "featuredbuild"
 if 26 - 26: OoOoOO00 . iii1I1I * iIii1I11I1II1 / O00oOoOoO0o0O
 O000oOo ( )
 if 69 - 69: OoooooooOO / I11i + Ii1I * II111iiii
 try :
  i1I1i111Ii
  if 35 - 35: i11iIiiIii + oO0o
  if i1I1i111Ii == "" :
   oo0O ( )
 except :
  if 85 - 85: OoOoOO00 . O0 % OoooooooOO % oO0o
  oo0O ( )
  if 43 - 43: I1IiiI - I11i . I1IiiI / i11iIiiIii % O00oOoOoO0o0O * i11iIiiIii
  if 12 - 12: II111iiii - iIii1I11I1II1
 o00000 = 0
 if 43 - 43: i11iIiiIii % OoO0O00
 if o000oo == "true" :
  print '@ares: Buildlistraw....'
  print i1I1i111Ii
  if 100 - 100: i1IIi
  if 4 - 4: i11iIiiIii - OOooOOo * O00oOoOoO0o0O % OoooooooOO - OoOoOO00
 ooO00 = 1
 oOo0oOOOoooOo = 0
 if 81 - 81: Ii1I * Oo0ooO0oo0oO . oO0o . O00oOoOoO0o0O
 while oOo0oOOOoooOo == 0 :
  if 71 - 71: O00oOoOoO0o0O + OoO0O00
  try :
   O00o0O00 = json . loads ( i1I1i111Ii )
   oOo0oOOOoooOo = 1
  except :
   I1Iii11iI = xbmcgui . DialogProgress ( )
   if 39 - 39: I1IiiI % O00oOoOoO0o0O / II111iiii / II111iiii
   I1Iii11iI . create ( ooO ( "areswizard" ) , 'Getting data...' , ' ' , ' ' )
   ooO00 = ooO00 + 1
   time . sleep ( 3 )
   oo0O ( )
   I1Iii11iI . close
   if ooO00 > 3 :
    OOooo = xbmcgui . Dialog ( )
    OOooo . ok ( ooO ( "areswizard" ) , "Failed to get data from server. This may just be temporary, please try again." )
    Iii11iI1I . setFocus ( oooo00oO0O )
    return ( )
    if 95 - 95: II111iiii + i11iIiiIii + o0oOOo0O0Ooo
 for oO00O in O00o0O00 :
  i1I11ii . addItem ( '[COLOR=goldenrod]' + oO00O [ 'name' ] + '[/COLOR]' )
  o00000 = o00000 + 1
  if 30 - 30: O0 - O0 % iIii1I11I1II1 + iii1I1I * OoooooooOO
  if 1 - 1: O0
  if 36 - 36: oO0o . iii1I1I
 i1I11ii . setVisible ( True )
 if 62 - 62: I11i + iIii1I11I1II1 % I11i * OOooOOo + iIii1I11I1II1 % Ii1I
 if o00000 > 11 :
  iiiii1I1III1 . setVisible ( True )
 else :
  iiiii1I1III1 . setVisible ( False )
  if 56 - 56: o0oOOo0O0Ooo
  if 55 - 55: oO0o - O0oo0OO0 / Oo0ooO0oo0oO % I1IiiI * OoooooooOO * I1IiiI
 ii1O0oOOo . controlDown ( i1I11ii )
 oooo00oO0O . controlDown ( i1I11ii )
 if 88 - 88: Ii1I + O0
 iiIiIi1I1 . controlDown ( i1I11ii )
 Oo0OOo . controlDown ( i1I11ii )
 ii11I1IIII11 . controlDown ( i1I11ii )
 iiI1II11I1iI . controlDown ( i1I11ii )
 i1I11ii . controlRight ( i1III1iI )
 i1III1iI . controlLeft ( i1I11ii )
 i1III1iI . controlUp ( ooooo0O0 )
 i1III1iI . controlDown ( ooOo000OoO0o )
 if 92 - 92: I1IiiI % iii1I1I % I11i + OoooooooOO - i11iIiiIii
 if 9 - 9: i11iIiiIii - II111iiii / Oo0ooO0oo0oO
 if 81 - 81: i11iIiiIii % OoOoOO00 % OoO0O00 * Ii1I
 ooooo0O0 . controlUp ( oooo00oO0O )
 ooooo0O0 . controlDown ( i1III1iI )
 ooooo0O0 . controlLeft ( i1I11ii )
 if 85 - 85: OoooooooOO * Oo0ooO0oo0oO
 ooOo000OoO0o . controlUp ( i1III1iI )
 ooOo000OoO0o . controlDown ( IiII1i1iI )
 ooOo000OoO0o . controlLeft ( i1I11ii )
 if 23 - 23: OOooOOo / I11i / OoooooooOO - Ii1I / OoO0O00 - OoO0O00
 IiII1i1iI . controlUp ( ooOo000OoO0o )
 IiII1i1iI . controlLeft ( i1I11ii )
 if 60 - 60: OOooOOo . Oo0ooO0oo0oO % i1IIi % Ii1I % Oo0ooO0oo0oO + OoO0O00
 if 26 - 26: O0 % o0oOOo0O0Ooo + iii1I1I * I1ii11iIi11i * O0oo0OO0
 if 4 - 4: OOooOOo * OoooooooOO * i1IIi % I1ii11iIi11i % Oo0Ooo
 if 1 - 1: OoO0O00 / iIii1I11I1II1 % I1ii11iIi11i - o0oOOo0O0Ooo
 if 62 - 62: O0oo0OO0 % II111iiii
 if 91 - 91: I11i % Ii1I - O00oOoOoO0o0O + iIii1I11I1II1 * iIii1I11I1II1
 I1 = i1I11ii . getListItem ( i1I11ii . getSelectedPosition ( ) ) . getLabel ( )
 if 91 - 91: i11iIiiIii + Ii1I
 IIiII11 = "COLOR"
 if IIiII11 in I1 :
  oo0O00OOOOO = I1 . find ( ']' )
  OoOII11IiI1 = I1 [ oo0O00OOOOO + 1 : ]
  OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
  if 85 - 85: I11i % O00oOoOoO0o0O
  I1 = OoOII11IiI1 [ : OoOOOO00oOO ]
  if 68 - 68: Oo0Ooo . O0oo0OO0 - o0oOOo0O0Ooo * iIii1I11I1II1 - II111iiii % i1IIi
  if 58 - 58: I11i / i11iIiiIii * i11iIiiIii
 O00o0O00 = json . loads ( i1I1i111Ii )
 for oO00O in O00o0O00 :
  if oO00O [ 'name' ] == I1 :
   iiII1i1 = oO00O [ 'url' ]
   OoO = 'http://' + oO00O [ 'icon' ]
   iiI1IIIi = oO00O [ 'descr' ]
   II11IiIi11 = 'http://' + oO00O [ 'icon' ]
   I1Ii111I111 = '[COLOR=darkgray]' + oO00O [ 'author' ] + '[/COLOR]'
   global ii1I1
   ii1I1 = oO00O [ 'rating' ]
   I1I1iiiiiIi1 = '[COLOR=darkgray]' + oO00O [ 'votes' ] + '[/COLOR]'
   i1Io00OOOo = oO00O [ 'votes' ]
   if 24 - 24: Oo0ooO0oo0oO - O0oo0OO0 * II111iiii - II111iiii
   IIOOO0O00O0OOOO = '[COLOR=darkgray]This week: ' + oO00O [ 'thismonth' ] + ' / Total: ' + oO00O [ 'downloads' ] + '[/COLOR]'
   Ii1 = oO00O [ 'downloads' ]
   if 47 - 47: O00oOoOoO0o0O - iIii1I11I1II1 / OoOoOO00 * iii1I1I - iIii1I11I1II1 % oO0o
   global OOii1ii1i11I1I
   OOii1ii1i11I1I . setImage ( II11IiIi11 )
   OOii1ii1i11I1I . setVisible ( True )
   if 93 - 93: Ii1I / iii1I1I
   global iiII1iiiiiii
   iiII1iiiiiii . setLabel ( label = '[COLOR=darkgray]' + I1 + '[/COLOR]' )
   iiII1iiiiiii . setVisible ( True )
   if 100 - 100: Oo0Ooo
   global iiIiii
   iiIiii . setLabel ( label = '[COLOR=darkgray]Created by: [/COLOR]' + I1Ii111I111 )
   iiIiii . setVisible ( True )
   if 94 - 94: I1ii11iIi11i / i1IIi * I1IiiI - I11i - I1ii11iIi11i
   O0Ooo000 . setVisible ( True )
   IIi11iI1Iii . setVisible ( True )
   O0Ooo000 . setLabel ( label = I1I1iiiiiIi1 )
   if 6 - 6: I1ii11iIi11i % o0oOOo0O0Ooo + o0oOOo0O0Ooo / OOooOOo / I1IiiI
   if 67 - 67: OoOoOO00 . iii1I1I / OOooOOo * Oo0ooO0oo0oO + i1IIi
   I1IiiIiii1 . setVisible ( True )
   i11i . setVisible ( True )
   I1IiiIiii1 . setLabel ( label = IIOOO0O00O0OOOO )
   if 100 - 100: OOooOOo . Oo0ooO0oo0oO + O0oo0OO0 . oO0o
   IiIi1i . setVisible ( True )
   if 20 - 20: i11iIiiIii - i1IIi - iIii1I11I1II1 - OoooooooOO
   iI1i1Iiii ( ii1I1 , i1Io00OOOo )
   if 72 - 72: O0oo0OO0 . OoO0O00
   i1III1iI . setVisible ( True )
   IiII1i1iI . setVisible ( True )
   ooooo0O0 . setVisible ( True )
   ooOo000OoO0o . setVisible ( True )
   if 59 - 59: I1IiiI * I11i % i1IIi
   i1oO00O . setVisible ( True )
   oo0o0ooooo . setVisible ( True )
   if 77 - 77: OOooOOo * OoooooooOO + I1IiiI + I1IiiI % oO0o . OoooooooOO
   if 60 - 60: iIii1I11I1II1
   if Oo0O0oOoO0o0 == 'mac0' :
    IiII1i1iI . setEnabled ( False )
   else :
    IiII1i1iI . setEnabled ( True )
    if 13 - 13: II111iiii + Ii1I
   Iii11iI1I . setFocus ( oooo00oO0O )
   if 33 - 33: i1IIi
   if 36 - 36: Oo0ooO0oo0oO % Oo0ooO0oo0oO . i11iIiiIii
   if 42 - 42: OoO0O00 . O0oo0OO0 / Ii1I
   if 57 - 57: iIii1I11I1II1 % I1ii11iIi11i . OOooOOo / oO0o . OoOoOO00
def OoOO0oo0OOOO ( ) :
 if 30 - 30: i1IIi % II111iiii . Oo0Ooo
 global oO00ooooO0o
 if 82 - 82: iIii1I11I1II1 / I11i + OoO0O00
 iI1i1IIi1i1 = 4
 OoOoo00Oo0OoO = '' . join ( random . choice ( string . ascii_uppercase ) for _ in range ( iI1i1IIi1i1 ) )
 if 50 - 50: iii1I1I - Ii1I / i1IIi
 if iI11iI == "true" :
  iiII1i1 = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=getaddonsincadult&code=' + OoOoo00Oo0OoO
  if 14 - 14: I1ii11iIi11i * II111iiii - iii1I1I
 else :
  if 4 - 4: iii1I1I % Oo0Ooo + iii1I1I - iIii1I11I1II1
  iiII1i1 = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=getaddons&code=' + OoOoo00Oo0OoO
  if 96 - 96: OoooooooOO - iIii1I11I1II1 % Oo0Ooo - i11iIiiIii + Ii1I . i11iIiiIii
  if 65 - 65: I11i . OOooOOo * O0 / i1IIi - i11iIiiIii / OoO0O00
  if 48 - 48: iIii1I11I1II1
  if 19 - 19: oO0o
 oO00ooooO0o = iIii111Ii ( iiII1i1 , 'yes' )
 if 69 - 69: I1ii11iIi11i % iii1I1I - OoooooooOO % Ii1I * oO0o
 if oO00ooooO0o == "downloadfailed" :
  return ( )
  if 12 - 12: OoOoOO00 / O0oo0OO0 . O0 . O00oOoOoO0o0O - OOooOOo - OoO0O00
  if 28 - 28: II111iiii . OoOoOO00 - o0oOOo0O0Ooo
  if 89 - 89: O0oo0OO0 * OoooooooOO . OOooOOo . I11i % i11iIiiIii
  if 8 - 8: I1ii11iIi11i + II111iiii . OoO0O00 + I1IiiI - II111iiii % OoO0O00
def ooO0ooO00o ( ) :
 if 47 - 47: II111iiii + O0oo0OO0 + II111iiii
 if 45 - 45: II111iiii % OoOoOO00 / O0 % iIii1I11I1II1 + oO0o
 if 51 - 51: o0oOOo0O0Ooo * o0oOOo0O0Ooo . Ii1I
 if i1I1ii11i1Iii == "no" :
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Ares Wizard" , "Sorry.. Temporarily Unavailable" , "" , "" )
  return ( )
  if 14 - 14: OoO0O00 . I11i % II111iiii % i11iIiiIii + OoooooooOO
  if 50 - 50: i11iIiiIii * I11i + i11iIiiIii - i1IIi
 global oO00ooooO0o
 if 69 - 69: I1IiiI + O00oOoOoO0o0O + oO0o * I1ii11iIi11i . iIii1I11I1II1 / OoooooooOO
 OOOOO0o0OOo . reset ( )
 if 77 - 77: Oo0Ooo - Oo0ooO0oo0oO
 if 68 - 68: Ii1I * O0
 O000oOo ( )
 if 61 - 61: II111iiii - OoO0O00 . iIii1I11I1II1 * o0oOOo0O0Ooo . OoO0O00 % O00oOoOoO0o0O
 if 11 - 11: oO0o + I11i
 if 6 - 6: i1IIi . o0oOOo0O0Ooo + OoO0O00 + OOooOOo + oO0o
 if 30 - 30: O0
 if 98 - 98: O0oo0OO0
 if oO00ooooO0o == "" :
  OoOO0oo0OOOO ( )
  if 58 - 58: OOooOOo
  if 6 - 6: I1ii11iIi11i
 OOOOO0o0OOo . addItem ( '[COLOR=goldenrod]Video Addons[/COLOR]' )
 OOOOO0o0OOo . addItem ( '[COLOR=goldenrod]Program Addons[/COLOR]' )
 OOOOO0o0OOo . addItem ( '[COLOR=goldenrod]Repositories[/COLOR]' )
 if 37 - 37: i11iIiiIii . II111iiii + OOooOOo + i1IIi * OOooOOo
 OOOOO0o0OOo . setVisible ( True )
 if 18 - 18: Oo0ooO0oo0oO
 if 18 - 18: O0oo0OO0 + OoOoOO00 % OOooOOo - O00oOoOoO0o0O - i1IIi + I1ii11iIi11i
 if 33 - 33: I11i * Ii1I / Oo0Ooo + oO0o % OOooOOo % OoooooooOO
 ii1O0oOOo . controlDown ( OOOOO0o0OOo )
 oooo00oO0O . controlDown ( OOOOO0o0OOo )
 iiIIii1iIiIi . controlDown ( OOOOO0o0OOo )
 iiIiIi1I1 . controlDown ( OOOOO0o0OOo )
 Oo0OOo . controlDown ( OOOOO0o0OOo )
 ii11I1IIII11 . controlDown ( OOOOO0o0OOo )
 iiI1II11I1iI . controlDown ( OOOOO0o0OOo )
 if 29 - 29: Ii1I . II111iiii / O0oo0OO0
 if 79 - 79: O00oOoOoO0o0O . OoOoOO00 / oO0o % OoO0O00 / Ii1I + I11i
 if 78 - 78: o0oOOo0O0Ooo + O0oo0OO0 % i11iIiiIii % I1IiiI - Ii1I
 if 81 - 81: i11iIiiIii - II111iiii + I11i
 if 52 - 52: II111iiii
 if 62 - 62: iii1I1I / OoO0O00 + i11iIiiIii / Oo0Ooo
 if 26 - 26: I1ii11iIi11i - OoO0O00
def iiIIii1I1iIIII ( ) :
 if 56 - 56: i1IIi / i1IIi . OoO0O00 % i1IIi - OoOoOO00 % OOooOOo
 global oo0o
 if 66 - 66: i11iIiiIii * O00oOoOoO0o0O % O00oOoOoO0o0O . I1IiiI / Oo0ooO0oo0oO
 iI1i1IIi1i1 = 4
 OoOoo00Oo0OoO = '' . join ( random . choice ( string . ascii_uppercase ) for _ in range ( iI1i1IIi1i1 ) )
 if 50 - 50: O00oOoOoO0o0O . iii1I1I / o0oOOo0O0Ooo % OoOoOO00 * O00oOoOoO0o0O % I11i
 if iI11iI == "true" :
  iiII1i1 = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=getreposincadult&code=' + OoOoo00Oo0OoO
  if 15 - 15: Ii1I
 else :
  iiII1i1 = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=getrepos&code=' + OoOoo00Oo0OoO
  if 29 - 29: I11i / I1IiiI / OoooooooOO . OoOoOO00 / I11i . O0oo0OO0
  if 69 - 69: O0 * OoOoOO00 + o0oOOo0O0Ooo + I1IiiI % iii1I1I . OoooooooOO
  if 45 - 45: O0oo0OO0 + oO0o - o0oOOo0O0Ooo - OoOoOO00 + I1IiiI / II111iiii
  if 46 - 46: II111iiii . iIii1I11I1II1
 oo0o = iIii111Ii ( iiII1i1 , 'yes' )
 if 62 - 62: I1ii11iIi11i % i1IIi % O0oo0OO0 * Oo0ooO0oo0oO % OOooOOo + I1IiiI
 if oo0o == "downloadfailed" :
  return ( )
  if 100 - 100: II111iiii - o0oOOo0O0Ooo * OoooooooOO . Oo0ooO0oo0oO / II111iiii / oO0o
  if 43 - 43: iIii1I11I1II1 + Oo0ooO0oo0oO * iii1I1I + iIii1I11I1II1 . O0oo0OO0
  if 87 - 87: O0oo0OO0
def IiiiiI ( ) :
 if 14 - 14: oO0o
 if 30 - 30: OoO0O00 / OOooOOo
 global oo0o
 global IIIIiii1IIii
 IIIIiii1IIii = "repo"
 I11I11I11IiIi . reset ( )
 if 81 - 81: O0oo0OO0 % OoO0O00 . II111iiii - O00oOoOoO0o0O + O00oOoOoO0o0O + Ii1I
 if 11 - 11: OOooOOo / iii1I1I + OoOoOO00 - Ii1I
 if 5 - 5: OOooOOo . oO0o / o0oOOo0O0Ooo
 O000oOo ( )
 if 52 - 52: I1IiiI + O0 * O0oo0OO0
 try :
  oo0o
  if 17 - 17: OoooooooOO % O0oo0OO0 . o0oOOo0O0Ooo * OoO0O00 - O0oo0OO0 . iii1I1I
  if oo0o == "" :
   iiIIii1I1iIIII ( )
 except :
  if 62 - 62: oO0o * OoooooooOO % o0oOOo0O0Ooo
  iiIIii1I1iIIII ( )
  if 16 - 16: II111iiii - I1IiiI * O0 . OOooOOo / iii1I1I
  if 55 - 55: Ii1I + OoooooooOO % O0oo0OO0 % OoO0O00 / OoO0O00 + II111iiii
  if 79 - 79: o0oOOo0O0Ooo % O0oo0OO0 . Ii1I % iIii1I11I1II1 / Oo0Ooo + i11iIiiIii
  if 25 - 25: Oo0ooO0oo0oO
  if 49 - 49: OoO0O00 % I11i . OOooOOo + i1IIi
 ooO00 = 1
 oOo0oOOOoooOo = 0
 if 23 - 23: O00oOoOoO0o0O + Oo0ooO0oo0oO % OoOoOO00 % I1IiiI
 while oOo0oOOOoooOo == 0 :
  if 43 - 43: O00oOoOoO0o0O - O00oOoOoO0o0O
  try :
   O00o0O00 = json . loads ( oo0o )
   oOo0oOOOoooOo = 1
  except :
   I1Iii11iI = xbmcgui . DialogProgress ( )
   if 46 - 46: O0 % I1IiiI / I1ii11iIi11i + i1IIi
   I1Iii11iI . create ( ooO ( "areswizard" ) , 'Getting data...' , ' ' , ' ' )
   ooO00 = ooO00 + 1
   time . sleep ( 3 )
   iiIIii1I1iIIII ( )
   I1Iii11iI . close
   if ooO00 > 3 :
    OOooo = xbmcgui . Dialog ( )
    OOooo . ok ( ooO ( "areswizard" ) , "Failed to get data from server. This may just be temporary, please try again." )
    Iii11iI1I . setFocus ( ii1O0oOOo )
    return ( )
    if 95 - 95: oO0o / OoooooooOO % O0oo0OO0 + O0oo0OO0 + I1IiiI
    if 17 - 17: Oo0ooO0oo0oO % I1IiiI
    if 34 - 34: I11i - i1IIi % OoO0O00 - OoOoOO00 * iIii1I11I1II1 . OoO0O00
    if 98 - 98: Oo0Ooo * oO0o - Oo0Ooo * oO0o
 for oO00O in O00o0O00 :
  i1Ii1i111I1 = oO00O [ 'repopath' ]
  if 21 - 21: O0 - II111iiii % Oo0Ooo - OOooOOo + i11iIiiIii
  o0oIiiiIiIiii = translate ( 'special://home/addons/' + i1Ii1i111I1 + '/addon.xml' )
  if 72 - 72: I1ii11iIi11i * i11iIiiIii
  if os . path . isfile ( o0oIiiiIiIiii ) :
   if 12 - 12: O0 - iIii1I11I1II1 % Oo0Ooo / O0 - O00oOoOoO0o0O
   I11I11I11IiIi . addItem ( '[COLOR=lime]' + oO00O [ 'name' ] + '[/COLOR]' )
   if 55 - 55: OOooOOo . Oo0Ooo * OoOoOO00 / OoooooooOO * i11iIiiIii + oO0o
  else :
   if 45 - 45: Ii1I
   I11I11I11IiIi . addItem ( '[COLOR=fuchsia]' + oO00O [ 'name' ] + '[/COLOR]' )
   if 8 - 8: oO0o + OOooOOo
   if 37 - 37: O00oOoOoO0o0O - OoOoOO00 + oO0o - Oo0Ooo + O00oOoOoO0o0O
   if 33 - 33: Oo0Ooo % oO0o - I1IiiI + Oo0Ooo
   if 90 - 90: I1ii11iIi11i * O0oo0OO0 - iIii1I11I1II1 % O00oOoOoO0o0O * O0oo0OO0 . O0oo0OO0
   if 90 - 90: o0oOOo0O0Ooo - O0 % O0 - oO0o . OoooooooOO
   if 30 - 30: I11i + O0 / Ii1I / OoOoOO00 - oO0o + II111iiii
   if 21 - 21: iIii1I11I1II1 % OoooooooOO * OOooOOo % i1IIi
   if 73 - 73: OoooooooOO
   if 100 - 100: I11i / i1IIi / i1IIi % Ii1I - II111iiii . OoooooooOO
   if 72 - 72: Oo0Ooo * OoooooooOO % I1IiiI + I11i - II111iiii
   if 82 - 82: iIii1I11I1II1 / i1IIi * I1IiiI . i11iIiiIii
   if 56 - 56: Ii1I * I1IiiI / Oo0ooO0oo0oO * II111iiii
   if 51 - 51: i1IIi . oO0o % OOooOOo
   if 90 - 90: OoooooooOO + iii1I1I / iIii1I11I1II1
   if 12 - 12: OoooooooOO
 I11I11I11IiIi . setVisible ( True )
 iiiii1I1III1 . setVisible ( True )
 if 9 - 9: O0 / O0 / I1IiiI - oO0o . Oo0ooO0oo0oO
 if 6 - 6: O0 - OoO0O00 + OoooooooOO % iIii1I11I1II1
 ii1O0oOOo . controlDown ( I11I11I11IiIi )
 oooo00oO0O . controlDown ( I11I11I11IiIi )
 iiIIii1iIiIi . controlDown ( I11I11I11IiIi )
 iiIiIi1I1 . controlDown ( I11I11I11IiIi )
 Oo0OOo . controlDown ( I11I11I11IiIi )
 ii11I1IIII11 . controlDown ( I11I11I11IiIi )
 iiI1II11I1iI . controlDown ( I11I11I11IiIi )
 I11I11I11IiIi . controlRight ( O0Oo0 )
 if 58 - 58: i11iIiiIii * OOooOOo . Oo0Ooo / iii1I1I - i1IIi
 O0Oo0 . controlLeft ( I11I11I11IiIi )
 O0Oo0 . controlRight ( O0OOO00 )
 O0Oo0 . controlUp ( ii1O0oOOo )
 if 45 - 45: Ii1I
 O0OOO00 . controlLeft ( O0Oo0 )
 O0OOO00 . controlRight ( oooOoO )
 O0OOO00 . controlUp ( ii1O0oOOo )
 if 89 - 89: Oo0ooO0oo0oO + I11i * O0 % OoOoOO00
 if 2 - 2: O0oo0OO0 % iIii1I11I1II1 . Ii1I - II111iiii
 oooOoO . controlLeft ( O0OOO00 )
 oooOoO . controlUp ( ii1O0oOOo )
 if 33 - 33: I11i . i11iIiiIii % i1IIi * II111iiii * i11iIiiIii + OoOoOO00
 if 26 - 26: I1IiiI % OoOoOO00 % I11i + Oo0Ooo
 if 86 - 86: iii1I1I / i1IIi % Oo0Ooo
 if 84 - 84: o0oOOo0O0Ooo * OOooOOo . I11i * Ii1I
 if 32 - 32: Oo0ooO0oo0oO % Oo0ooO0oo0oO * I1ii11iIi11i % Ii1I + Oo0Ooo . OoOoOO00
 if 2 - 2: O0oo0OO0 / Oo0ooO0oo0oO * oO0o + O00oOoOoO0o0O
 if 14 - 14: OoOoOO00 / iIii1I11I1II1 . o0oOOo0O0Ooo % i11iIiiIii . OoOoOO00
 if 92 - 92: OoO0O00 . i1IIi
 if 22 - 22: Ii1I . I1IiiI
 if 54 - 54: OOooOOo / I1ii11iIi11i % oO0o
 if 66 - 66: I11i + iii1I1I
 if 50 - 50: O00oOoOoO0o0O
 I1 = I11I11I11IiIi . getListItem ( I11I11I11IiIi . getSelectedPosition ( ) ) . getLabel ( )
 if 33 - 33: OOooOOo % I1IiiI - I1IiiI / O00oOoOoO0o0O
 IIiII11 = "COLOR"
 if IIiII11 in I1 :
  oo0O00OOOOO = I1 . find ( ']' )
  OoOII11IiI1 = I1 [ oo0O00OOOOO + 1 : ]
  OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
  if 22 - 22: Oo0ooO0oo0oO * Oo0ooO0oo0oO % o0oOOo0O0Ooo * Ii1I . OoO0O00
  I1 = OoOII11IiI1 [ : OoOOOO00oOO ]
  if 55 - 55: OoOoOO00 - I1ii11iIi11i + iIii1I11I1II1 - i11iIiiIii / i1IIi / II111iiii
  if 37 - 37: Ii1I + o0oOOo0O0Ooo
 O00o0O00 = json . loads ( oo0o )
 for oO00O in O00o0O00 :
  if oO00O [ 'name' ] == I1 :
   iiII1i1 = oO00O [ 'url' ]
   OoO = 'http://' + oO00O [ 'icon' ]
   iiI1IIIi = oO00O [ 'descr' ]
   II11IiIi11 = 'http://' + oO00O [ 'icon' ]
   ii1I1 = oO00O [ 'rating' ]
   I1I1iiiiiIi1 = '[COLOR=darkgray]' + oO00O [ 'votes' ] + '[/COLOR]'
   i1Io00OOOo = oO00O [ 'votes' ]
   I1Ii111I111 = '[COLOR=darkgray]' + oO00O [ 'author' ] + '[/COLOR]'
   i1Ii1i111I1 = oO00O [ 'repopath' ]
   if 74 - 74: Oo0Ooo / O0 + i1IIi . I1IiiI + OoO0O00 / Oo0Ooo
   IIOOO0O00O0OOOO = '[COLOR=darkgray]Total: ' + oO00O [ 'downloads' ] + '[/COLOR]'
   Ii1 = oO00O [ 'downloads' ]
   if 13 - 13: o0oOOo0O0Ooo / Ii1I . II111iiii
   global I1oOoO0OOO00O
   I1oOoO0OOO00O . setImage ( II11IiIi11 )
   I1oOoO0OOO00O . setVisible ( True )
   if 8 - 8: I11i - I11i % O00oOoOoO0o0O
   if 8 - 8: I1IiiI . O00oOoOoO0o0O * O0 * o0oOOo0O0Ooo
   O0Ooo000 . setVisible ( True )
   IIi11iI1Iii . setVisible ( True )
   O0Ooo000 . setLabel ( label = I1I1iiiiiIi1 )
   if 17 - 17: I1IiiI . oO0o + Oo0Ooo + I11i / o0oOOo0O0Ooo
   global iiIiii
   iiIiii . setLabel ( label = '[COLOR=darkgray]Created by: [/COLOR]' + I1Ii111I111 )
   iiIiii . setVisible ( True )
   if 25 - 25: iii1I1I / iii1I1I % OoOoOO00 / Oo0ooO0oo0oO
   I1IiiIiii1 . setVisible ( True )
   i11i . setVisible ( True )
   I1IiiIiii1 . setLabel ( label = IIOOO0O00O0OOOO )
   if 81 - 81: OOooOOo * oO0o
   IiIi1i . setVisible ( True )
   if 32 - 32: Oo0Ooo * OoO0O00 + Oo0ooO0oo0oO . O0 * oO0o * iIii1I11I1II1
   iI1i1Iiii ( ii1I1 , i1Io00OOOo )
   if 50 - 50: i1IIi
   if 53 - 53: II111iiii + O0 . Oo0ooO0oo0oO * O00oOoOoO0o0O + i1IIi
   if 80 - 80: Ii1I + O0
   oooOoO . setVisible ( True )
   O0Oo0 . setVisible ( True )
   O0OOO00 . setVisible ( True )
   if 59 - 59: i11iIiiIii - OoooooooOO % I11i . OoO0O00 - Oo0Ooo * o0oOOo0O0Ooo
 Iii11iI1I . setFocus ( ii1O0oOOo )
 if 7 - 7: II111iiii % Ii1I * i11iIiiIii
def Ii111 ( ) :
 if 4 - 4: OoOoOO00 / I11i - O00oOoOoO0o0O - iii1I1I . I1ii11iIi11i
 if 36 - 36: OoO0O00 % I1IiiI
 global I1
 if 14 - 14: I11i
 if 70 - 70: Oo0Ooo % OoOoOO00 + i11iIiiIii / OoO0O00 . O00oOoOoO0o0O * O00oOoOoO0o0O
 if 72 - 72: Oo0ooO0oo0oO
 if 21 - 21: Ii1I - OOooOOo
 I1 = OOOOO0o0OOo . getListItem ( OOOOO0o0OOo . getSelectedPosition ( ) ) . getLabel ( )
 if 32 - 32: iIii1I11I1II1 / OoO0O00
 IIiII11 = "COLOR"
 if IIiII11 in I1 :
  oo0O00OOOOO = I1 . find ( ']' )
  OoOII11IiI1 = I1 [ oo0O00OOOOO + 1 : ]
  OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
  if 22 - 22: II111iiii . I11i
  I1 = OoOII11IiI1 [ : OoOOOO00oOO ]
  if 61 - 61: OOooOOo % O0 . I1ii11iIi11i . iIii1I11I1II1 * I11i
 if I1 == "Video Addons" :
  if 29 - 29: Oo0ooO0oo0oO + i1IIi % O00oOoOoO0o0O * Ii1I
  if 94 - 94: OOooOOo / O00oOoOoO0o0O
  I1i11111i ( )
  if 22 - 22: OoOoOO00 - Oo0Ooo
  if 41 - 41: iIii1I11I1II1 * O0oo0OO0 / OoO0O00
  if 33 - 33: I11i + O0
 if I1 == "Program Addons" :
  if 9 - 9: I11i . iii1I1I * Oo0ooO0oo0oO * Oo0ooO0oo0oO
  if 68 - 68: O0 - i11iIiiIii % iIii1I11I1II1 % Oo0ooO0oo0oO
  ii1iiI ( )
  if 51 - 51: I1ii11iIi11i
  if 37 - 37: I1IiiI % O0oo0OO0
  if 22 - 22: o0oOOo0O0Ooo % OOooOOo - I11i + Oo0ooO0oo0oO / OOooOOo
 if I1 == "Repositories" :
  if 98 - 98: I11i * O0 + O00oOoOoO0o0O - oO0o
  if 35 - 35: OoooooooOO * Ii1I
  IiiiiI ( )
  if 73 - 73: Oo0ooO0oo0oO . OoO0O00 % I1ii11iIi11i - oO0o
  if 67 - 67: o0oOOo0O0Ooo . I11i + i1IIi
  if 100 - 100: Oo0Ooo - I1IiiI . OOooOOo % iIii1I11I1II1 . I11i
  if 83 - 83: OoOoOO00 * iii1I1I
  if 75 - 75: i11iIiiIii . o0oOOo0O0Ooo / oO0o . OoO0O00 % Ii1I % Ii1I
def I1i11111i ( ) :
 if 94 - 94: iii1I1I . Ii1I
 if 71 - 71: o0oOOo0O0Ooo * II111iiii / OOooOOo . OoO0O00
 global IIIIiii1IIii
 IIIIiii1IIii = "videoaddon"
 OOOOO0o0OOo . setVisible ( False )
 o0ooO00O0O . reset ( )
 if 73 - 73: O0oo0OO0 * OoO0O00 / OoOoOO00 . II111iiii
 if 87 - 87: OoO0O00 + Oo0Ooo + O0 % OoooooooOO - iIii1I11I1II1
 if 100 - 100: Oo0Ooo + O00oOoOoO0o0O
 if 81 - 81: iIii1I11I1II1 + iIii1I11I1II1
 if 19 - 19: Oo0ooO0oo0oO + i1IIi / Oo0Ooo * II111iiii * O0oo0OO0 / Oo0ooO0oo0oO
 ooO00 = 1
 oOo0oOOOoooOo = 0
 if 23 - 23: O0oo0OO0
 while oOo0oOOOoooOo == 0 :
  if 76 - 76: Ii1I + Ii1I / i1IIi % o0oOOo0O0Ooo . iIii1I11I1II1 . OoOoOO00
  try :
   O00o0O00 = json . loads ( oO00ooooO0o )
   oOo0oOOOoooOo = 1
  except :
   I1Iii11iI = xbmcgui . DialogProgress ( )
   if 75 - 75: I11i . Ii1I / I1ii11iIi11i
   I1Iii11iI . create ( ooO ( "areswizard" ) , 'Getting data...' , ' ' , ' ' )
   ooO00 = ooO00 + 1
   time . sleep ( 3 )
   OoOO0oo0OOOO ( )
   I1Iii11iI . close
   if ooO00 > 3 :
    OOooo = xbmcgui . Dialog ( )
    OOooo . ok ( ooO ( "areswizard" ) , "Failed to get data from server. This may just be temporary, please try again." )
    Iii11iI1I . setFocus ( ii1O0oOOo )
    return ( )
    if 99 - 99: Ii1I
    if 85 - 85: O0oo0OO0 + O0oo0OO0 + OoOoOO00 / Oo0ooO0oo0oO / o0oOOo0O0Ooo . Oo0Ooo
    if 41 - 41: i1IIi % Ii1I . i1IIi * OoooooooOO % Ii1I
 for oO00O in O00o0O00 :
  if oO00O [ 'type' ] == "Video" :
   iiII1i1 = oO00O [ 'url' ]
   OoO = 'http://' + oO00O [ 'icon' ]
   iiI1IIIi = oO00O [ 'descr' ]
   II11IiIi11 = 'http://' + oO00O [ 'icon' ]
   I1Ii111I111 = '[COLOR=darkgray]' + oO00O [ 'author' ] + '[/COLOR]'
   global ii1I1
   ii1I1 = oO00O [ 'rating' ]
   I1I1iiiiiIi1 = '[COLOR=darkgray]' + oO00O [ 'votes' ] + '[/COLOR]'
   i1Io00OOOo = oO00O [ 'votes' ]
   o0o0O00oOo = oO00O [ 'version' ]
   oo00OO0000oO = oO00O [ 'addonpath' ]
   if 21 - 21: iii1I1I
   if 72 - 72: I11i % o0oOOo0O0Ooo . iIii1I11I1II1 - O0oo0OO0 / i11iIiiIii
   oOO0ooo0O ( oO00O [ 'addonpath' ] )
   if 75 - 75: OoooooooOO
   if 24 - 24: oO0o % iii1I1I - II111iiii / Ii1I + O0
   if 37 - 37: O0oo0OO0 - i1IIi / iIii1I11I1II1
   if 53 - 53: Ii1I - iIii1I11I1II1 % I1ii11iIi11i * i11iIiiIii + Oo0ooO0oo0oO
   if 63 - 63: Oo0Ooo * I1IiiI
   if 84 - 84: Oo0Ooo
   if 67 - 67: oO0o / II111iiii . I11i / oO0o
   if I1i111I == " " :
    o0ooO00O0O . addItem ( '[COLOR fuchsia]' + oO00O [ 'name' ] + '[/COLOR]' )
    if 46 - 46: oO0o * Oo0Ooo - I11i / iIii1I11I1II1
   else :
    if I1i111I <> o0o0O00oOo :
     o0ooO00O0O . addItem ( '[COLOR lime]' + oO00O [ 'name' ] + '[/COLOR]' )
     if 100 - 100: i11iIiiIii % oO0o
    else :
     o0ooO00O0O . addItem ( '[COLOR lime]' + oO00O [ 'name' ] + '[/COLOR]' )
     if 62 - 62: OOooOOo * i1IIi - OOooOOo / i11iIiiIii
     if 17 - 17: I1ii11iIi11i + Oo0ooO0oo0oO % Ii1I % OOooOOo
     if 73 - 73: i11iIiiIii
     if 44 - 44: o0oOOo0O0Ooo % Ii1I - OoOoOO00 + OoOoOO00 * O00oOoOoO0o0O + iii1I1I
     if 58 - 58: I1ii11iIi11i / oO0o + i11iIiiIii * o0oOOo0O0Ooo
     if 19 - 19: OoOoOO00
     if 17 - 17: Oo0Ooo
 o0ooO00O0O . setVisible ( True )
 if 76 - 76: II111iiii % I1ii11iIi11i
 if 99 - 99: oO0o - O0oo0OO0
 if 29 - 29: I1IiiI - I11i
 iiiii1I1III1 . setVisible ( True )
 if 42 - 42: Oo0Ooo - O0 . OoOoOO00
 if 4 - 4: O00oOoOoO0o0O
 if 2 - 2: iii1I1I
 if 47 - 47: i1IIi % I11i
 if 17 - 17: OoOoOO00 - iii1I1I % I11i / o0oOOo0O0Ooo / II111iiii
 if 22 - 22: Oo0Ooo + I1ii11iIi11i % i11iIiiIii . OoO0O00 - I11i % I11i
 ii1O0oOOo . controlDown ( o0ooO00O0O )
 oooo00oO0O . controlDown ( o0ooO00O0O )
 iiIIii1iIiIi . controlDown ( o0ooO00O0O )
 iiIiIi1I1 . controlDown ( o0ooO00O0O )
 Oo0OOo . controlDown ( o0ooO00O0O )
 ii11I1IIII11 . controlDown ( o0ooO00O0O )
 iiI1II11I1iI . controlDown ( o0ooO00O0O )
 o0ooO00O0O . controlRight ( O0Oo0 )
 if 21 - 21: I1IiiI . OoO0O00 * O00oOoOoO0o0O % OoooooooOO - Oo0Ooo + Oo0Ooo
 O0Oo0 . controlLeft ( o0ooO00O0O )
 O0Oo0 . controlRight ( iIIIi1IiI11I1 )
 O0Oo0 . controlUp ( ii1O0oOOo )
 if 94 - 94: Oo0ooO0oo0oO
 if 80 - 80: i11iIiiIii - O0 / O0oo0OO0 + OOooOOo % Oo0Ooo
 iIIIi1IiI11I1 . controlLeft ( O0Oo0 )
 iIIIi1IiI11I1 . controlRight ( oooOoO )
 iIIIi1IiI11I1 . controlUp ( ii1O0oOOo )
 if 95 - 95: II111iiii
 if 76 - 76: OoO0O00 % iii1I1I * OoOoOO00 / Oo0ooO0oo0oO / i1IIi
 if 45 - 45: Ii1I . I11i * O0oo0OO0 . i11iIiiIii
 oooOoO . controlLeft ( iIIIi1IiI11I1 )
 oooOoO . controlRight ( I1II )
 oooOoO . controlUp ( ii1O0oOOo )
 if 34 - 34: O0 * o0oOOo0O0Ooo / O00oOoOoO0o0O
 if 75 - 75: O0oo0OO0 - i1IIi - OoO0O00
 I1II . controlLeft ( oooOoO )
 I1II . controlRight ( iIIi1Ii1III )
 I1II . controlUp ( ii1O0oOOo )
 if 25 - 25: iii1I1I . o0oOOo0O0Ooo
 if 62 - 62: I11i + i1IIi . I1ii11iIi11i - I1ii11iIi11i
 iIIi1Ii1III . controlLeft ( I1II )
 iIIi1Ii1III . controlUp ( ii1O0oOOo )
 if 68 - 68: Oo0ooO0oo0oO % OoooooooOO
 if 94 - 94: Oo0Ooo * o0oOOo0O0Ooo
 if 60 - 60: iii1I1I . OOooOOo
 if 39 - 39: O0 - i11iIiiIii - I1IiiI / Oo0Ooo - i11iIiiIii
 if 30 - 30: OoO0O00 / OoOoOO00 + I1ii11iIi11i % O00oOoOoO0o0O - OoO0O00
 I1 = o0ooO00O0O . getListItem ( o0ooO00O0O . getSelectedPosition ( ) ) . getLabel ( )
 if 19 - 19: I1IiiI
 IIiII11 = "COLOR"
 if IIiII11 in I1 :
  oo0O00OOOOO = I1 . find ( ']' )
  OoOII11IiI1 = I1 [ oo0O00OOOOO + 1 : ]
  OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
  if 99 - 99: OOooOOo - OOooOOo
  I1 = OoOII11IiI1 [ : OoOOOO00oOO ]
  if 98 - 98: o0oOOo0O0Ooo + O0 * oO0o - i11iIiiIii
 O00o0O00 = json . loads ( oO00ooooO0o )
 for oO00O in O00o0O00 :
  if oO00O [ 'name' ] == I1 :
   iiII1i1 = oO00O [ 'url' ]
   OoO = 'http://' + oO00O [ 'icon' ]
   iiI1IIIi = oO00O [ 'descr' ]
   II11IiIi11 = 'http://' + oO00O [ 'icon' ]
   I1Ii111I111 = '[COLOR=darkgray]' + oO00O [ 'author' ] + '[/COLOR]'
   if 83 - 83: o0oOOo0O0Ooo
   ii1I1 = oO00O [ 'rating' ]
   I1I1iiiiiIi1 = '[COLOR=darkgray]' + oO00O [ 'votes' ] + '[/COLOR]'
   i1Io00OOOo = oO00O [ 'votes' ]
   oo00OO0000oO = oO00O [ 'addonpath' ]
   o00oo0o = '[COLOR=darkgray]' + oO00O [ 'version' ] + '[/COLOR]'
   o0o0O00oOo = oO00O [ 'version' ]
   IIOOO0O00O0OOOO = '[COLOR=darkgray]This week: ' + oO00O [ 'thismonth' ] + ' / Total: ' + oO00O [ 'downloads' ] + '[/COLOR]'
   Ii1 = oO00O [ 'downloads' ]
   if 23 - 23: o0oOOo0O0Ooo . I11i
   global iiiI1iI1
   iiiI1iI1 . setImage ( II11IiIi11 )
   iiiI1iI1 . setVisible ( True )
   if 67 - 67: iii1I1I
   iiII1iiiiiii . setLabel ( label = '[COLOR=darkgray]' + I1 + '[/COLOR]' )
   iiII1iiiiiii . setVisible ( True )
   if 52 - 52: O00oOoOoO0o0O . OoooooooOO
   iiIiii . setLabel ( label = '[COLOR=darkgray]Created by: [/COLOR]' + I1Ii111I111 )
   iiIiii . setVisible ( True )
   if 34 - 34: o0oOOo0O0Ooo / O00oOoOoO0o0O . OoooooooOO . Oo0Ooo / Oo0ooO0oo0oO + O0
   oOO0ooo0O ( oo00OO0000oO )
   if 38 - 38: I11i
   if I1i111I == " " :
    iiI1ii . setLabel ( label = '[COLOR fuchsia]Not Installed[/COLOR]' )
    III1IiI1i1i . setLabel ( label = Ooo )
    III1IiI1i1i . setVisible ( False )
    o0OOOOOo0 . setVisible ( False )
    if 66 - 66: II111iiii
   elif I1i111I <> o0o0O00oOo :
    iiI1ii . setLabel ( label = '[COLOR=lime]Installed[/COLOR]' )
    III1IiI1i1i . setLabel ( label = Ooo )
    III1IiI1i1i . setVisible ( True )
    o0OOOOOo0 . setVisible ( True )
    if 57 - 57: OoO0O00 / Oo0Ooo % I1IiiI * I1ii11iIi11i
   elif I1i111I == o0o0O00oOo :
    iiI1ii . setLabel ( label = '[COLOR=lime]Installed[/COLOR]' )
    III1IiI1i1i . setLabel ( label = Ooo )
    III1IiI1i1i . setVisible ( True )
    o0OOOOOo0 . setVisible ( True )
    if 68 - 68: iii1I1I - o0oOOo0O0Ooo - OoO0O00 . O0 - i11iIiiIii
   else :
    iiI1ii . setLabel ( label = 'Unknown' )
    III1IiI1i1i . setLabel ( label = Ooo )
    III1IiI1i1i . setVisible ( True )
    o0OOOOOo0 . setVisible ( True )
    if 2 - 2: I1ii11iIi11i * i1IIi
   iiI1ii . setVisible ( True )
   O0OooOO . setVisible ( True )
   if 17 - 17: I1ii11iIi11i * Ii1I % Oo0Ooo * O0oo0OO0 + OoO0O00 . OoooooooOO
   if 60 - 60: Ii1I . II111iiii
   if 36 - 36: O00oOoOoO0o0O . iii1I1I * O0 . i1IIi * O0 * O0oo0OO0
   if 50 - 50: OoooooooOO + o0oOOo0O0Ooo + iIii1I11I1II1 + OOooOOo
   if 90 - 90: Ii1I * I11i % O0oo0OO0 - I1ii11iIi11i * O0oo0OO0 % OoO0O00
   oooOoO . setVisible ( True )
   O0Oo0 . setVisible ( True )
   iIIIi1IiI11I1 . setVisible ( True )
   if 50 - 50: iIii1I11I1II1
   O0Ooo000 . setLabel ( label = I1I1iiiiiIi1 )
   O0Ooo000 . setVisible ( True )
   IIi11iI1Iii . setVisible ( True )
   if 56 - 56: oO0o
   if 55 - 55: iIii1I11I1II1 % oO0o % OOooOOo / O0oo0OO0 * OoooooooOO / Oo0Ooo
   I1IiiIiii1 . setLabel ( label = str ( IIOOO0O00O0OOOO ) )
   I1IiiIiii1 . setVisible ( True )
   i11i . setVisible ( True )
   if 88 - 88: I11i + OoO0O00 . iIii1I11I1II1 . II111iiii
   if 67 - 67: OOooOOo - Oo0ooO0oo0oO % iii1I1I % O00oOoOoO0o0O
   IiIi1i . setVisible ( True )
   if 71 - 71: OoO0O00 - Oo0ooO0oo0oO - I1IiiI + O0
   iI1i1Iiii ( ii1I1 , i1Io00OOOo )
   if 15 - 15: i1IIi
   if 43 - 43: II111iiii + OOooOOo . i11iIiiIii - II111iiii
   if O0ooO0Oo00o == "staff" or O0ooO0Oo00o == "admin" :
    I1II . setVisible ( True )
    if 80 - 80: o0oOOo0O0Ooo . oO0o . O0oo0OO0
    I1II . controlUp ( ii1O0oOOo )
    oooOoO . controlUp ( ii1O0oOOo )
    iIIi1Ii1III . setVisible ( True )
    if 26 - 26: i1IIi - I1IiiI + O00oOoOoO0o0O / OoO0O00 . I1ii11iIi11i
    iIIi1Ii1III . controlUp ( ii1O0oOOo )
    if 82 - 82: O0oo0OO0 % iii1I1I . OoOoOO00 % OoO0O00 + I1ii11iIi11i
    if 69 - 69: I1IiiI * OoOoOO00 - Oo0ooO0oo0oO . O0
 Iii11iI1I . setFocus ( ii1O0oOOo )
 if 15 - 15: oO0o . O00oOoOoO0o0O + O0oo0OO0 - OoooooooOO
 if 85 - 85: II111iiii - Oo0Ooo + oO0o . i11iIiiIii + Oo0Ooo
 if 86 - 86: Oo0ooO0oo0oO . OoO0O00
 if 47 - 47: O00oOoOoO0o0O % I1IiiI
def ii1iiI ( ) :
 if 91 - 91: Ii1I
 if 69 - 69: iii1I1I
 if 96 - 96: Ii1I
 global IIIIiii1IIii
 IIIIiii1IIii = "programaddon"
 OOOOO0o0OOo . setVisible ( False )
 o0ooO00O0O . reset ( )
 if 39 - 39: OoO0O00 - I1IiiI % II111iiii - O00oOoOoO0o0O * I1ii11iIi11i
 if 64 - 64: OOooOOo + Oo0Ooo . OoOoOO00 . OOooOOo + i11iIiiIii
 if 7 - 7: Oo0ooO0oo0oO * I11i / iIii1I11I1II1
 if 15 - 15: OoooooooOO / iii1I1I
 ooO00 = 1
 oOo0oOOOoooOo = 0
 if 40 - 40: o0oOOo0O0Ooo
 while oOo0oOOOoooOo == 0 :
  if 75 - 75: oO0o - OoOoOO00 * Oo0ooO0oo0oO . O0
  try :
   O00o0O00 = json . loads ( oO00ooooO0o )
   oOo0oOOOoooOo = 1
  except :
   I1Iii11iI = xbmcgui . DialogProgress ( )
   if 78 - 78: Oo0Ooo
   I1Iii11iI . create ( ooO ( "areswizard" ) , 'Getting data...' , ' ' , ' ' )
   ooO00 = ooO00 + 1
   time . sleep ( 3 )
   OoOO0oo0OOOO ( )
   I1Iii11iI . close
   if ooO00 > 3 :
    OOooo = xbmcgui . Dialog ( )
    OOooo . ok ( ooO ( "areswizard" ) , "Failed to get data from server. This may just be temporary, please try again." )
    Iii11iI1I . setFocus ( ii1O0oOOo )
    return ( )
    if 74 - 74: O0 / I11i
    if 52 - 52: I1IiiI + oO0o * II111iiii
 for oO00O in O00o0O00 :
  if oO00O [ 'type' ] == "Program" :
   iiII1i1 = oO00O [ 'url' ]
   OoO = 'http://' + oO00O [ 'icon' ]
   iiI1IIIi = oO00O [ 'descr' ]
   II11IiIi11 = 'http://' + oO00O [ 'icon' ]
   I1Ii111I111 = '[COLOR=darkgray]' + oO00O [ 'author' ] + '[/COLOR]'
   global ii1I1
   ii1I1 = oO00O [ 'rating' ]
   I1I1iiiiiIi1 = '[COLOR=darkgray]' + oO00O [ 'votes' ] + '[/COLOR]'
   i1Io00OOOo = oO00O [ 'votes' ]
   o0o0O00oOo = oO00O [ 'version' ]
   if 15 - 15: I11i
   if 72 - 72: O0
   oOO0ooo0O ( oO00O [ 'addonpath' ] )
   if 15 - 15: II111iiii / I11i % II111iiii % Ii1I % i11iIiiIii / O0oo0OO0
   global o0oO0oooOoo
   o0oO0oooOoo = oOo0000ooO ( I1i111I )
   if 93 - 93: OOooOOo / OoooooooOO % iii1I1I
   global I1III1111iIi
   I1III1111iIi = oOo0000ooO ( o0o0O00oOo )
   if 47 - 47: o0oOOo0O0Ooo - I1IiiI % O0 % O0oo0OO0 . O0 . OoOoOO00
   if 95 - 95: o0oOOo0O0Ooo * OOooOOo - iii1I1I * OoooooooOO - Oo0ooO0oo0oO / I1IiiI
   if 47 - 47: OoO0O00 % I1IiiI / OoOoOO00 - O0oo0OO0 / I1IiiI
   if o0oO0oooOoo == " " :
    o0ooO00O0O . addItem ( '[COLOR fuchsia]' + oO00O [ 'name' ] + '[/COLOR]' )
    if 13 - 13: o0oOOo0O0Ooo % Oo0ooO0oo0oO
   else :
    if o0oO0oooOoo <> I1III1111iIi :
     o0ooO00O0O . addItem ( '[COLOR lime]' + oO00O [ 'name' ] + '[/COLOR]' )
     if 15 - 15: iii1I1I * I1IiiI . iIii1I11I1II1 % I1IiiI / O0
    else :
     o0ooO00O0O . addItem ( '[COLOR lime]' + oO00O [ 'name' ] + '[/COLOR]' )
     if 47 - 47: OoooooooOO - i11iIiiIii . I1IiiI / i1IIi
     if 74 - 74: OoooooooOO * Oo0ooO0oo0oO
     if 45 - 45: Oo0Ooo + iIii1I11I1II1 . o0oOOo0O0Ooo
 o0ooO00O0O . setVisible ( True )
 if 50 - 50: o0oOOo0O0Ooo % O0
 if 67 - 67: OoOoOO00
 if 21 - 21: I11i % Oo0Ooo + Oo0Ooo / iIii1I11I1II1 % iIii1I11I1II1
 if 66 - 66: iii1I1I
 if 72 - 72: Oo0ooO0oo0oO / oO0o / iii1I1I . O0oo0OO0 . I1ii11iIi11i + O00oOoOoO0o0O
 if 39 - 39: I1IiiI % O0oo0OO0
 if 22 - 22: OoOoOO00 - OOooOOo % i1IIi + i1IIi
 ii1O0oOOo . controlDown ( o0ooO00O0O )
 oooo00oO0O . controlDown ( o0ooO00O0O )
 iiIIii1iIiIi . controlDown ( o0ooO00O0O )
 iiIiIi1I1 . controlDown ( o0ooO00O0O )
 Oo0OOo . controlDown ( o0ooO00O0O )
 ii11I1IIII11 . controlDown ( o0ooO00O0O )
 iiI1II11I1iI . controlDown ( o0ooO00O0O )
 O0Oo0 . controlUp ( ii1O0oOOo )
 I1II . controlLeft ( o0ooO00O0O )
 iIIi1Ii1III . controlLeft ( o0ooO00O0O )
 if 28 - 28: oO0o + OoOoOO00 * Ii1I . I11i
 if 80 - 80: I1ii11iIi11i / OoOoOO00
 if 74 - 74: I1ii11iIi11i + O0 + o0oOOo0O0Ooo - iii1I1I
 if 48 - 48: Oo0ooO0oo0oO * iIii1I11I1II1 % Oo0Ooo
 if 60 - 60: OoOoOO00 / i1IIi * iIii1I11I1II1
 if 91 - 91: O0oo0OO0 . OoooooooOO / O00oOoOoO0o0O / I1IiiI
 if 56 - 56: II111iiii + iIii1I11I1II1 / O0oo0OO0 / O0oo0OO0 % Oo0Ooo / OoOoOO00
 if 46 - 46: i11iIiiIii + OoO0O00 . Oo0ooO0oo0oO + OoO0O00 % i11iIiiIii
 I1 = o0ooO00O0O . getListItem ( o0ooO00O0O . getSelectedPosition ( ) ) . getLabel ( )
 if 97 - 97: OoooooooOO % O00oOoOoO0o0O * iIii1I11I1II1
 IIiII11 = "COLOR"
 if IIiII11 in I1 :
  oo0O00OOOOO = I1 . find ( ']' )
  OoOII11IiI1 = I1 [ oo0O00OOOOO + 1 : ]
  OoOOOO00oOO = OoOII11IiI1 . find ( '[' )
  if 97 - 97: iIii1I11I1II1 - O0oo0OO0 - o0oOOo0O0Ooo * o0oOOo0O0Ooo * OoOoOO00
  I1 = OoOII11IiI1 [ : OoOOOO00oOO ]
  if 80 - 80: II111iiii . I1ii11iIi11i % i11iIiiIii / Ii1I / oO0o
 O00o0O00 = json . loads ( oO00ooooO0o )
 for oO00O in O00o0O00 :
  if oO00O [ 'name' ] == I1 :
   iiII1i1 = oO00O [ 'url' ]
   OoO = 'http://' + oO00O [ 'icon' ]
   iiI1IIIi = oO00O [ 'descr' ]
   II11IiIi11 = 'http://' + oO00O [ 'icon' ]
   I1Ii111I111 = '[COLOR=darkgray]' + oO00O [ 'author' ] + '[/COLOR]'
   if 100 - 100: Ii1I . OoO0O00 * Oo0ooO0oo0oO
   ii1I1 = oO00O [ 'rating' ]
   I1I1iiiiiIi1 = '[COLOR=darkgray]' + oO00O [ 'votes' ] + '[/COLOR]'
   i1Io00OOOo = oO00O [ 'votes' ]
   oo00OO0000oO = oO00O [ 'addonpath' ]
   o00oo0o = '[COLOR=darkgray]' + oO00O [ 'version' ] + '[/COLOR]'
   o0o0O00oOo = oO00O [ 'version' ]
   IIOOO0O00O0OOOO = '[COLOR=darkgray]This week: ' + oO00O [ 'thismonth' ] + ' / Total: ' + oO00O [ 'downloads' ] + '[/COLOR]'
   Ii1 = oO00O [ 'downloads' ]
   if 4 - 4: i1IIi + OoooooooOO
   if 26 - 26: I1IiiI / II111iiii % I1ii11iIi11i * o0oOOo0O0Ooo . O00oOoOoO0o0O / OoO0O00
   global iiiI1iI1
   iiiI1iI1 . setImage ( II11IiIi11 )
   iiiI1iI1 . setVisible ( True )
   if 10 - 10: i11iIiiIii / i1IIi + O0 - i11iIiiIii % I11i - i1IIi
   iiII1iiiiiii . setLabel ( label = '[COLOR=darkgray]' + I1 + '[/COLOR]' )
   iiII1iiiiiii . setVisible ( True )
   if 38 - 38: O0 - I1IiiI + Oo0Ooo + Oo0ooO0oo0oO
   iiIiii . setLabel ( label = '[COLOR=darkgray]Created by: [/COLOR]' + I1Ii111I111 )
   iiIiii . setVisible ( True )
   if 56 - 56: O0oo0OO0 + oO0o / Ii1I + O0oo0OO0
   oOO0ooo0O ( oo00OO0000oO )
   if 21 - 21: OOooOOo / OoOoOO00 + OoOoOO00 + OoOoOO00 - i1IIi + Ii1I
   if I1i111I == " " :
    iiI1ii . setLabel ( label = '[COLOR fuchsia]Not Installed[/COLOR]' )
    III1IiI1i1i . setLabel ( label = Ooo )
    III1IiI1i1i . setVisible ( False )
    o0OOOOOo0 . setVisible ( False )
    if 43 - 43: O0 % II111iiii
   elif I1i111I <> o0o0O00oOo :
    iiI1ii . setLabel ( label = '[COLOR=lime]Installed[/COLOR]' )
    III1IiI1i1i . setLabel ( label = Ooo )
    III1IiI1i1i . setVisible ( True )
    o0OOOOOo0 . setVisible ( True )
    if 60 - 60: iii1I1I / Oo0ooO0oo0oO - Ii1I - OoooooooOO
   elif I1i111I == o0o0O00oOo :
    iiI1ii . setLabel ( label = '[COLOR=lime]Installed[/COLOR]' )
    III1IiI1i1i . setLabel ( label = Ooo )
    III1IiI1i1i . setVisible ( True )
    o0OOOOOo0 . setVisible ( True )
    if 79 - 79: oO0o / iii1I1I . iIii1I11I1II1 * i11iIiiIii * i1IIi . iIii1I11I1II1
   else :
    iiI1ii . setLabel ( label = 'Unknown' )
    III1IiI1i1i . setLabel ( label = Ooo )
    III1IiI1i1i . setVisible ( True )
    o0OOOOOo0 . setVisible ( True )
    if 31 - 31: OoooooooOO / Oo0ooO0oo0oO / OoooooooOO + Oo0ooO0oo0oO . O0 - O00oOoOoO0o0O
   iiI1ii . setVisible ( True )
   O0OooOO . setVisible ( True )
   if 53 - 53: Oo0Ooo % iii1I1I % iii1I1I
   if 71 - 71: iii1I1I
   if 99 - 99: O0 - OoOoOO00 * O0oo0OO0 - Oo0Ooo
   if 62 - 62: i1IIi + Oo0ooO0oo0oO + Oo0Ooo - i11iIiiIii
   if 19 - 19: I1IiiI / OOooOOo
   oooOoO . setVisible ( True )
   O0Oo0 . setVisible ( True )
   iIIIi1IiI11I1 . setVisible ( True )
   if 6 - 6: I1ii11iIi11i + O00oOoOoO0o0O * oO0o * OoOoOO00
   O0Ooo000 . setLabel ( label = I1I1iiiiiIi1 )
   O0Ooo000 . setVisible ( True )
   IIi11iI1Iii . setVisible ( True )
   if 67 - 67: O0oo0OO0 + OoooooooOO + OoOoOO00 % iIii1I11I1II1 . I1IiiI
   if 68 - 68: Oo0ooO0oo0oO
   I1IiiIiii1 . setLabel ( label = str ( IIOOO0O00O0OOOO ) )
   I1IiiIiii1 . setVisible ( True )
   i11i . setVisible ( True )
   if 68 - 68: I11i % O00oOoOoO0o0O
   if 1 - 1: I1IiiI + OOooOOo - OOooOOo * O0 + o0oOOo0O0Ooo * OOooOOo
   IiIi1i . setVisible ( True )
   if 48 - 48: Oo0ooO0oo0oO - iii1I1I + I1ii11iIi11i * O0oo0OO0 % Oo0ooO0oo0oO * OoO0O00
   iI1i1Iiii ( ii1I1 , i1Io00OOOo )
   if 28 - 28: i1IIi / iii1I1I + OOooOOo
   if 89 - 89: Oo0Ooo + II111iiii * OoO0O00 + Oo0Ooo % II111iiii
   if O0ooO0Oo00o == "staff" or O0ooO0Oo00o == "admin" :
    I1II . setVisible ( True )
    oooOoO . controlDown ( I1II )
    I1II . controlUp ( oooOoO )
    iIIi1Ii1III . setVisible ( True )
    I1II . controlDown ( iIIi1Ii1III )
    iIIi1Ii1III . controlUp ( I1II )
    if 59 - 59: O0 + Oo0Ooo
 Iii11iI1I . setFocus ( ii1O0oOOo )
 if 63 - 63: OoO0O00 / I1IiiI / oO0o . Ii1I / i1IIi
def oOO0ooo0O ( addonpath ) :
 if 50 - 50: I11i . I11i % I1IiiI - i1IIi
 if 63 - 63: OoO0O00 . iii1I1I
 global I1i111I
 global Ooo
 if 28 - 28: Oo0ooO0oo0oO . Oo0Ooo - OoooooooOO - O0oo0OO0 - OoooooooOO - oO0o
 if 25 - 25: I11i / O0oo0OO0 . i11iIiiIii % i1IIi
 if 21 - 21: O0 * O00oOoOoO0o0O . iii1I1I / iii1I1I % i11iIiiIii / I11i
 iIII = translate ( 'special://home/addons' + '/' + addonpath )
 iiI111 = os . path . join ( iIII , 'addon.xml' )
 if 40 - 40: i1IIi . iIii1I11I1II1 * OoOoOO00
 if 83 - 83: iIii1I11I1II1 + Ii1I - Ii1I % II111iiii
 if 82 - 82: O0
 if 18 - 18: iii1I1I . O00oOoOoO0o0O . I1IiiI
 if 40 - 40: O00oOoOoO0o0O / oO0o + OoooooooOO / iii1I1I / II111iiii + i1IIi
 if 33 - 33: I11i + I1ii11iIi11i + i11iIiiIii * I1IiiI % oO0o % OoooooooOO
 try :
  iiII = open ( iiI111 , 'r' )
  ii1IIIIi1 = iiII . read ( )
  if 4 - 4: OoO0O00 . I1IiiI - O0 % iii1I1I . OOooOOo
  if 69 - 69: OoooooooOO
  IiiiiIIi1111iI = ii1IIIIi1 . find ( 'version=' , 20 )
  if 51 - 51: O0oo0OO0
  Ooo0OOo = IiiiiIIi1111iI + 9
  if 3 - 3: i11iIiiIii . i1IIi + o0oOOo0O0Ooo
  oOooo0Oo0o = ii1IIIIi1 [ Ooo0OOo : ]
  if 29 - 29: O00oOoOoO0o0O * OoOoOO00 - oO0o - O00oOoOoO0o0O / I1ii11iIi11i
  oO0o0O0oO = oOooo0Oo0o . find ( '"' )
  if 83 - 83: O00oOoOoO0o0O * OOooOOo - Oo0ooO0oo0oO * i11iIiiIii - Oo0ooO0oo0oO * i11iIiiIii
  global Ooo
  Ooo = '[COLOR=darkgray]' + oOooo0Oo0o [ : oO0o0O0oO ] + '[/COLOR]'
  if 63 - 63: I11i . OoO0O00 + oO0o
  if 6 - 6: iii1I1I . O00oOoOoO0o0O - I1ii11iIi11i - Oo0Ooo - i1IIi
  I1i111I = oOooo0Oo0o [ : oO0o0O0oO ]
 except :
  if 96 - 96: i1IIi . Oo0Ooo * i11iIiiIii / OoO0O00 / oO0o
  I1i111I = " "
  if 12 - 12: iii1I1I % OOooOOo % i1IIi
  if 17 - 17: O00oOoOoO0o0O
  Ooo = " "
  if 63 - 63: Oo0ooO0oo0oO . i11iIiiIii / iIii1I11I1II1
  if 8 - 8: i11iIiiIii . O00oOoOoO0o0O * iIii1I11I1II1 * I1IiiI * Ii1I * i11iIiiIii
  if 24 - 24: I1IiiI * I11i - o0oOOo0O0Ooo / iii1I1I + O00oOoOoO0o0O - I1ii11iIi11i
  if 53 - 53: I11i / I1IiiI - iIii1I11I1II1 - o0oOOo0O0Ooo * OoOoOO00
  if 86 - 86: iIii1I11I1II1 - O0oo0OO0
  if 86 - 86: O0 * O00oOoOoO0o0O + OoOoOO00 + OoO0O00
def OOOooOO00O ( ) :
 if 85 - 85: Oo0Ooo - OOooOOo
 if 34 - 34: o0oOOo0O0Ooo % I11i / iii1I1I * o0oOOo0O0Ooo % iIii1I11I1II1
 O000oOo ( )
 ooOoo000oO . setVisible ( True )
 III1II1i . setVisible ( True )
 iI1i1IiIIIIi . setVisible ( True )
 ooooo0Oo0 . setVisible ( True )
 o0 . setVisible ( True )
 I1IIIi11ii11 . setVisible ( True )
 O0o0oo0oOO0oO . setVisible ( True )
 iIiIII1iI1111 . setVisible ( True )
 OOO000000OOO0 . setVisible ( True )
 oo . setVisible ( True )
 OoOOoooO000 . setVisible ( True )
 OoO0o000oOo . setVisible ( True )
 Oo00OO00o0oO . setVisible ( True )
 OooOooO0O0o0 . setVisible ( True )
 OOO0o0 . setVisible ( True )
 IIIIII111Ii . setVisible ( True )
 Ii1i1i . setVisible ( True )
 iIi1Ii1IIiI . setVisible ( True )
 oOo0Oo0O0O . setVisible ( True )
 OooooOo . setVisible ( True )
 IiIiIIiii1I . setVisible ( True )
 ooo0oo00O00Oo . setVisible ( True )
 iiIIiI11II1 . setVisible ( True )
 IiIi1Ii . setVisible ( True )
 if 26 - 26: i1IIi / OoO0O00 / O00oOoOoO0o0O
 if 60 - 60: oO0o % O0oo0OO0 % Oo0Ooo
 o0OO0O00o . setVisible ( True )
 i1II1iii1i . setVisible ( True )
 III1ii . setVisible ( True )
 i1I . setVisible ( True )
 iiI1I1IIi11i1 . setVisible ( True )
 oo000O0o . setVisible ( True )
 if 34 - 34: o0oOOo0O0Ooo * OOooOOo % Ii1I + I1IiiI
 if 77 - 77: OoOoOO00 + O00oOoOoO0o0O + Oo0Ooo
 if 88 - 88: i1IIi
 if 45 - 45: iii1I1I % I1ii11iIi11i / i11iIiiIii - II111iiii . Oo0Ooo / Oo0ooO0oo0oO
 iI1 . setVisible ( True )
 ooO0o0O0Oo . setVisible ( True )
 IIii1I1I1I . setVisible ( True )
 o00IIIIII1II1I . setVisible ( True )
 ooo00OOOo000O . setVisible ( True )
 IiiIIi . setVisible ( True )
 iII . setVisible ( True )
 OoOOOo0 . setVisible ( True )
 oOoOo0OOOOO . setVisible ( True )
 if 55 - 55: OoO0O00 % O00oOoOoO0o0O
 IIi1II . setVisible ( True )
 OOo0iiIii1IIi . setVisible ( True )
 if 93 - 93: OoO0O00 . I1ii11iIi11i / OOooOOo % OoooooooOO + i1IIi + O0oo0OO0
 I1Ii1 . setVisible ( True )
 i111IIIiI . setVisible ( True )
 IiI . setVisible ( True )
 oOOo00O0OOOo . setVisible ( True )
 if 94 - 94: II111iiii + i11iIiiIii % Ii1I / Oo0ooO0oo0oO * OoOoOO00
 ii1i . setVisible ( True )
 i1IiiiiIi1I . setVisible ( True )
 if 68 - 68: O0 / Oo0Ooo / iIii1I11I1II1
 if 63 - 63: O0oo0OO0 + iii1I1I
 if 6 - 6: I1ii11iIi11i + Ii1I
 if 36 - 36: iii1I1I + iii1I1I * OoO0O00 * I1ii11iIi11i
 if 97 - 97: Oo0ooO0oo0oO + OOooOOo
 if 70 - 70: o0oOOo0O0Ooo + Ii1I - i11iIiiIii + I11i * o0oOOo0O0Ooo . Ii1I
 if 6 - 6: Oo0Ooo + I1IiiI
 if 48 - 48: oO0o . I1ii11iIi11i
 if 59 - 59: O00oOoOoO0o0O - Ii1I
 if 62 - 62: OOooOOo * o0oOOo0O0Ooo + O00oOoOoO0o0O * o0oOOo0O0Ooo * i11iIiiIii - O0
 if 37 - 37: I1ii11iIi11i - Oo0Ooo . i11iIiiIii / i11iIiiIii + oO0o
 oooo00oO0O . controlDown ( iiIIiI11II1 )
 ii1O0oOOo . controlDown ( iiIIiI11II1 )
 iiIIii1iIiIi . controlDown ( IiIi1Ii )
 iiIiIi1I1 . controlDown ( IiIi1Ii )
 Oo0OOo . controlDown ( OooooOo )
 ii11I1IIII11 . controlDown ( IIi1II )
 iiI1II11I1iI . controlDown ( OOo0iiIii1IIi )
 if 19 - 19: i1IIi / i1IIi - OoooooooOO - OOooOOo . i1IIi
 if 57 - 57: OOooOOo / I1ii11iIi11i * oO0o
 if 53 - 53: o0oOOo0O0Ooo * Ii1I
 OooooOo . controlUp ( iiIiIi1I1 )
 iiIIiI11II1 . controlUp ( iiIiIi1I1 )
 IiIi1Ii . controlUp ( iiIiIi1I1 )
 if 42 - 42: I11i + iii1I1I / iIii1I11I1II1
 OooooOo . controlLeft ( IiIi1Ii )
 iiIIiI11II1 . controlRight ( IiIi1Ii )
 IiIi1Ii . controlRight ( OooooOo )
 IiIi1Ii . controlLeft ( iiIIiI11II1 )
 IiIi1Ii . controlDown ( o0OO0O00o )
 if 1 - 1: O0 - II111iiii
 OooooOo . controlRight ( oOOo00O0OOOo )
 IIi1II . controlUp ( ii11I1IIII11 )
 IIi1II . controlRight ( OOo0iiIii1IIi )
 IIi1II . controlDown ( i111IIIiI )
 IIi1II . controlLeft ( OooooOo )
 OOo0iiIii1IIi . controlUp ( iiI1II11I1iI )
 OOo0iiIii1IIi . controlLeft ( IIi1II )
 OOo0iiIii1IIi . controlDown ( I1Ii1 )
 i111IIIiI . controlUp ( IIi1II )
 i111IIIiI . controlDown ( oOOo00O0OOOo )
 i111IIIiI . controlLeft ( OooooOo )
 i111IIIiI . controlRight ( I1Ii1 )
 I1Ii1 . controlUp ( OOo0iiIii1IIi )
 I1Ii1 . controlLeft ( i111IIIiI )
 I1Ii1 . controlDown ( IiI )
 oOOo00O0OOOo . controlUp ( i111IIIiI )
 oOOo00O0OOOo . controlDown ( OooooOo )
 oOOo00O0OOOo . controlLeft ( OooooOo )
 oOOo00O0OOOo . controlRight ( IiI )
 IiI . controlUp ( I1Ii1 )
 IiI . controlDown ( OooooOo )
 IiI . controlLeft ( oOOo00O0OOOo )
 if 75 - 75: II111iiii / OoO0O00 % II111iiii
 if 3 - 3: Ii1I - Ii1I % I1ii11iIi11i
 OooooOo . controlDown ( iI1 )
 if 44 - 44: OOooOOo - o0oOOo0O0Ooo
 o0OO0O00o . controlUp ( iiIIiI11II1 )
 o0OO0O00o . controlDown ( i1I )
 if 69 - 69: O00oOoOoO0o0O + I1ii11iIi11i / o0oOOo0O0Ooo / OOooOOo
 i1II1iii1i . controlRight ( iiI1I1IIi11i1 )
 i1II1iii1i . controlUp ( o0OO0O00o )
 if 31 - 31: oO0o + I1ii11iIi11i * i1IIi % I1IiiI % I1IiiI + iIii1I11I1II1
 iiI1I1IIi11i1 . controlRight ( i1I )
 iiI1I1IIi11i1 . controlUp ( o0OO0O00o )
 iiI1I1IIi11i1 . controlLeft ( i1II1iii1i )
 if 62 - 62: OoooooooOO
 i1I . controlRight ( III1ii )
 i1I . controlUp ( o0OO0O00o )
 i1I . controlLeft ( iiI1I1IIi11i1 )
 if 38 - 38: iii1I1I % iii1I1I * Oo0ooO0oo0oO / OoO0O00 + Oo0ooO0oo0oO
 III1ii . controlUp ( o0OO0O00o )
 III1ii . controlLeft ( i1I )
 if 52 - 52: Oo0ooO0oo0oO . iIii1I11I1II1 / iIii1I11I1II1 % oO0o - oO0o * II111iiii
 iiIIiI11II1 . controlDown ( o0OO0O00o )
 if 57 - 57: O0oo0OO0
 iI1 . controlUp ( OooooOo )
 iI1 . controlDown ( o00IIIIII1II1I )
 if 23 - 23: I1ii11iIi11i + II111iiii
 o00IIIIII1II1I . controlUp ( iI1 )
 o00IIIIII1II1I . controlLeft ( IIii1I1I1I )
 o00IIIIII1II1I . controlRight ( ooo00OOOo000O )
 o00IIIIII1II1I . controlDown ( OoOOOo0 )
 if 99 - 99: o0oOOo0O0Ooo . I1IiiI + o0oOOo0O0Ooo * o0oOOo0O0Ooo / O0
 if 27 - 27: OOooOOo - O0oo0OO0
 IIii1I1I1I . controlUp ( iI1 )
 IIii1I1I1I . controlRight ( o00IIIIII1II1I )
 IIii1I1I1I . controlDown ( iII )
 if 33 - 33: OOooOOo - Ii1I - iii1I1I + I1ii11iIi11i - i11iIiiIii
 ooo00OOOo000O . controlUp ( iI1 )
 ooo00OOOo000O . controlLeft ( o00IIIIII1II1I )
 ooo00OOOo000O . controlDown ( oOoOo0OOOOO )
 if 89 - 89: iIii1I11I1II1 * I11i + OOooOOo
 iII . controlUp ( IIii1I1I1I )
 iII . controlRight ( OoOOOo0 )
 if 27 - 27: i1IIi - OoO0O00
 OoOOOo0 . controlUp ( o00IIIIII1II1I )
 OoOOOo0 . controlLeft ( iII )
 OoOOOo0 . controlRight ( oOoOo0OOOOO )
 if 23 - 23: iIii1I11I1II1 + Oo0Ooo * O00oOoOoO0o0O
 oOoOo0OOOOO . controlUp ( ooo00OOOo000O )
 oOoOo0OOOOO . controlLeft ( OoOOOo0 )
 if 80 - 80: OoooooooOO . Oo0ooO0oo0oO
 if 52 - 52: O0 + O0 + I1IiiI
 if 64 - 64: Oo0ooO0oo0oO
 if 35 - 35: I1IiiI . iIii1I11I1II1 + O00oOoOoO0o0O / i11iIiiIii - II111iiii . OoooooooOO
 if 19 - 19: O00oOoOoO0o0O - OoOoOO00
 if 43 - 43: O00oOoOoO0o0O / OOooOOo % II111iiii . o0oOOo0O0Ooo / i11iIiiIii
 if 5 - 5: oO0o % iii1I1I . Oo0Ooo . O0 . OoOoOO00 / iii1I1I
 if 78 - 78: Ii1I - I1ii11iIi11i + iIii1I11I1II1 + OoooooooOO . OoO0O00 - Oo0ooO0oo0oO
 if 81 - 81: o0oOOo0O0Ooo * OoooooooOO
 if 32 - 32: OoOoOO00 - I11i * i11iIiiIii . I1ii11iIi11i . O00oOoOoO0o0O . iIii1I11I1II1
 try :
  if 41 - 41: iii1I1I / OoOoOO00 / OoO0O00 / Oo0ooO0oo0oO
  with open ( iii , 'r' , 0 ) as o0o0Ooo0 :
   OoO000O = json . load ( o0o0Ooo0 )
   if 16 - 16: iIii1I11I1II1 . II111iiii
   if 80 - 80: Oo0Ooo + O00oOoOoO0o0O
  i1IiiiiIi1I . setLabel ( '[COLOR=darkgray]' + ooO ( "totalfilesdeleted" ) + '[/COLOR]' )
  iIIoOo = OoO000O [ 'totaltempfiles' ]
  iiioO = i1IiiiiIi1I . getLabel ( )
  i1IiiiiIi1I . setLabel ( iiioO + '[COLOR=darkgray]' + iIIoOo + '[/COLOR]' )
  if 32 - 32: O00oOoOoO0o0O
  if 36 - 36: OOooOOo * OoOoOO00 + i11iIiiIii + O0 + O0
  ii1i . setLabel ( '[COLOR=darkgray]' + ooO ( "totalspacegained" ) + '[/COLOR]' )
  ooOo0OoOooo00 = OoO000O [ 'totalspacegained' ]
  II1 = int ( round ( float ( ooOo0OoOooo00 ) ) )
  iiioO = ii1i . getLabel ( )
  ii1i . setLabel ( iiioO + '[COLOR=darkgray]' + str ( II1 ) + ' MB[/COLOR]' )
  if 60 - 60: Oo0Ooo * I1ii11iIi11i % OOooOOo / oO0o / Oo0Ooo
  if 53 - 53: Oo0ooO0oo0oO % OoO0O00 * O0 + II111iiii + iIii1I11I1II1
  if 11 - 11: II111iiii . II111iiii + Ii1I % oO0o
  if 69 - 69: iIii1I11I1II1 - O0 . O0oo0OO0 % I1IiiI / o0oOOo0O0Ooo
  ooOOo0ooo = OoO000O [ 'automaintenance' ]
  if 71 - 71: OoOoOO00 / i11iIiiIii * iii1I1I
  if 90 - 90: Ii1I
  if 27 - 27: oO0o + Ii1I . i11iIiiIii
  if ooOOo0ooo == "daily" :
   iiI1I1IIi11i1 . setSelected ( True )
   o0OO0O00o . setSelected ( True )
   oo000O0o . setVisible ( True )
   o0OO0O00o . setEnabled ( True )
   i1II1iii1i . setEnabled ( True )
   III1ii . setEnabled ( True )
   i1I . setEnabled ( True )
   iiI1I1IIi11i1 . setEnabled ( True )
   oo000O0o . setEnabled ( True )
   if 97 - 97: iii1I1I . I1IiiI
  if ooOOo0ooo == "weekly" :
   i1I . setSelected ( True )
   o0OO0O00o . setSelected ( True )
   o0OO0O00o . setEnabled ( True )
   i1II1iii1i . setEnabled ( True )
   III1ii . setEnabled ( True )
   i1I . setEnabled ( True )
   iiI1I1IIi11i1 . setEnabled ( True )
   oo000O0o . setEnabled ( True )
   if 71 - 71: OOooOOo - O00oOoOoO0o0O % oO0o * I1ii11iIi11i
  if ooOOo0ooo == "montly" :
   III1ii . setSelected ( True )
   o0OO0O00o . setSelected ( True )
   o0OO0O00o . setEnabled ( True )
   i1II1iii1i . setEnabled ( True )
   III1ii . setEnabled ( True )
   i1I . setEnabled ( True )
   iiI1I1IIi11i1 . setEnabled ( True )
   oo000O0o . setEnabled ( True )
   if 48 - 48: o0oOOo0O0Ooo * iIii1I11I1II1 + Oo0Ooo
  if ooOOo0ooo == "everytime" :
   i1II1iii1i . setSelected ( True )
   o0OO0O00o . setSelected ( True )
   o0OO0O00o . setEnabled ( True )
   i1II1iii1i . setEnabled ( True )
   III1ii . setEnabled ( True )
   i1I . setEnabled ( True )
   iiI1I1IIi11i1 . setEnabled ( True )
   oo000O0o . setEnabled ( True )
   if 45 - 45: oO0o
   if 50 - 50: Ii1I * Ii1I / O0 . Oo0Ooo + iii1I1I
  I11 = OoO000O [ 'fullautofreq' ]
  if 9 - 9: OoooooooOO % O0 % I1ii11iIi11i
  if I11 == "week" :
   if 100 - 100: i11iIiiIii - iii1I1I - I11i
   IIii1I1I1I . setEnabled ( True )
   iI1 . setSelected ( True )
   OoOOOo0 . setEnabled ( True )
   o00IIIIII1II1I . setEnabled ( True )
   oOoOo0OOOOO . setEnabled ( True )
   ooo00OOOo000O . setEnabled ( True )
   iII . setEnabled ( True )
   iII . setSelected ( True )
   ooO0o0O0Oo . setEnabled ( True )
   IiiIIi . setEnabled ( True )
   if 5 - 5: oO0o % O00oOoOoO0o0O * iii1I1I
   if 98 - 98: iii1I1I / OOooOOo + O00oOoOoO0o0O
  if I11 == "month" :
   if 100 - 100: II111iiii . i11iIiiIii / oO0o - OOooOOo + OoOoOO00 % I1ii11iIi11i
   IIii1I1I1I . setEnabled ( True )
   iI1 . setSelected ( True )
   OoOOOo0 . setEnabled ( True )
   o00IIIIII1II1I . setEnabled ( True )
   oOoOo0OOOOO . setEnabled ( True )
   ooo00OOOo000O . setEnabled ( True )
   iII . setEnabled ( True )
   OoOOOo0 . setSelected ( True )
   ooO0o0O0Oo . setEnabled ( True )
   IiiIIi . setEnabled ( True )
   if 82 - 82: Oo0ooO0oo0oO % OOooOOo % Ii1I
   if 82 - 82: I1ii11iIi11i
  if I11 == "quarter" :
   if 52 - 52: i11iIiiIii % O0oo0OO0 - iii1I1I / O0 - I1ii11iIi11i / iii1I1I
   IIii1I1I1I . setEnabled ( True )
   iI1 . setSelected ( True )
   OoOOOo0 . setEnabled ( True )
   o00IIIIII1II1I . setEnabled ( True )
   oOoOo0OOOOO . setEnabled ( True )
   ooo00OOOo000O . setEnabled ( True )
   iII . setEnabled ( True )
   oOoOo0OOOOO . setSelected ( True )
   ooO0o0O0Oo . setEnabled ( True )
   IiiIIi . setEnabled ( True )
   if 7 - 7: OoooooooOO . OOooOOo . OOooOOo
   if 53 - 53: OOooOOo * OoOoOO00 % iii1I1I
   if 86 - 86: OOooOOo . OOooOOo + O00oOoOoO0o0O - I1ii11iIi11i . OoO0O00
   if 66 - 66: I1IiiI * OoOoOO00 . I1IiiI / Oo0Ooo - Ii1I
  IIIi1i = OoO000O [ 'fullautothumb' ]
  if 69 - 69: iIii1I11I1II1 % iii1I1I + Oo0ooO0oo0oO * i1IIi + iii1I1I * O0oo0OO0
  if IIIi1i == "yes" :
   ooo00OOOo000O . setSelected ( True )
   if 67 - 67: Ii1I % Oo0Ooo - Oo0Ooo . I11i + O00oOoOoO0o0O
   if 73 - 73: Oo0Ooo + iIii1I11I1II1 . iIii1I11I1II1
  Ii = OoO000O [ 'fullautocache' ]
  if 73 - 73: Oo0ooO0oo0oO + OoOoOO00
  if Ii == "yes" :
   IIii1I1I1I . setSelected ( True )
   if 61 - 61: O0oo0OO0 * O0oo0OO0 % OOooOOo
   if 31 - 31: oO0o + Ii1I - iIii1I11I1II1 / i11iIiiIii
  iIII11Ii = OoO000O [ 'fullautopackages' ]
  if 9 - 9: O00oOoOoO0o0O % OoO0O00
  if iIII11Ii == "yes" :
   o00IIIIII1II1I . setSelected ( True )
   if 58 - 58: iii1I1I
   if 12 - 12: OoO0O00
   if 59 - 59: OOooOOo + i1IIi
   if 8 - 8: i1IIi + Oo0Ooo / Ii1I . OoOoOO00 % i1IIi
   if 33 - 33: OoooooooOO + iIii1I11I1II1
  OOoOi1IiiI = OoO000O [ 'cacheinclude_genesis' ]
  if 68 - 68: II111iiii * iIii1I11I1II1 - OoO0O00 - I1ii11iIi11i * II111iiii
  if OOoOi1IiiI == "yes" :
   IIi1II . setSelected ( True )
   if 37 - 37: OoooooooOO - I1ii11iIi11i . O0
  O0OOO0 = OoO000O [ 'cacheinclude_navix' ]
  if 65 - 65: O0oo0OO0 + I1ii11iIi11i % I11i / iii1I1I
  if O0OOO0 == "yes" :
   OOo0iiIii1IIi . setSelected ( True )
   if 38 - 38: I1IiiI - OOooOOo * OoOoOO00 + O0 * I1IiiI
  o0OIi = OoO000O [ 'cacheinclude_youtube' ]
  if 8 - 8: I1IiiI
  if o0OIi == "yes" :
   i111IIIiI . setSelected ( True )
   if 31 - 31: o0oOOo0O0Ooo + OOooOOo
   if 7 - 7: O00oOoOoO0o0O + iIii1I11I1II1
  IIi1iiI = OoO000O [ 'cacheinclude_ivue' ]
  if 97 - 97: oO0o
  if IIi1iiI == "yes" :
   I1Ii1 . setSelected ( True )
   if 52 - 52: I1ii11iIi11i / OoOoOO00 * OoO0O00 + II111iiii * OoooooooOO
   if 11 - 11: Ii1I * iii1I1I * I1IiiI - Oo0Ooo
  o0ooOO00OO0o0O = OoO000O [ 'cacheinclude_salts' ]
  if 76 - 76: oO0o * II111iiii
  if o0ooOO00OO0o0O == "yes" :
   oOOo00O0OOOo . setSelected ( True )
   if 81 - 81: I11i
  III1IiiIiiI1i = OoO000O [ 'cacheinclude_pulsar' ]
  if 2 - 2: OoOoOO00
  if III1IiiIiiI1i == "yes" :
   IiI . setSelected ( True )
   if 75 - 75: I1IiiI - OoooooooOO * O0oo0OO0
   if 1 - 1: o0oOOo0O0Ooo % oO0o * O0oo0OO0 - i1IIi - iii1I1I . oO0o
 except :
  pass
  if 25 - 25: i1IIi * o0oOOo0O0Ooo / oO0o
  if 11 - 11: O00oOoOoO0o0O + II111iiii
  if 37 - 37: O0
  if 98 - 98: O00oOoOoO0o0O * OoooooooOO . iii1I1I
  if 34 - 34: OoooooooOO + O0oo0OO0
  if 97 - 97: II111iiii + I11i + OOooOOo / i11iIiiIii - iii1I1I
  if 9 - 9: i1IIi - O0oo0OO0 + O0oo0OO0
  if 81 - 81: II111iiii % I11i % O0 . O0oo0OO0 % Oo0ooO0oo0oO - O0
  if 58 - 58: OoooooooOO . II111iiii . O0 % O0oo0OO0 / OoooooooOO
  if 64 - 64: Oo0Ooo + oO0o . OoO0O00
 Oo0O0OO0OoO0 ( Iii1I1I11iiI1 )
 o0oo0OO0oO = ii1I1IIii11
 O0OOO00OO0 = O0o0oO / 1024 / 1024
 Ii1I11i1I1 ( )
 Oo0O0OO0OoO0 ( ii1iII1II )
 Ii11IiiI1 = ii1I1IIii11
 iiiOOOoo0Oo00 = O0o0oO / 1024 / 1024
 iiiOOOoo0Oo00 = int ( iiiOOOoo0Oo00 )
 if 83 - 83: OoOoOO00
 if iiiOOOoo0Oo00 == 0 and Ii11IiiI1 > 0 :
  iiiOOOoo0Oo00 = "<1"
  if 90 - 90: oO0o
  if 51 - 51: oO0o / o0oOOo0O0Ooo
 if O0OOO00OO0 == 0 and o0oo0OO0oO > 0 :
  O0OOO00OO0 = "<1"
  if 97 - 97: II111iiii + o0oOOo0O0Ooo . OoOoOO00
 IIIIII111Ii . setLabel ( '[COLOR=lightgray]' + str ( IIIIiIiIi1 ) + '[/COLOR]' )
 Ii1i1i . setLabel ( '[COLOR=lightgray]' + str ( I11iiiiI1i ) + ' MB[/COLOR]' )
 O0o0oo0oOO0oO . setLabel ( '[COLOR=lightgray]' + str ( Ii11IiiI1 ) + '[/COLOR]' )
 iIiIII1iI1111 . setLabel ( '[COLOR=lightgray]' + str ( iiiOOOoo0Oo00 ) + ' MB[/COLOR]' )
 OoO0o000oOo . setLabel ( '[COLOR=lightgray]' + str ( o0oo0OO0oO ) + '[/COLOR]' )
 Oo00OO00o0oO . setLabel ( '[COLOR=lightgray]' + str ( O0OOO00OO0 ) + ' MB[/COLOR]' )
 if 94 - 94: Oo0Ooo / I1IiiI * iIii1I11I1II1 - OoO0O00
 if 96 - 96: Oo0ooO0oo0oO - OoooooooOO * iIii1I11I1II1 . O00oOoOoO0o0O - O0
 if 7 - 7: iIii1I11I1II1 . OoO0O00
 if iiiOOOoo0Oo00 >= 180 :
  Ii1I1I111iI . setVisible ( True )
  Oooo0oo000O0 = "Clear packages"
  if 48 - 48: i1IIi
 if iiiOOOoo0Oo00 >= 70 and iiiOOOoo0Oo00 < 180 :
  OOOOOOoo0oO . setVisible ( True )
  if 79 - 79: iIii1I11I1II1
 if iiiOOOoo0Oo00 < 70 :
  IiIiIIiii1I . setVisible ( True )
  if 25 - 25: II111iiii % OoO0O00 / iii1I1I % i11iIiiIii + oO0o % I11i
 if iiiOOOoo0Oo00 == "<1" :
  Ii1I1I111iI . setVisible ( False )
  IiIiIIiii1I . setVisible ( True )
  if 66 - 66: I1ii11iIi11i - oO0o - OoO0O00 * Oo0Ooo
  if 47 - 47: o0oOOo0O0Ooo
  if 88 - 88: iIii1I11I1II1 + OOooOOo . II111iiii / i11iIiiIii % OOooOOo % O00oOoOoO0o0O
  if 38 - 38: OOooOOo
  if 82 - 82: OoOoOO00 % II111iiii * Oo0ooO0oo0oO + OoooooooOO + I1IiiI
 if O0OOO00OO0 >= 2000 :
  iI1I1I1i1i . setVisible ( True )
  Oooo0oo000O0 = "Clear thumbnails"
  if 89 - 89: Oo0ooO0oo0oO % i1IIi - OoooooooOO
 if O0OOO00OO0 >= 1000 and O0OOO00OO0 < 2000 :
  I1i11I . setVisible ( True )
  if 100 - 100: Ii1I % I1ii11iIi11i % I1IiiI
 if O0OOO00OO0 < 1000 :
  ooo0oo00O00Oo . setVisible ( True )
  if 19 - 19: I1ii11iIi11i . o0oOOo0O0Ooo % Oo0Ooo / OoooooooOO
 if O0OOO00OO0 == "<1" :
  iI1I1I1i1i . setVisible ( False )
  ooo0oo00O00Oo . setVisible ( True )
  if 68 - 68: iii1I1I
  if 55 - 55: O00oOoOoO0o0O . i11iIiiIii % OoooooooOO
  if 88 - 88: Ii1I * o0oOOo0O0Ooo / oO0o
  if 58 - 58: O0
  if 43 - 43: O0 / i1IIi / I11i % I1IiiI
 if I11iiiiI1i >= 500 :
  ooo00Oo00O0 . setVisible ( True )
  Oooo0oo000O0 = "Clear cache\\temp"
  if 82 - 82: i11iIiiIii * i11iIiiIii + O0oo0OO0 - I1ii11iIi11i * oO0o - Ii1I
 if I11iiiiI1i >= 200 and I11iiiiI1i < 500 :
  i1I1iIoOOoO . setVisible ( True )
  if 40 - 40: o0oOOo0O0Ooo + OoO0O00 % i1IIi % iii1I1I * O0oo0OO0
 if I11iiiiI1i < 200 :
  oOo0Oo0O0O . setVisible ( True )
  if 36 - 36: I1ii11iIi11i % II111iiii % O0oo0OO0 / I1ii11iIi11i
 if I11iiiiI1i == "<1" :
  oOo0Oo0O0O . setVisible ( True )
  ooo00Oo00O0 . setVisible ( False )
  if 34 - 34: OoooooooOO * i11iIiiIii
  if 33 - 33: II111iiii
  if 59 - 59: iIii1I11I1II1 % I11i
  if 93 - 93: I1ii11iIi11i
  if 50 - 50: Oo0ooO0oo0oO % OoO0O00 % OoO0O00
  if 36 - 36: I1IiiI * O0 . O00oOoOoO0o0O / O0oo0OO0
  if 15 - 15: I11i + iii1I1I
  if 79 - 79: i11iIiiIii * O00oOoOoO0o0O % iii1I1I
  if 18 - 18: iIii1I11I1II1 - O0 . o0oOOo0O0Ooo % oO0o
  if 73 - 73: O00oOoOoO0o0O + I11i % I1IiiI * iii1I1I . O0
def II1I1ii1i1iiI ( ) :
 if 41 - 41: OoO0O00 . Ii1I % II111iiii - i11iIiiIii % o0oOOo0O0Ooo % o0oOOo0O0Ooo
 O000oOo ( )
 if 2 - 2: Oo0ooO0oo0oO / OOooOOo % iIii1I11I1II1 * I1IiiI - I11i
 if 3 - 3: i11iIiiIii
 i1111iI1 . reset ( )
 i1111iI1 . addItem ( '[COLOR=goldenrod]Advanced Settings Wizard[/COLOR]' )
 if 52 - 52: oO0o . OoO0O00 + OoooooooOO % II111iiii % OoOoOO00 - O0oo0OO0
 i1111iI1 . addItem ( '[COLOR=goldenrod]IceFilms: Blocked URL fix[/COLOR]' )
 i1111iI1 . addItem ( '[COLOR=goldenrod]Primewire\\1Channel: Blocked URL fix[/COLOR]' )
 if 2 - 2: II111iiii * OOooOOo - I11i / I1IiiI
 if 13 - 13: Oo0Ooo
 i1111iI1 . setVisible ( True )
 if 88 - 88: Oo0Ooo / oO0o . iIii1I11I1II1 . I1IiiI + I11i
 if 58 - 58: I11i
 if 76 - 76: iIii1I11I1II1 % Oo0ooO0oo0oO / O00oOoOoO0o0O + iIii1I11I1II1 % Oo0Ooo . Ii1I
 iiIiIi1I1 . controlDown ( i1111iI1 )
 i1111iI1 . controlUp ( Oo0OOo )
 ii1O0oOOo . controlDown ( i1111iI1 )
 oooo00oO0O . controlDown ( i1111iI1 )
 iiIIii1iIiIi . controlDown ( i1111iI1 )
 if 72 - 72: Ii1I - I1ii11iIi11i * O0oo0OO0 % OoOoOO00 % OoOoOO00
 Oo0OOo . controlDown ( i1111iI1 )
 ii11I1IIII11 . controlDown ( i1111iI1 )
 iiI1II11I1iI . controlDown ( i1111iI1 )
 if 44 - 44: o0oOOo0O0Ooo . O0 + Ii1I
 if 61 - 61: Oo0ooO0oo0oO
 if 23 - 23: OoooooooOO - OoOoOO00 / i11iIiiIii
 if 37 - 37: I11i / o0oOOo0O0Ooo + oO0o % Ii1I
 if 83 - 83: I1ii11iIi11i . OOooOOo
 if 50 - 50: Ii1I - i11iIiiIii % Ii1I - OoOoOO00 + I1IiiI / OoooooooOO
 if 57 - 57: I1IiiI - I11i - O0oo0OO0 . oO0o % Ii1I
 if 59 - 59: I1IiiI % OoO0O00 . o0oOOo0O0Ooo
def O0OO ( ) :
 if 46 - 46: OOooOOo / OOooOOo + I1IiiI + i1IIi
 O000oOo ( )
 if 32 - 32: i11iIiiIii % Ii1I
 if 92 - 92: OoOoOO00 % o0oOOo0O0Ooo % Oo0ooO0oo0oO - O00oOoOoO0o0O - oO0o
 O00ooooo00 . reset ( )
 O00ooooo00 . addItem ( '[COLOR=goldenrod]System Information[/COLOR]' )
 O00ooooo00 . addItem ( '[COLOR=goldenrod]Upload Kodi Log[/COLOR]' )
 O00ooooo00 . addItem ( '[COLOR=goldenrod]Internet Speed Test[/COLOR]' )
 O00ooooo00 . addItem ( '[COLOR=goldenrod]Erase all Data/Fresh Start[/COLOR]' )
 O00ooooo00 . addItem ( '[COLOR=goldenrod]Force Close Kodi[/COLOR]' )
 if 90 - 90: Oo0ooO0oo0oO
 O00ooooo00 . addItem ( '[COLOR=goldenrod]Suggestions welcome..[/COLOR]' )
 if 11 - 11: OoOoOO00 % OOooOOo . i11iIiiIii * I1IiiI % O0 % iIii1I11I1II1
 if 18 - 18: Oo0Ooo % OOooOOo + O00oOoOoO0o0O
 O00ooooo00 . setVisible ( True )
 if 28 - 28: OOooOOo . OoO0O00 / o0oOOo0O0Ooo + II111iiii / iIii1I11I1II1 * II111iiii
 if 83 - 83: II111iiii . OoOoOO00 - i11iIiiIii . OoOoOO00 . i1IIi % OoooooooOO
 if 47 - 47: II111iiii
 iiIiIi1I1 . controlDown ( O00ooooo00 )
 O00ooooo00 . controlUp ( ii11I1IIII11 )
 ii1O0oOOo . controlDown ( O00ooooo00 )
 oooo00oO0O . controlDown ( O00ooooo00 )
 iiIIii1iIiIi . controlDown ( O00ooooo00 )
 if 30 - 30: i1IIi . Oo0Ooo / o0oOOo0O0Ooo + O00oOoOoO0o0O * OOooOOo
 Oo0OOo . controlDown ( O00ooooo00 )
 ii11I1IIII11 . controlDown ( O00ooooo00 )
 iiI1II11I1iI . controlDown ( O00ooooo00 )
 if 26 - 26: Ii1I % O0 - i1IIi % iii1I1I * OoO0O00
 if 60 - 60: I1ii11iIi11i * iii1I1I / OoOoOO00 . o0oOOo0O0Ooo / iIii1I11I1II1
 if 94 - 94: OoO0O00 . Oo0ooO0oo0oO
 if 25 - 25: O0oo0OO0 % OOooOOo
 if 82 - 82: Ii1I
 if 17 - 17: iii1I1I . i1IIi . i1IIi
 if 76 - 76: OoooooooOO % O00oOoOoO0o0O
 if 81 - 81: iii1I1I . OOooOOo * i1IIi
 if 14 - 14: oO0o
 if 16 - 16: iii1I1I
 if 26 - 26: iii1I1I . oO0o * i11iIiiIii . iIii1I11I1II1
 if 74 - 74: Ii1I / iIii1I11I1II1 + OOooOOo . II111iiii
 if 65 - 65: OOooOOo * I11i * Oo0Ooo
 if 21 - 21: Ii1I . iIii1I11I1II1
 if 84 - 84: OOooOOo
 if 67 - 67: I1IiiI % OoO0O00 % o0oOOo0O0Ooo % O00oOoOoO0o0O
 if 33 - 33: Oo0ooO0oo0oO % I1IiiI
 if 98 - 98: oO0o . o0oOOo0O0Ooo + II111iiii
 if 62 - 62: Oo0ooO0oo0oO - OoooooooOO / I1ii11iIi11i / iii1I1I - o0oOOo0O0Ooo
 if 70 - 70: oO0o % OoooooooOO * I1IiiI - OoOoOO00 * OoOoOO00 . OOooOOo
def I11I111Ii1II ( ) :
 if 29 - 29: II111iiii - i11iIiiIii - iii1I1I + i11iIiiIii . O00oOoOoO0o0O - O0oo0OO0
 global iiII1i1
 global oo00OO0000oO
 global I1iiii1I
 global Oo0oo0O0o00O
 global I1
 global o00O0
 global IIIIiii1IIii
 if 40 - 40: I11i . iii1I1I + OoOoOO00 % I1ii11iIi11i
 if 79 - 79: O0oo0OO0 - OOooOOo * I1ii11iIi11i + i11iIiiIii . iii1I1I
 if 3 - 3: Oo0Ooo
 if IIIIiii1IIii == "blackbox" :
  if 81 - 81: OoO0O00 / OoO0O00 . I1ii11iIi11i
  IIIi1iI1 ( )
  if 100 - 100: iIii1I11I1II1 % II111iiii - I1ii11iIi11i . iIii1I11I1II1 + O00oOoOoO0o0O % iIii1I11I1II1
 else :
  if 48 - 48: Ii1I % i1IIi
  I11I = O0O00 ( )
  if 25 - 25: o0oOOo0O0Ooo - O0oo0OO0 * I1ii11iIi11i + OoooooooOO
  if 93 - 93: OoOoOO00 % I1ii11iIi11i * I11i
  if 34 - 34: I11i - oO0o + I11i * OoooooooOO * I11i
def IIi1III11I1Ii ( name , url , deviceid , mac , username , agent , id ) :
 if 73 - 73: OOooOOo * iii1I1I * OoO0O00
 global ooo00Ooo
 global ooOooo0O00
 global wizardname
 global IIi
 global oo0
 if 11 - 11: O0oo0OO0 * II111iiii
 try :
  wizardname
 except NameError :
  wizardname = "0"
  if 3 - 3: Oo0Ooo * OOooOOo
  if 13 - 13: O0oo0OO0 + i11iIiiIii / OOooOOo
  if 98 - 98: I1IiiI * Oo0Ooo
 try :
  wizardname
 except NameError :
  wizardname = "0"
  if 9 - 9: O0 / i11iIiiIii . iIii1I11I1II1 . O00oOoOoO0o0O
  if 14 - 14: OoOoOO00 . OOooOOo - Oo0Ooo + O0oo0OO0 % Oo0ooO0oo0oO
 if os . path . exists ( OOoO0 ) :
  os . remove ( OOoO0 )
  if 95 - 95: OoO0O00 * II111iiii + i1IIi
 print '---------------------'
 print '--> Build Install <--'
 print '---------------------'
 print '--> Build Name: ' + name
 if o000oo == "true" :
  print '--> Build URL: ' + url
  print '---------------------'
  if 22 - 22: Ii1I / Oo0ooO0oo0oO % I11i + OoO0O00 . Oo0ooO0oo0oO
  if 61 - 61: O0 - iIii1I11I1II1 * Oo0Ooo . Ii1I + O0
  if 20 - 20: Oo0ooO0oo0oO / Oo0ooO0oo0oO - Ii1I - Oo0ooO0oo0oO
 ooo00Ooo = agent
 if 93 - 93: O0 * OoOoOO00 * iIii1I11I1II1
 if 3 - 3: I1ii11iIi11i - O0
 if 46 - 46: iii1I1I
 if 99 - 99: oO0o
 if 85 - 85: O0oo0OO0 * iIii1I11I1II1 . OoOoOO00
 if 20 - 20: I11i * O0 - OoooooooOO * OOooOOo % oO0o * iii1I1I
 if 70 - 70: I11i + O0 . i11iIiiIii . OOooOOo
 if not os . path . exists ( Ii1I1Ii ) :
  os . makedirs ( Ii1I1Ii )
  if 48 - 48: iIii1I11I1II1 * Ii1I - OoooooooOO / oO0o - OoO0O00 / i11iIiiIii
 iI1I1 = os . path . join ( Ii1I1Ii , 'build.zip' )
 if 95 - 95: Oo0Ooo
 if 79 - 79: OoooooooOO
 print '-->'
 print '--> attempting to download build.. '
 print '-->'
 IiIiI1Ii = OooIII1i1I ( url , iI1I1 , name )
 if 100 - 100: O0 - II111iiii + OoO0O00 % O0oo0OO0
 if 40 - 40: iIii1I11I1II1 % OoO0O00 / o0oOOo0O0Ooo + iIii1I11I1II1
 if IiIiI1Ii == "cancelled" :
  return ( 'cancelled' )
  if 77 - 77: I1IiiI
 if IiIiI1Ii <> 'true' :
  return ( 'downloadfalse' )
  if 97 - 97: Ii1I - I1IiiI
  if 5 - 5: OoO0O00 / O00oOoOoO0o0O . OoooooooOO / O00oOoOoO0o0O / O0oo0OO0 * iIii1I11I1II1
 if not zipfile . is_zipfile ( iI1I1 ) :
  if 79 - 79: O00oOoOoO0o0O % Oo0ooO0oo0oO + O00oOoOoO0o0O + O00oOoOoO0o0O - o0oOOo0O0Ooo + iii1I1I
  return ( 'notvalidzip' )
  if 94 - 94: o0oOOo0O0Ooo * oO0o + O0 * iii1I1I + oO0o + Oo0ooO0oo0oO
  if 29 - 29: OoO0O00
  if 24 - 24: O00oOoOoO0o0O - OoOoOO00 / OoooooooOO . I1ii11iIi11i
  if 88 - 88: I11i
  if 36 - 36: iIii1I11I1II1 - Oo0ooO0oo0oO * OoO0O00 * OoO0O00 . II111iiii
  if 49 - 49: O0 + OoO0O00 - I1ii11iIi11i + Oo0ooO0oo0oO
  if 90 - 90: O0 . Ii1I * OOooOOo * OoooooooOO * Oo0ooO0oo0oO * Ii1I
 print '-->'
 print '--> attempting to extract build.. '
 print '-->'
 if 12 - 12: Oo0ooO0oo0oO * OoooooooOO * i1IIi
 III1ii1 = IiI1i1 ( iI1I1 , ii1111iII , name , '' )
 if 92 - 92: OOooOOo / Oo0ooO0oo0oO . O0oo0OO0 . iii1I1I / Oo0ooO0oo0oO
 if 83 - 83: iIii1I11I1II1 - OoO0O00 - O0oo0OO0
 if 27 - 27: O00oOoOoO0o0O - iii1I1I * i11iIiiIii % i11iIiiIii + OoOoOO00 . O0oo0OO0
 if 10 - 10: O00oOoOoO0o0O / i11iIiiIii
 if 6 - 6: I11i - OOooOOo
 if 100 - 100: Oo0Ooo / OOooOOo + iii1I1I - o0oOOo0O0Ooo + OoO0O00 % O00oOoOoO0o0O
 if III1ii1 == "unzipfail" :
  print ' '
  print '--> INSTALL HALTED: Error extracting Zip'
  if 91 - 91: Ii1I % I11i % Oo0Ooo / OoO0O00 - II111iiii - o0oOOo0O0Ooo
  if i1I1ii11i1Iii == "yes" :
   if 50 - 50: OoooooooOO
   iI1i1IIi1i1 = 4
   OoOoo00Oo0OoO = '' . join ( random . choice ( string . ascii_uppercase ) for _ in range ( iI1i1IIi1i1 ) )
   if 51 - 51: II111iiii - oO0o % OoooooooOO - II111iiii / O0 - OoooooooOO
   url = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=installfailed&user=' + username + '&url=' + url + '&name=' + name + '&type=build' + '&code=' + OoOoo00Oo0OoO
   if 21 - 21: iii1I1I * o0oOOo0O0Ooo
   url = url . replace ( " " , "%20" )
   if 85 - 85: I1ii11iIi11i . OoOoOO00 . i1IIi % OOooOOo * I11i . O0oo0OO0
   if 26 - 26: O0oo0OO0 + Oo0Ooo + II111iiii % OoOoOO00 % OOooOOo
   if 40 - 40: I1ii11iIi11i + i1IIi
   o0O00o00Ooo = iIii111Ii ( url , '' )
   if 9 - 9: OOooOOo
   if 74 - 74: OoOoOO00 - OOooOOo % OoOoOO00
   if 82 - 82: I11i % O00oOoOoO0o0O + Oo0Ooo + iIii1I11I1II1 - I11i - I1IiiI
   if 65 - 65: O00oOoOoO0o0O / O0 * II111iiii + oO0o
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( ooO ( "areswizard" ) , Oo0oo0O0o00O + ooO ( "installfailed" ) )
  if 52 - 52: o0oOOo0O0Ooo - OoOoOO00 * II111iiii / OoooooooOO
  return ( 'unzipfail' )
  if 44 - 44: OOooOOo - oO0o + o0oOOo0O0Ooo - i1IIi % o0oOOo0O0Ooo
  if 79 - 79: iii1I1I . iIii1I11I1II1
  if 42 - 42: i11iIiiIii / O00oOoOoO0o0O . O0 / OOooOOo . iii1I1I * i1IIi
  if 83 - 83: iIii1I11I1II1 . II111iiii * Oo0Ooo . I1IiiI - I1IiiI - iIii1I11I1II1
 time . sleep ( 2 )
 if 29 - 29: Oo0Ooo
 xbmc . executebuiltin ( 'UpdateLocalAddons' )
 if 35 - 35: OoOoOO00 + II111iiii
 if 46 - 46: O0 / I1ii11iIi11i + OOooOOo - O0oo0OO0 + I1IiiI - Oo0ooO0oo0oO
 print '@ares: serveronline: ' + i1I1ii11i1Iii
 if 96 - 96: O00oOoOoO0o0O + i1IIi - I11i * I11i - OoO0O00 % II111iiii
 if i1I1ii11i1Iii == "yes" :
  if 47 - 47: O0oo0OO0 . i11iIiiIii + oO0o . I1ii11iIi11i
  try :
   if 12 - 12: iIii1I11I1II1 % O0oo0OO0 * OoOoOO00 / OoooooooOO % OoooooooOO
   iI1i1IIi1i1 = 4
   OoOoo00Oo0OoO = '' . join ( random . choice ( string . ascii_uppercase ) for _ in range ( iI1i1IIi1i1 ) )
   if 81 - 81: iIii1I11I1II1 - Oo0Ooo - Oo0ooO0oo0oO . OoO0O00 + I1ii11iIi11i
   url = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=logbuilddownload&user=' + username + '&name=' + name + '&mac=' + mac + '&wizard=' + wizardname + '&code=' + OoOoo00Oo0OoO
   if 84 - 84: iii1I1I . OOooOOo . iii1I1I * oO0o % Ii1I . oO0o
   url = url . replace ( " " , "%20" )
   if 86 - 86: iii1I1I * Oo0ooO0oo0oO / iIii1I11I1II1 + Ii1I . iii1I1I
   if o000oo == "true" :
    print '------------------------------------'
    print '--> LOGBUILDDOWNLOADURL: ' + url
    print '-----------------------------------'
    if 64 - 64: O00oOoOoO0o0O - Oo0Ooo % iii1I1I % I11i
    if 42 - 42: Oo0Ooo . OoO0O00
   o0O00o00Ooo = iIii111Ii ( url , '' )
   if 22 - 22: Oo0ooO0oo0oO - o0oOOo0O0Ooo + I11i / I1IiiI + OOooOOo
   if 10 - 10: oO0o / I1IiiI
  except :
   if 95 - 95: II111iiii - O00oOoOoO0o0O % O00oOoOoO0o0O . o0oOOo0O0Ooo
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( 'Ares Wizard' , 'Failed to send stats to server' )
   if 19 - 19: II111iiii . Oo0ooO0oo0oO . I11i - OoooooooOO / I1ii11iIi11i . O0oo0OO0
   if 57 - 57: II111iiii . O0oo0OO0 . i11iIiiIii / OoOoOO00 - O0
   if 56 - 56: OOooOOo / O0oo0OO0
   if 13 - 13: oO0o + Oo0Ooo + Oo0Ooo / OoO0O00 + i1IIi + I1IiiI
   if 56 - 56: OoOoOO00
   if 10 - 10: iIii1I11I1II1 + i1IIi * Ii1I / iIii1I11I1II1 % OoOoOO00 / O0
 if o000oo == "true" :
  print '------------------------------------'
  print '--> URL: ' + url
  print '-----------------------------------'
  if 14 - 14: O0
  if 65 - 65: O00oOoOoO0o0O / oO0o
 print '------------------------------------'
 print '--> ' + name + ' Install completed  <--'
 print '-----------------------------------'
 if 57 - 57: O00oOoOoO0o0O + oO0o - O00oOoOoO0o0O
 if 51 - 51: OoOoOO00 % O00oOoOoO0o0O / iii1I1I - oO0o - OoO0O00 . iIii1I11I1II1
 oOO0o0o ( 'buildname' , name )
 oOO0o0o ( 'buildurl' , ooOooo0O00 )
 oOO0o0o ( 'canupdate' , oo0 )
 OooOO000 . setSetting ( "buildname" , name )
 OooOO000 . setSetting ( "buildcanupdate" , oo0 )
 OooOO000 . setSetting ( "lastbuildcheck" , " " )
 if 29 - 29: O0 % O0oo0OO0
 if 19 - 19: I11i % O00oOoOoO0o0O
 if 73 - 73: i11iIiiIii . II111iiii
 try :
  oOO0o0o ( 'installedversion' , IIi )
  OooOO000 . setSetting ( "buildinstalledversion" , IIi )
 except :
  oOO0o0o ( 'installedversion' , ' ' )
  OooOO000 . setSetting ( "buildinstalledversion" , ' ' )
  if 26 - 26: Oo0Ooo * i1IIi / OoooooooOO
  if 78 - 78: O0 + OOooOOo . I11i * OoOoOO00 - OoooooooOO
 try :
  oOO0o0o ( 'wizardname' , wizardname )
 except :
  oOO0o0o ( 'wizardname' , ' ' )
  if 92 - 92: o0oOOo0O0Ooo + OoOoOO00 / oO0o . O0oo0OO0 * I1IiiI * OoOoOO00
  if 6 - 6: Ii1I / i11iIiiIii / O00oOoOoO0o0O - i1IIi - I1IiiI * I11i
 try :
  OooOO000 . setSetting ( "buildlatestversion" , IIi )
 except :
  OooOO000 . setSetting ( "buildlatestversion" , ' ' )
  if 43 - 43: O00oOoOoO0o0O * Oo0Ooo / OoOoOO00 + I1IiiI - i11iIiiIii + II111iiii
  if 81 - 81: I11i / Oo0Ooo % Ii1I % OoO0O00
  if 87 - 87: O0 % II111iiii
 if oo0 == "yes" or oo0 == "Yes" :
  OooOO000 . setSetting ( "checkbuildupdate" , "true" )
 else :
  OooOO000 . setSetting ( "checkbuildupdate" , "false" )
  if 42 - 42: I1IiiI . i1IIi
  if 98 - 98: o0oOOo0O0Ooo % I11i . Oo0Ooo * Oo0Ooo % iii1I1I
  if 37 - 37: OoO0O00 / O0oo0OO0 . O0oo0OO0 * i1IIi
 if ooo00Ooo == "blackbox" :
  if 22 - 22: I1ii11iIi11i . II111iiii + iIii1I11I1II1 / OoooooooOO . Oo0ooO0oo0oO
  try :
   if 13 - 13: II111iiii
   url = 'http://tbbwizard.co.uk/pod/build.php?b=' + name + '&r=' + str ( id )
   url = url . replace ( " " , "%20" )
   if 36 - 36: iii1I1I - oO0o / Oo0Ooo / O0 . OoO0O00 . i1IIi
   iIiIi1i1ii11 = urllib2 . Request ( url )
   iIiIi1i1ii11 . add_header ( 'User-Agent' , 'Kodi/Ares Wizard' )
   if 19 - 19: O0 . OoooooooOO % iIii1I11I1II1 - Ii1I . Ii1I + I1IiiI
   try :
    if 98 - 98: oO0o . Oo0Ooo
    o0O00o00Ooo = urllib2 . urlopen ( iIiIi1i1ii11 )
    if 9 - 9: O0oo0OO0 % O00oOoOoO0o0O - i11iIiiIii - OOooOOo % iii1I1I % OoooooooOO
   except HTTPError , ii111I1iIiIi111I :
    if 6 - 6: i1IIi - II111iiii * OoOoOO00 + oO0o
    OOooo = xbmcgui . Dialog ( )
    OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . code ) )
    print '@Ares: HTTP Error: ' + str ( ii111I1iIiIi111I . code )
    return ( 'downloadfailed' )
    if 6 - 6: I1IiiI - Oo0ooO0oo0oO + I1IiiI + OoO0O00 - i11iIiiIii % Oo0ooO0oo0oO
   except URLError , ii111I1iIiIi111I :
    if 64 - 64: OoooooooOO + OOooOOo
    OOooo = xbmcgui . Dialog ( )
    OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . reason ) , "" , "" )
    print '@Ares: URL Error: ' + str ( ii111I1iIiIi111I . reason )
    return ( 'downloadfailed' )
    if 36 - 36: I1IiiI - Ii1I / I1ii11iIi11i + Oo0Ooo % I1ii11iIi11i
   except IOError , ii111I1iIiIi111I :
    OOooo = xbmcgui . Dialog ( )
    OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . errno ) + " - " + str ( ii111I1iIiIi111I . strerror ) , "" , "" )
    print '@Ares: IO Error: ' + str ( ii111I1iIiIi111I . errno ) + ' - ' + str ( ii111I1iIiIi111I . strerror )
    if 86 - 86: iIii1I11I1II1 * OoO0O00
    if 82 - 82: I1IiiI - OoO0O00 % o0oOOo0O0Ooo
   except :
    OOooo = xbmcgui . Dialog ( )
    OOooo . ok ( "Download Error" , "Unspecified Error (sorry)" , "" , "" )
    print '@Ares: Download Error: Unspecified'
    return ( 'downloadfailed' )
    if 72 - 72: O0 + OoOoOO00 % OOooOOo / oO0o / O00oOoOoO0o0O
    if 98 - 98: Oo0Ooo . II111iiii * I11i
    if 39 - 39: O00oOoOoO0o0O * o0oOOo0O0Ooo + Ii1I - I11i
    if 70 - 70: oO0o * Oo0ooO0oo0oO / Oo0ooO0oo0oO - Ii1I * Ii1I % OOooOOo
   O00o0O00 = o0O00o00Ooo . read ( )
   o0O00o00Ooo . close ( )
   if 91 - 91: OoO0O00 - OoO0O00 % O0
   if 67 - 67: Oo0ooO0oo0oO * i1IIi
   if 66 - 66: o0oOOo0O0Ooo - I1ii11iIi11i . OoOoOO00 / iii1I1I - Ii1I - i1IIi
   i1Ii1ii1 = json . loads ( O00o0O00 )
   if 97 - 97: oO0o % iii1I1I - OOooOOo . OoooooooOO
   if 94 - 94: Oo0Ooo
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( 'Message from The Black Box' , i1Ii1ii1 . get ( 'mmsg' ) )
   if 10 - 10: i11iIiiIii / I1ii11iIi11i . i1IIi + i1IIi * iii1I1I
  except :
   if 64 - 64: II111iiii % I1ii11iIi11i . OoOoOO00 . iIii1I11I1II1 / I1ii11iIi11i
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( 'Ares Wizard' , 'Failed to send stats to BlackBox' )
   if 43 - 43: OoooooooOO * I1IiiI
   if 2 - 2: OOooOOo / oO0o + I1ii11iIi11i + i11iIiiIii % iIii1I11I1II1 . I1ii11iIi11i
   if 100 - 100: Oo0Ooo * Oo0ooO0oo0oO + Ii1I / iii1I1I * o0oOOo0O0Ooo
   if 26 - 26: O0oo0OO0 * OoOoOO00
   if 38 - 38: II111iiii
 try :
  os . unlink ( iI1I1 )
  os . remove ( iI1I1 )
 except :
  pass
  if 50 - 50: OoOoOO00 . O00oOoOoO0o0O - OOooOOo
 OOooo = xbmcgui . Dialog ( )
 if OOooo . yesno ( ooO ( "areswizard" ) , ooO ( "choicebackupbuild" ) , yeslabel = 'Yes' , nolabel = 'No' ) :
  if 46 - 46: iIii1I11I1II1
  OoOO0O0O0o0O ( name )
  if 18 - 18: OOooOOo . i11iIiiIii
  if 38 - 38: OoooooooOO % o0oOOo0O0Ooo % I11i . Oo0Ooo
  if 72 - 72: OOooOOo + OoooooooOO . i1IIi
  if 10 - 10: II111iiii + O0oo0OO0 - i1IIi
  if 90 - 90: I11i . OoO0O00 . iIii1I11I1II1
 I1i ( )
 if 81 - 81: iii1I1I + I11i - i11iIiiIii * I1IiiI / O00oOoOoO0o0O - Ii1I
 if o000oo == "true" :
  print '----------------------------------'
  print '--> kodi still running  <--'
  print '-----------------------------------'
  if 44 - 44: OoooooooOO . oO0o
 return ( 'kodirunning' )
 if 30 - 30: O0oo0OO0 % O00oOoOoO0o0O / II111iiii
 if 68 - 68: oO0o / O0 / OOooOOo
 if 3 - 3: o0oOOo0O0Ooo / o0oOOo0O0Ooo
 if 17 - 17: OoO0O00 * i1IIi
 if 50 - 50: OoOoOO00 + I11i
def OOOO0OOo0oOoo ( ) :
 if 65 - 65: I11i / I1ii11iIi11i - OOooOOo . iIii1I11I1II1 * O0 + OoooooooOO
 global iiII1i1
 global oo00OO0000oO
 global I1iiii1I
 global Oo0oo0O0o00O
 global I1
 global o00O0
 global oo0o
 if 83 - 83: OoooooooOO + Oo0Ooo
 if 4 - 4: Oo0Ooo - i11iIiiIii / O0 / I11i + Oo0ooO0oo0oO / iii1I1I
 if 72 - 72: II111iiii % iii1I1I + OoO0O00
 if 44 - 44: OoooooooOO + OoooooooOO - Ii1I * iii1I1I
 if 45 - 45: oO0o . O0 - Oo0ooO0oo0oO / o0oOOo0O0Ooo
 if IIIIiii1IIii == 'videoaddon' :
  oOoOO00oOo0o ( )
  O00 ( Oo0oo0O0o00O , iiII1i1 , oo00OO0000oO , I1iiii1I , oOooOOOoOo , OOO00O , o00O0 )
  I1i11111i ( )
  if 83 - 83: Ii1I + OoO0O00 + O0oo0OO0
  if repopath == "" :
   pass
  else :
   if 59 - 59: Oo0Ooo / OoOoOO00 . I1ii11iIi11i
   oo00O = translate ( os . path . join ( 'special://home/addons' , repopath ) )
   ooooO0O = os . path . join ( oo00O , 'addon.xml' )
   if 66 - 66: iIii1I11I1II1 / oO0o
   if not os . path . isfile ( ooooO0O ) :
    OOooo = xbmcgui . Dialog ( )
    if 36 - 36: o0oOOo0O0Ooo % I1ii11iIi11i - Oo0Ooo % o0oOOo0O0Ooo
    if OOooo . yesno ( ooO ( "installrepo" ) , ooO ( "installrepo2" ) ) :
     if 18 - 18: oO0o / i1IIi * I11i
     if oo0o == "" :
      if 71 - 71: OoooooooOO - i11iIiiIii * i1IIi % OOooOOo - oO0o / o0oOOo0O0Ooo
      iI1i1IIi1i1 = 4
      OoOoo00Oo0OoO = '' . join ( random . choice ( string . ascii_uppercase ) for _ in range ( iI1i1IIi1i1 ) )
      if 77 - 77: iIii1I11I1II1 / OoOoOO00
      iiII1i1 = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=getreposincadult&code=' + OoOoo00Oo0OoO
      if 59 - 59: Oo0Ooo % OOooOOo
      if 14 - 14: I11i . OoO0O00
      if 46 - 46: Oo0ooO0oo0oO
      oo0o = iIii111Ii ( iiII1i1 , 'yes' )
      if 48 - 48: i1IIi * I1IiiI / i11iIiiIii
      if oo0o == "downloadfailed" :
       return ( )
       if 40 - 40: O00oOoOoO0o0O
     iii1i = ""
     if 40 - 40: Oo0ooO0oo0oO * OoooooooOO
     O00o0O00 = json . loads ( oo0o )
     for oO00O in O00o0O00 :
      if oO00O [ 'repopath' ] == repopath :
       iii1i = oO00O [ 'url' ]
       Oo0oo0O0o00O = oO00O [ 'name' ]
       if 88 - 88: O00oOoOoO0o0O / I1ii11iIi11i
     I1iiii1I = "repo"
     if 19 - 19: i11iIiiIii + II111iiii
     if 37 - 37: O0oo0OO0 . I1IiiI - II111iiii / O0 . OoOoOO00
     if 27 - 27: I1ii11iIi11i / II111iiii + O0 % I1ii11iIi11i
     if o000oo == "true" :
      print Oo0oo0O0o00O
      print repopath
      print I1iiii1I
      print '--> URL: ' + iii1i
      if 72 - 72: I1IiiI - i1IIi
      if 11 - 11: iIii1I11I1II1 . OoO0O00 * Ii1I
     if iii1i == "" :
      OOooo = xbmcgui . Dialog ( )
      OOooo . ok ( ooO ( "areswizard" ) , ooO ( "repounavailable" ) , "" , "" )
     else :
      O00 ( Oo0oo0O0o00O , iii1i , repopath , I1iiii1I , oOooOOOoOo , OOO00O , o00O0 )
      if 65 - 65: Oo0Ooo / OoooooooOO
      if 60 - 60: II111iiii + I1IiiI % oO0o - o0oOOo0O0Ooo
      if 50 - 50: iIii1I11I1II1 - i11iIiiIii / iii1I1I + Oo0ooO0oo0oO / OOooOOo
      if 80 - 80: O00oOoOoO0o0O / OoooooooOO
 if IIIIiii1IIii == 'programaddon' :
  oOoOO00oOo0o ( )
  O00 ( Oo0oo0O0o00O , iiII1i1 , oo00OO0000oO , I1iiii1I , oOooOOOoOo , OOO00O , o00O0 )
  ii1iiI ( )
  if 69 - 69: OoOoOO00 + O00oOoOoO0o0O
 if IIIIiii1IIii == 'repo' :
  IiO0OoOo00oo ( )
  O00 ( I1 , iiII1i1 , oo00OO0000oO , I1iiii1I , oOooOOOoOo , OOO00O , o00O0 )
  IiiiiI ( )
  if 18 - 18: O0 / I11i
  if 10 - 10: O0oo0OO0 * i1IIi
  if 48 - 48: Oo0Ooo % i1IIi / iii1I1I . O0
  if 27 - 27: I11i + iIii1I11I1II1 - i11iIiiIii
  if 81 - 81: I11i + oO0o * iIii1I11I1II1 * O00oOoOoO0o0O
  if 7 - 7: I11i - I1IiiI . iii1I1I + O0 / iIii1I11I1II1 - O0oo0OO0
  if 32 - 32: Oo0ooO0oo0oO
def i1i1i1II111I ( ) :
 if 12 - 12: O00oOoOoO0o0O - II111iiii
 if 71 - 71: i11iIiiIii . Oo0Ooo + oO0o + oO0o
 if 97 - 97: i11iIiiIii / O0 . iii1I1I . iIii1I11I1II1
 if IIIIiii1IIii == 'build' :
  O0O00 ( )
  if 40 - 40: OoOoOO00 / iii1I1I / O0 * Oo0ooO0oo0oO
 if IIIIiii1IIii == 'videoaddon' :
  oOoOO00oOo0o ( )
  o000OOoOO0 ( Oo0oo0O0o00O , oo00OO0000oO , I1iiii1I )
  I1i11111i ( )
  if 90 - 90: OoooooooOO - I1IiiI / I1ii11iIi11i + oO0o - o0oOOo0O0Ooo
  if 84 - 84: OoOoOO00 + O0 % Oo0Ooo
  if 22 - 22: iIii1I11I1II1 % i11iIiiIii
 if IIIIiii1IIii == 'repo' :
  IiO0OoOo00oo ( )
  if 29 - 29: Oo0ooO0oo0oO - iii1I1I + O00oOoOoO0o0O % Ii1I - oO0o - Oo0ooO0oo0oO
  if 43 - 43: oO0o
  if 22 - 22: O0oo0OO0 + i11iIiiIii
  if 49 - 49: O0 % II111iiii . OOooOOo + iii1I1I + iIii1I11I1II1 / i11iIiiIii
  if 79 - 79: II111iiii + Oo0ooO0oo0oO - i1IIi - i1IIi + II111iiii . i1IIi
  if 78 - 78: I1IiiI * I11i % OOooOOo + Ii1I + OoOoOO00
def I11I1 ( ) :
 if 16 - 16: OoooooooOO
 OOoO0O000O . setVisible ( False )
 I1ii1Ii1OoO . setVisible ( False )
 if 34 - 34: II111iiii - I1ii11iIi11i + O0 - I1IiiI + OoooooooOO
 iI . setVisible ( True )
 O0o . setVisible ( True )
 if 16 - 16: O0oo0OO0 % I1ii11iIi11i - Ii1I
 global I1i11
 global IiIi1I1
 global IiIIi1
 if 100 - 100: Ii1I . Oo0Ooo
 if 26 - 26: I1ii11iIi11i * O0 . o0oOOo0O0Ooo / OoO0O00 / II111iiii . O0
 if 58 - 58: iIii1I11I1II1
 if 15 - 15: O00oOoOoO0o0O / OOooOOo / I11i + i1IIi
 oO . setVisible ( True )
 if 95 - 95: i1IIi + II111iiii . iIii1I11I1II1 . OoooooooOO + o0oOOo0O0Ooo / iIii1I11I1II1
 if 40 - 40: OoO0O00 / O0
 if 60 - 60: iIii1I11I1II1 / Oo0Ooo / oO0o + iii1I1I
 IiI1 = xbmc . getInfoLabel ( 'System.FreeMemory' )
 global I1i11
 OooooOOoo0 = IiI1 [ : - 2 ]
 I1i11 = int ( OooooOOoo0 )
 if 66 - 66: iIii1I11I1II1 . O0 * O00oOoOoO0o0O . Oo0ooO0oo0oO + i1IIi
 global IiIi1I1
 IiIi1I1 = int ( ( I1i11 / 3 ) )
 OOOo = str ( IiIi1I1 )
 IiIIi1 = int ( ( IiIi1I1 * .90 ) )
 o0OO0O0 = float ( I1i11 / 3 )
 if 9 - 9: i11iIiiIii - O0oo0OO0 . i11iIiiIii
 if IiIIi1 > 500 :
  IiIIi1 = 500
  i1I11I1I1I = float ( IiIIi1 / o0OO0O0 * 100 )
  Ii1I1 . setPercent ( i1I11I1I1I )
  if 36 - 36: O0 - II111iiii
  if 97 - 97: I1IiiI
 global oO0oooo0
 oO0oooo0 = IiIi1I1 * 1024 * 1024
 global iiI1
 iiI1 = str ( oO0oooo0 )
 if 87 - 87: I11i + iIii1I11I1II1
 iII1iI1IIiI . setLabel ( '[COLOR=darkgray]' + ooO ( "cachetweak1" ) + IiI1 + ooO ( "cachetweak2" ) + '[/COLOR]' )
 iII1iI1IIiI . setVisible ( True )
 if 91 - 91: oO0o
 O00oo . setLabel ( '[COLOR=lightgray]' + ooO ( "cachetweak3" ) + OOOo + ooO ( "cachetweak4" ) + '[/COLOR]' )
 O00oo . setVisible ( True )
 if 58 - 58: i11iIiiIii / Ii1I - OoooooooOO
 iI . setLabel ( '[COLOR=darkgray]' + ooO ( "tweakcachelabel2" ) + str ( IiIIi1 ) + 'MB [/COLOR]' )
 if 25 - 25: i1IIi * Oo0ooO0oo0oO % OOooOOo / I1IiiI
 if 75 - 75: i11iIiiIii
 if 38 - 38: iIii1I11I1II1
 i1111iI1 . controlRight ( oO )
 oO . controlLeft ( i1111iI1 )
 oO . controlUp ( Oo0OOo )
 oO . setVisible ( True )
 Iii11iI1I . setFocus ( oO )
 if 80 - 80: OoO0O00
 if 72 - 72: I11i * II111iiii
def o00i1ii11IiiiIiI ( ) :
 if 17 - 17: i1IIi . Ii1I
 global II1i11I
 global i1I1IiiIi1i
 global Ooo0OOoOoO0
 global iiI11ii1I1
 if 96 - 96: OoOoOO00 / Oo0Ooo . II111iiii / Oo0ooO0oo0oO
 oO . setVisible ( False )
 iII1iI1IIiI . setVisible ( False )
 O00oo . setVisible ( False )
 iI . setVisible ( False )
 O0o . setVisible ( False )
 if 56 - 56: O00oOoOoO0o0O - Oo0ooO0oo0oO % oO0o / Oo0Ooo * oO0o % O0
 i1i1iiIIiiiII . setVisible ( True )
 Ii1I1 . setVisible ( True )
 if 71 - 71: iii1I1I / II111iiii - II111iiii / I1IiiI
 if 24 - 24: O0 . I1IiiI + O00oOoOoO0o0O . O00oOoOoO0o0O
 i1i1iiIIiiiII . setLabel ( '[COLOR=darkgray] ' + str ( IiIIi1 ) + 'MB[/COLOR]' )
 IiI1iiI11 . setLabel ( '[COLOR=darkgray] 10s[/COLOR]' )
 I1Ii11i . setLabel ( '[COLOR=darkgray] 5[/COLOR]' )
 if 53 - 53: II111iiii + Ii1I * o0oOOo0O0Ooo
 Ooo000000 . setLabel ( '[COLOR=darkgray]' + ooO ( "recommendedsetting" ) + str ( IiIIi1 ) + 'MB[/COLOR]' )
 if 47 - 47: Ii1I % OOooOOo . Oo0Ooo
 if 94 - 94: Ii1I - iIii1I11I1II1 + I1IiiI - iIii1I11I1II1 . o0oOOo0O0Ooo
 if 3 - 3: O0 / I11i + OoOoOO00 % O00oOoOoO0o0O / i11iIiiIii
 OO0ooO0 . setVisible ( True )
 OoOooOO0oOOo0O . setVisible ( True )
 Ooo000000 . setVisible ( True )
 Iiii1I . setVisible ( True )
 if 25 - 25: II111iiii / I1ii11iIi11i % iIii1I11I1II1
 iI111I1III . setVisible ( True )
 if 69 - 69: O00oOoOoO0o0O
 if 36 - 36: I1IiiI / oO0o
 if 72 - 72: i1IIi - I1ii11iIi11i . OOooOOo + O0oo0OO0 - Oo0ooO0oo0oO
 OOO0O00Oo . setVisible ( True )
 ii1oOOO0ooOO . setVisible ( True )
 i11 . setVisible ( True )
 IiI1iiI11 . setVisible ( True )
 OOoOOOO00 . setVisible ( True )
 if 69 - 69: o0oOOo0O0Ooo * I1IiiI - I11i
 OoooooOo . setVisible ( True )
 OooOo . setVisible ( True )
 oOo0 . setVisible ( True )
 I1Ii11i . setVisible ( True )
 I1iIiiiI1 . setVisible ( True )
 if 11 - 11: OOooOOo * O0
 iI111I1III . controlUp ( OO00o )
 OoooooOo . controlUp ( OOO0O00Oo )
 OoooooOo . controlDown ( OO00o )
 OOO0O00Oo . controlUp ( Ii1I1 )
 OOO0O00Oo . controlDown ( OoooooOo )
 Ii1I1 . controlUp ( Oo0OOo )
 Ii1I1 . controlDown ( OOO0O00Oo )
 Oo0OOo . controlDown ( Ii1I1 )
 if 43 - 43: I1IiiI - i1IIi . i1IIi * II111iiii
 ooOOo0o . setVisible ( True )
 IiiiIi1iI1iI . setVisible ( True )
 OO00o . setVisible ( True )
 OOOOoOO0O . setVisible ( True )
 ii11I . setVisible ( True )
 if 64 - 64: I1IiiI * iIii1I11I1II1 % O0oo0OO0
 if 22 - 22: OoooooooOO + O0oo0OO0 . o0oOOo0O0Ooo * Oo0Ooo
 OO00o . setSelected ( True )
 II1i11I = 2
 if 61 - 61: iIii1I11I1II1
 iiI11ii1I1 = 10
 Ooo0OOoOoO0 = 5
 if 95 - 95: I1ii11iIi11i + O00oOoOoO0o0O * Ii1I - O00oOoOoO0o0O
 if IiIi1I1 < 500 :
  i1I1IiiIi1i = IiIi1I1
 else :
  i1I1IiiIi1i = IiIIi1
  if 58 - 58: I1ii11iIi11i - oO0o % I11i * O0
 IiiiIi1iI1iI . controlUp ( OoooooOo )
 OO00o . controlUp ( OoooooOo )
 OOOOoOO0O . controlUp ( OoooooOo )
 ii11I . controlUp ( OoooooOo )
 if 43 - 43: OoOoOO00 + O0
 IiiiIi1iI1iI . controlDown ( iI111I1III )
 OO00o . controlDown ( iI111I1III )
 OOOOoOO0O . controlDown ( iI111I1III )
 ii11I . controlDown ( iI111I1III )
 if 71 - 71: Oo0ooO0oo0oO * I1IiiI / I1ii11iIi11i
 IiiiIi1iI1iI . controlRight ( OO00o )
 OO00o . controlLeft ( IiiiIi1iI1iI )
 OO00o . controlRight ( OOOOoOO0O )
 OOOOoOO0O . controlLeft ( OO00o )
 OOOOoOO0O . controlRight ( ii11I )
 ii11I . controlLeft ( OOOOoOO0O )
 if 8 - 8: O0oo0OO0 / iIii1I11I1II1
 Iii11iI1I . setFocus ( iI111I1III )
 if 29 - 29: i11iIiiIii % i1IIi + oO0o . I1ii11iIi11i
 if 51 - 51: OOooOOo + o0oOOo0O0Ooo . OOooOOo
 if 23 - 23: iIii1I11I1II1 + OoO0O00 / I1IiiI
 if 48 - 48: OoOoOO00 + I11i + oO0o . I1IiiI
def I11i1Ii1iI1i ( text , word_dic ) :
 oo0oOOoO0o = re . compile ( '|' . join ( map ( re . escape , word_dic ) ) )
 if 25 - 25: iii1I1I . OOooOOo * I1IiiI % OoO0O00 - O0 . I1IiiI
 if 92 - 92: I11i * O0oo0OO0 . O0 - oO0o + i1IIi % Oo0Ooo
 if 39 - 39: O0oo0OO0 - I1IiiI
 if 18 - 18: i1IIi
 def translate ( match ) :
  return word_dic [ match . group ( 0 ) ]
 return oo0oOOoO0o . sub ( translate , text )
 if 42 - 42: II111iiii - i1IIi . oO0o % OOooOOo % Oo0ooO0oo0oO - i11iIiiIii
 if 23 - 23: OOooOOo + iIii1I11I1II1 - i1IIi
def O00iIi ( newcache , newcurl , newrbf , newbuffermode ) :
 if 81 - 81: Oo0Ooo / I1ii11iIi11i - O0 + Ii1I % I1IiiI
 if 29 - 29: o0oOOo0O0Ooo / Oo0Ooo . I1ii11iIi11i % o0oOOo0O0Ooo - O0oo0OO0 * O0oo0OO0
 if 8 - 8: I1ii11iIi11i
 if 45 - 45: i1IIi - OoO0O00 % Oo0Ooo
 if 42 - 42: Oo0ooO0oo0oO - I11i * iii1I1I
 if 39 - 39: OOooOOo - I1ii11iIi11i % O00oOoOoO0o0O % I1ii11iIi11i * II111iiii - Ii1I
 I1iI1II1iI1 = str ( newcache * 1024 * 1024 )
 if 35 - 35: Oo0ooO0oo0oO % I11i * I1ii11iIi11i
 oOooo0Oo0o = '<advancedsettings>\n	<network>\n		<buffermode>' + str ( newbuffermode ) + '</buffermode>\n		<cachemembuffersize>' + str ( I1iI1II1iI1 ) + '</cachemembuffersize>\n		<readbufferfactor>' + str ( newrbf ) + '</readbufferfactor>\n		<curlclienttimeout>' + str ( newcurl ) + '</curlclienttimeout>\n		<curllowspeedtime>' + str ( newcurl ) + '</curllowspeedtime>\n	</network>\n</advancedsettings>'
 if 10 - 10: OoO0O00 + OoooooooOO + O0oo0OO0
 if 57 - 57: Ii1I % Ii1I * Oo0Ooo % i11iIiiIii
 if 12 - 12: oO0o . Oo0Ooo . I1IiiI - i11iIiiIii / o0oOOo0O0Ooo
 Ooo0000 = open ( o00oooO0Oo , "w" )
 Ooo0000 . write ( oOooo0Oo0o )
 Ooo0000 . close ( )
 if 56 - 56: OoooooooOO * I1ii11iIi11i % O00oOoOoO0o0O + OoO0O00
 if 22 - 22: i11iIiiIii
 if 65 - 65: o0oOOo0O0Ooo % Oo0ooO0oo0oO
 if 38 - 38: oO0o . OOooOOo - I1IiiI
 if 66 - 66: iii1I1I % iii1I1I
 if 59 - 59: II111iiii . i1IIi % i1IIi
 OOooo = xbmcgui . Dialog ( )
 OOooo . ok ( "Completed" , ooO ( 'advancedsettings' ) , "" , "" )
 if 40 - 40: O0oo0OO0 . II111iiii * o0oOOo0O0Ooo + I11i - i1IIi
 if 67 - 67: o0oOOo0O0Ooo - O0 - i1IIi . Oo0ooO0oo0oO . iii1I1I
 if 43 - 43: II111iiii . o0oOOo0O0Ooo + i11iIiiIii . O0 / O0 . II111iiii
def i1ii1111II1 ( ) :
 if 26 - 26: i1IIi % OoOoOO00 / i1IIi
 if 41 - 41: oO0o % oO0o . iIii1I11I1II1 . o0oOOo0O0Ooo
 if 95 - 95: i1IIi . Oo0ooO0oo0oO . Oo0Ooo
 print 'delete packages selected'
 if 13 - 13: OOooOOo - Oo0Ooo % O0 . O0oo0OO0
 global ii1I1IIii11
 global O0o0oO
 if 66 - 66: I1IiiI + I11i
 OooOO000 . setSetting ( "lastclearedpackages" , str ( datetime . date . today ( ) ) )
 if 58 - 58: I1ii11iIi11i
 ii1iII1II = xbmc . translatePath ( os . path . join ( 'special://home/addons/packages' , '' ) )
 iI1I1i1i = 0
 O0o0oO = 0.00
 oO0oO00 = 0
 try :
  for O0000ooO0OOo , OoiIiI1IiIII , ooooo0 in os . walk ( ii1iII1II ) :
   iI1I1i1i = 0
   iI1I1i1i += len ( ooooo0 )
   oO0oO00 = oO0oO00 + iI1I1i1i
   if iI1I1i1i > 0 :
    for o0o0Ooo0 in ooooo0 :
     o0IiIiI111IIII1 = os . path . join ( O0000ooO0OOo , o0o0Ooo0 )
     O0o0oO += os . path . getsize ( o0IiIiI111IIII1 )
     if 11 - 11: O0 - OoO0O00 + OoOoOO00 * Oo0ooO0oo0oO - Ii1I
     os . unlink ( os . path . join ( O0000ooO0OOo , o0o0Ooo0 ) )
    for O00oo00oO in OoiIiI1IiIII :
     shutil . rmtree ( os . path . join ( O0000ooO0OOo , O00oo00oO ) )
     if 4 - 4: OoooooooOO % i11iIiiIii % Oo0Ooo + OoOoOO00
     if 49 - 49: II111iiii - OOooOOo - I1IiiI / Ii1I
 except :
  pass
  if 47 - 47: I1ii11iIi11i + OoO0O00
  if 95 - 95: I11i . OoOoOO00 / Oo0Ooo % Oo0ooO0oo0oO % II111iiii
 try :
  if 82 - 82: Oo0ooO0oo0oO - I11i / O0oo0OO0 - i11iIiiIii - iIii1I11I1II1
  with open ( iii , 'r' , 0 ) as o0o0Ooo0 :
   OoO000O = json . load ( o0o0Ooo0 )
   if 53 - 53: iIii1I11I1II1 % I11i . i1IIi + O00oOoOoO0o0O / OoOoOO00 . II111iiii
   ii = OoO000O [ 'totaltempfiles' ]
   ooOo0OoOooo00 = OoO000O [ 'totalspacegained' ]
 except :
  pass
  if 43 - 43: O0 - O00oOoOoO0o0O + i11iIiiIii * i1IIi - Oo0ooO0oo0oO % O00oOoOoO0o0O
  if 23 - 23: OoooooooOO % o0oOOo0O0Ooo + OoO0O00
  if 25 - 25: O00oOoOoO0o0O % OOooOOo + Ii1I * I1ii11iIi11i
  if 25 - 25: iIii1I11I1II1 * OoOoOO00 % I1IiiI + O00oOoOoO0o0O
 i1iiI1ii = int ( ii ) + oO0oO00
 IiiiI11111I1 = float ( ooOo0OoOooo00 ) + O0o0oO / 1024 / 1024
 if 96 - 96: iii1I1I + Oo0ooO0oo0oO
 Oo ( 'totaltempfiles' , str ( i1iiI1ii ) )
 Oo ( 'totalspacegained' , str ( IiiiI11111I1 ) )
 if 100 - 100: OOooOOo . Oo0ooO0oo0oO + Ii1I + Ii1I
 IiiiI11111I1 = '%.2f' % float ( IiiiI11111I1 )
 if 70 - 70: Oo0ooO0oo0oO . iIii1I11I1II1 / oO0o
 OooOO000 . setSetting ( "totaltempfiles" , str ( i1iiI1ii ) )
 OooOO000 . setSetting ( "totalspacegained" , str ( IiiiI11111I1 ) )
 if 18 - 18: Ii1I / OoooooooOO % i1IIi * o0oOOo0O0Ooo
 if 70 - 70: O00oOoOoO0o0O % i1IIi / O00oOoOoO0o0O - o0oOOo0O0Ooo . Oo0Ooo / O0
 if 54 - 54: o0oOOo0O0Ooo
 if 53 - 53: II111iiii / O00oOoOoO0o0O . i1IIi + O0oo0OO0 / OoO0O00 - OoooooooOO
 if 67 - 67: Oo0ooO0oo0oO . Ii1I - Oo0Ooo * iii1I1I . I11i - OOooOOo
 if 10 - 10: I11i
 if 37 - 37: o0oOOo0O0Ooo / I1IiiI * oO0o / II111iiii
 if 39 - 39: O00oOoOoO0o0O - i1IIi - O00oOoOoO0o0O - OoooooooOO - I1ii11iIi11i
 Oo0O0OO0OoO0 ( ii1iII1II )
 Ii11IiiI1 = ii1I1IIii11
 iiiOOOoo0Oo00 = O0o0oO / 1024 / 1024
 O0o0oo0oOO0oO . setLabel ( '[COLOR=lightgray]' + str ( Ii11IiiI1 ) + '[/COLOR]' )
 iIiIII1iI1111 . setLabel ( '[COLOR=lightgray]' + str ( iiiOOOoo0Oo00 ) + ' MB[/COLOR]' )
 if 66 - 66: O00oOoOoO0o0O + i1IIi
 try :
  if 21 - 21: O00oOoOoO0o0O / i11iIiiIii / OoOoOO00
  with open ( iii , 'r' , 0 ) as o0o0Ooo0 :
   OoO000O = json . load ( o0o0Ooo0 )
   if 75 - 75: Ii1I . i1IIi / I1IiiI * iii1I1I . O00oOoOoO0o0O / OoOoOO00
  i1IiiiiIi1I . setLabel ( '[COLOR=darkgray]' + ooO ( "totalfilesdeleted" ) + '[/COLOR]' )
  iIIoOo = OoO000O [ 'totaltempfiles' ]
  iiioO = i1IiiiiIi1I . getLabel ( )
  i1IiiiiIi1I . setLabel ( iiioO + '[COLOR=darkgray]' + iIIoOo + '[/COLOR]' )
  if 58 - 58: Oo0ooO0oo0oO + OOooOOo / Oo0ooO0oo0oO / i11iIiiIii
  if 95 - 95: Oo0ooO0oo0oO
  ii1i . setLabel ( '[COLOR=darkgray]' + ooO ( "totalspacegained" ) + '[/COLOR]' )
  ooOo0OoOooo00 = OoO000O [ 'totalspacegained' ]
  II1 = int ( round ( float ( ooOo0OoOooo00 ) ) )
  iiioO = ii1i . getLabel ( )
  ii1i . setLabel ( iiioO + '[COLOR=darkgray]' + str ( II1 ) + ' MB[/COLOR]' )
  if 10 - 10: OoO0O00 % Oo0ooO0oo0oO * o0oOOo0O0Ooo
 except :
  pass
  if 37 - 37: Ii1I . o0oOOo0O0Ooo
 OOooo = xbmcgui . Dialog ( )
 OOooo . ok ( ooO ( "packagesdel" ) , str ( iI1I1i1i ) + ooO ( "packagesdel2" ) )
 if 34 - 34: Oo0ooO0oo0oO * O00oOoOoO0o0O . Ii1I + iIii1I11I1II1
 if 1 - 1: i11iIiiIii + I11i
def Ii1I11i1I1 ( ) :
 if 78 - 78: Ii1I % Oo0Ooo / OoO0O00 . iIii1I11I1II1 . II111iiii
 global IIIIiIiIi1
 global I11iiiiI1i
 global ii1I1IIii11
 global O0o0oO
 if 67 - 67: oO0o % O0oo0OO0
 IIIIiIiIi1 = 0
 I11iiiiI1i = 0
 ii1I1IIii11 = 0
 O0o0oO = 0
 if 72 - 72: I1IiiI . i11iIiiIii . OoOoOO00 + I1IiiI - O0oo0OO0 + iii1I1I
 Oo0O0OO0OoO0 ( IiII )
 IIIIiIiIi1 = IIIIiIiIi1 + ii1I1IIii11
 I11iiiiI1i = I11iiiiI1i + ( O0o0oO / 1024 / 1024 )
 if 15 - 15: I1IiiI
 ii1I1IIii11 = 0
 O0o0oO = 0
 if 88 - 88: O00oOoOoO0o0O / I1ii11iIi11i % I11i + i11iIiiIii * O0 . O0oo0OO0
 Oo0O0OO0OoO0 ( o0O )
 IIIIiIiIi1 = IIIIiIiIi1 + ii1I1IIii11
 I11iiiiI1i = I11iiiiI1i + ( O0o0oO / 1024 / 1024 )
 if 69 - 69: Oo0Ooo - OOooOOo / I1IiiI . i11iIiiIii * OoO0O00
 ii1I1IIii11 = 0
 O0o0oO = 0
 if 45 - 45: O0oo0OO0 + OOooOOo
 I1iIi1iIIIIiI ( )
 IIIIiIiIi1 = IIIIiIiIi1 + ii1I1IIii11
 I11iiiiI1i = I11iiiiI1i + ( O0o0oO / 1024 / 1024 )
 if 78 - 78: OoOoOO00 . Oo0Ooo % I11i
 if 7 - 7: I1ii11iIi11i % Ii1I . OoooooooOO - iii1I1I
 if 18 - 18: O0 * OoooooooOO % O00oOoOoO0o0O - iIii1I11I1II1 % O00oOoOoO0o0O * o0oOOo0O0Ooo
 if 13 - 13: OoO0O00 + i11iIiiIii + O0 / Oo0ooO0oo0oO % iIii1I11I1II1
 try :
  if 75 - 75: oO0o / i1IIi / Ii1I * Oo0Ooo
  if 75 - 75: Oo0Ooo / OoooooooOO
  with open ( iii , 'r' , 0 ) as o0o0Ooo0 :
   OoO000O = json . load ( o0o0Ooo0 )
   if 98 - 98: II111iiii - O0oo0OO0 . Oo0ooO0oo0oO * iii1I1I
   OOoOi1IiiI = OoO000O [ 'cacheinclude_genesis' ]
   O0OOO0 = OoO000O [ 'cacheinclude_navix' ]
   o0OIi = OoO000O [ 'cacheinclude_youtube' ]
   IIi1iiI = OoO000O [ 'cacheinclude_ivue' ]
   o0ooOO00OO0o0O = OoO000O [ 'cacheinclude_salts' ]
   III1IiiIiiI1i = OoO000O [ 'cacheinclude_pulsar' ]
   if 49 - 49: I1ii11iIi11i / OoooooooOO - I11i
   if 76 - 76: i1IIi . OoO0O00 . O0 / OOooOOo - iii1I1I
  if OOoOi1IiiI == "yes" :
   if 60 - 60: I1IiiI
   o0OO0OO000OO = translate ( 'special://home/userdata/addon_data/plugin.video.genesis' )
   if 3 - 3: II111iiii % O00oOoOoO0o0O % I1IiiI - I1IiiI . O0oo0OO0 - OoOoOO00
   ii1I1IIii11 = 0
   O0o0oO = 0
   if 18 - 18: O0
   OOOo0oO = os . path . join ( xbmc . translatePath ( o0OO0OO000OO ) , 'cache.db' )
   ooo0O = os . path . join ( xbmc . translatePath ( o0OO0OO000OO ) , 'sources.db' )
   if 26 - 26: i1IIi - iIii1I11I1II1
   iIIIiIi1i = os . path . join ( xbmc . translatePath ( o0OO0OO000OO ) , 'meta.db' )
   iiIiiIi = os . path . join ( xbmc . translatePath ( o0OO0OO000OO ) , 'moviefarsi.db' )
   if 8 - 8: O0oo0OO0
   if 86 - 86: i1IIi
   if 26 - 26: o0oOOo0O0Ooo % O0oo0OO0 / Oo0Ooo
   OoOoO00o00 = os . path . getsize ( OOOo0oO )
   OOooooO0o0O0 = os . path . getsize ( ooo0O )
   if 68 - 68: II111iiii / Oo0Ooo / Oo0Ooo
   o00o0o000Oo = os . path . getsize ( iIIIiIi1i )
   Oooo00OOo = os . path . getsize ( iiIiiIi )
   if 1 - 1: Oo0Ooo
   if 73 - 73: Ii1I * iIii1I11I1II1 / o0oOOo0O0Ooo - o0oOOo0O0Ooo / i1IIi
   if OoOoO00o00 > 0 :
    IIIIiIiIi1 = IIIIiIiIi1 + 1
    if 64 - 64: Ii1I * I1ii11iIi11i % II111iiii
    if 31 - 31: iIii1I11I1II1 % Oo0Ooo . I1IiiI % Oo0ooO0oo0oO
   if OOooooO0o0O0 > 0 :
    IIIIiIiIi1 = IIIIiIiIi1 + 1
    if 38 - 38: I1ii11iIi11i + O0oo0OO0 * I11i / OoO0O00 + o0oOOo0O0Ooo
    if 46 - 46: iii1I1I
    if 56 - 56: Oo0Ooo / II111iiii
    if 61 - 61: Ii1I - i1IIi / Oo0ooO0oo0oO - Oo0Ooo / O00oOoOoO0o0O % Oo0Ooo
    if 53 - 53: OoooooooOO + iii1I1I % II111iiii * O00oOoOoO0o0O
   if o00o0o000Oo > 0 :
    IIIIiIiIi1 = IIIIiIiIi1 + 1
    if 10 - 10: OoOoOO00 % I11i
   if Oooo00OOo > 0 :
    IIIIiIiIi1 = IIIIiIiIi1 + 1
    if 46 - 46: i1IIi % O00oOoOoO0o0O
    if 45 - 45: I1ii11iIi11i / I1ii11iIi11i - OoO0O00
    if 54 - 54: Ii1I + I1IiiI * OoOoOO00 + oO0o
    if 10 - 10: Ii1I - I1IiiI / O00oOoOoO0o0O / iii1I1I - O0oo0OO0 - o0oOOo0O0Ooo
    if 75 - 75: OOooOOo . Oo0ooO0oo0oO
   I11iiiiI1i = I11iiiiI1i + ( OoOoO00o00 / 1024 / 1024 ) + ( OOooooO0o0O0 / 1024 / 1024 ) + ( o00o0o000Oo / 1024 / 1024 ) + ( Oooo00OOo / 1024 / 1024 )
   if 32 - 32: i1IIi / I11i + iIii1I11I1II1 . OOooOOo
   if 67 - 67: iii1I1I - OoO0O00 % I1ii11iIi11i * Oo0Ooo
   if 51 - 51: I1IiiI + O0
   if 4 - 4: Oo0ooO0oo0oO / OoO0O00 * iIii1I11I1II1 * iIii1I11I1II1
  if O0OOO0 == "yes" :
   if 33 - 33: iii1I1I . iIii1I11I1II1 - Ii1I
   if 85 - 85: OoOoOO00
   IiiiIIiii = translate ( 'special://home/userdata/addon_data/script.navi-x/cache' )
   if 57 - 57: Oo0Ooo - II111iiii - I1ii11iIi11i * oO0o
   ii1I1IIii11 = 0
   O0o0oO = 0
   if 41 - 41: I11i / Oo0ooO0oo0oO + O00oOoOoO0o0O % OoooooooOO
   Oo0O0OO0OoO0 ( IiiiIIiii )
   IIIIiIiIi1 = IIIIiIiIi1 + ii1I1IIii11
   I11iiiiI1i = I11iiiiI1i + ( O0o0oO / 1024 / 1024 )
   if 72 - 72: Ii1I
   if 22 - 22: o0oOOo0O0Ooo / OoO0O00 + OoOoOO00 + Ii1I . II111iiii * I11i
  if o0OIi == "yes" :
   if 85 - 85: i11iIiiIii / I11i
   if 28 - 28: i11iIiiIii + O00oOoOoO0o0O / I11i . Ii1I / OoO0O00
   i1i1iIiI = translate ( 'special://home/userdata/addon_data/plugin.video.youtube/kodion' )
   if 100 - 100: o0oOOo0O0Ooo - I11i . o0oOOo0O0Ooo
   ii1I1IIii11 = 0
   O0o0oO = 0
   if 90 - 90: OoOoOO00 / II111iiii / I11i * I11i - iIii1I11I1II1
   Oo0O0OO0OoO0 ( i1i1iIiI )
   IIIIiIiIi1 = IIIIiIiIi1 + ii1I1IIii11
   I11iiiiI1i = I11iiiiI1i + ( O0o0oO / 1024 / 1024 )
   if 87 - 87: O00oOoOoO0o0O
   if 92 - 92: OoO0O00 / O00oOoOoO0o0O - Oo0ooO0oo0oO
  if IIi1iiI == "yes" :
   if 45 - 45: iii1I1I - I11i * Oo0ooO0oo0oO * OOooOOo / O0oo0OO0 * iii1I1I
   oOOO0OO = translate ( 'special://home/userdata/addon_data/script.tvguidetecbox' )
   if 33 - 33: iIii1I11I1II1 % I1ii11iIi11i - OOooOOo % iIii1I11I1II1 + I11i / i11iIiiIii
   ii1I1IIii11 = 0
   O0o0oO = 0
   if 64 - 64: I11i * Oo0ooO0oo0oO / OoooooooOO
   for o00oo , O0oO0oo0O , oooOOO0ooOoOOO in os . walk ( oOOO0OO ) :
    for o0o0Ooo0 in oooOOO0ooOoOOO :
     o0IiIiI111IIII1 = os . path . join ( o00oo , o0o0Ooo0 )
     if not o0o0Ooo0 == "settings.xml" :
      O0o0oO += os . path . getsize ( o0IiIiI111IIII1 )
      ii1I1IIii11 = ii1I1IIii11 + 1
      if 38 - 38: iIii1I11I1II1 . OoO0O00 * OoOoOO00 + OoOoOO00 + Oo0ooO0oo0oO
   IIIIiIiIi1 = IIIIiIiIi1 + ii1I1IIii11
   I11iiiiI1i = I11iiiiI1i + ( O0o0oO / 1024 / 1024 )
   if 44 - 44: I1ii11iIi11i * OOooOOo % OoO0O00 . I1IiiI % Ii1I + II111iiii
   if 100 - 100: oO0o - II111iiii . o0oOOo0O0Ooo
   if 63 - 63: OoOoOO00 % O00oOoOoO0o0O . iii1I1I
  if o0ooOO00OO0o0O == "yes" :
   if 44 - 44: I1IiiI
   OoOO00oo0o = translate ( 'special://home/userdata/addon_data/plugin.video.salts' )
   if 25 - 25: oO0o
   ii1I1IIii11 = 0
   O0o0oO = 0
   if 100 - 100: I1IiiI / O00oOoOoO0o0O + OoO0O00 . iii1I1I
   if 39 - 39: OoooooooOO * OOooOOo - OoO0O00
   for o00oo , O0oO0oo0O , oooOOO0ooOoOOO in os . walk ( OoOO00oo0o ) :
    for o0o0Ooo0 in oooOOO0ooOoOOO :
     o0IiIiI111IIII1 = os . path . join ( o00oo , o0o0Ooo0 )
     if not o0o0Ooo0 == "settings.xml" :
      O0o0oO += os . path . getsize ( o0IiIiI111IIII1 )
      ii1I1IIii11 = ii1I1IIii11 + 1
      if 3 - 3: I11i . i11iIiiIii % Oo0Ooo % II111iiii . I11i
   IIIIiIiIi1 = int ( IIIIiIiIi1 ) + ii1I1IIii11
   I11iiiiI1i = int ( I11iiiiI1i ) + ( O0o0oO / 1024 / 1024 )
   if 88 - 88: iIii1I11I1II1 . OOooOOo % iii1I1I
   if 72 - 72: Oo0ooO0oo0oO + i11iIiiIii / i1IIi
   if 64 - 64: OOooOOo - OOooOOo
  if III1IiiIiiI1i == "yes" :
   if 42 - 42: i1IIi / Oo0ooO0oo0oO . O0oo0OO0 % OoOoOO00
   O0oO0o0oOOO0o = translate ( 'special://home/userdata/addon_data/plugin.video.pulsar/cache' )
   if 67 - 67: i1IIi * i11iIiiIii * I1IiiI
   ii1I1IIii11 = 0
   O0o0oO = 0
   if 23 - 23: Oo0Ooo
   Oo0O0OO0OoO0 ( O0oO0o0oOOO0o )
   IIIIiIiIi1 = IIIIiIiIi1 + ii1I1IIii11
   I11iiiiI1i = I11iiiiI1i + ( O0o0oO / 1024 / 1024 )
   if 81 - 81: O0oo0OO0 % II111iiii - Oo0Ooo / I1IiiI + i11iIiiIii . I11i
   if 67 - 67: Oo0ooO0oo0oO . O0oo0OO0 . Oo0Ooo . Ii1I + iIii1I11I1II1 / OoooooooOO
   if 93 - 93: Oo0ooO0oo0oO * OoO0O00 - O0oo0OO0 / I1ii11iIi11i
   if 60 - 60: OoO0O00 / oO0o . I1IiiI + OoOoOO00 + I1ii11iIi11i % Ii1I
   if 70 - 70: i1IIi * II111iiii * I1IiiI
 except :
  if 7 - 7: OoooooooOO + II111iiii % o0oOOo0O0Ooo * O0 . OoO0O00 * OoooooooOO
  pass
  if 20 - 20: Oo0Ooo % OOooOOo
def i11i1i1i1I ( ) :
 if 75 - 75: i11iIiiIii * OOooOOo / I11i / O0
 print 'delete packages selected'
 if 56 - 56: I1ii11iIi11i % O00oOoOoO0o0O
 global IIIIiIiIi1
 global I11iiiiI1i
 global ii1I1IIii11
 global O0o0oO
 if 66 - 66: O0oo0OO0 % I1ii11iIi11i
 if 77 - 77: I11i % iIii1I11I1II1 . iIii1I11I1II1 + oO0o % i11iIiiIii . O00oOoOoO0o0O
 if 33 - 33: O00oOoOoO0o0O - OOooOOo / i11iIiiIii * iIii1I11I1II1
 OooOO000 . setSetting ( "lastclearedcache" , str ( datetime . date . today ( ) ) )
 if 2 - 2: i11iIiiIii % Oo0ooO0oo0oO
 o0O = os . path . join ( xbmc . translatePath ( 'special://home' ) , 'cache' )
 IiII = os . path . join ( xbmc . translatePath ( 'special://home' ) , 'temp' )
 oO0oO00 = 0
 O0o0oO = 0.0000
 if 56 - 56: O00oOoOoO0o0O % Oo0ooO0oo0oO + I1IiiI % I11i - OOooOOo
 if 82 - 82: OoooooooOO . i1IIi . OoO0O00 . OoO0O00
 try :
  for O0000ooO0OOo , OoiIiI1IiIII , ooooo0 in os . walk ( o0O ) :
   iI1I1i1i = 0
   iI1I1i1i += len ( ooooo0 )
   oO0oO00 = oO0oO00 + iI1I1i1i
   if iI1I1i1i > 0 :
    for o0o0Ooo0 in ooooo0 :
     o0IiIiI111IIII1 = os . path . join ( O0000ooO0OOo , o0o0Ooo0 )
     O0o0oO += os . path . getsize ( o0IiIiI111IIII1 )
     if 31 - 31: iIii1I11I1II1
     try :
      os . unlink ( os . path . join ( O0000ooO0OOo , o0o0Ooo0 ) )
     except :
      pass
      if 64 - 64: Oo0ooO0oo0oO
    for O00oo00oO in OoiIiI1IiIII :
     try :
      shutil . rmtree ( os . path . join ( O0000ooO0OOo , O00oo00oO ) )
     except :
      pass
      if 30 - 30: OoO0O00 + o0oOOo0O0Ooo / iIii1I11I1II1
  for O0000ooO0OOo , OoiIiI1IiIII , ooooo0 in os . walk ( IiII ) :
   iI1I1i1i = 0
   iI1I1i1i += len ( ooooo0 )
   oO0oO00 = oO0oO00 + iI1I1i1i
   if iI1I1i1i > 0 :
    for o0o0Ooo0 in ooooo0 :
     try :
      if ( o0o0Ooo0 == "xbmc.log" or o0o0Ooo0 == "xbmc.old.log" or o0o0Ooo0 == "kodi.log" or o0o0Ooo0 == "kodi.old.log" ) : continue
      if 69 - 69: O00oOoOoO0o0O - OoooooooOO + iii1I1I + iii1I1I - Ii1I
      o0IiIiI111IIII1 = os . path . join ( O0000ooO0OOo , o0o0Ooo0 )
      O0o0oO += os . path . getsize ( o0IiIiI111IIII1 )
      if 27 - 27: I1ii11iIi11i % Oo0Ooo * iIii1I11I1II1 * O0 / I11i * Oo0Ooo
      os . unlink ( os . path . join ( O0000ooO0OOo , o0o0Ooo0 ) )
     except :
      pass
    for O00oo00oO in OoiIiI1IiIII :
     try :
      shutil . rmtree ( os . path . join ( O0000ooO0OOo , O00oo00oO ) )
     except :
      pass
      if 97 - 97: O00oOoOoO0o0O % Oo0Ooo % OoOoOO00
      if 87 - 87: i11iIiiIii . oO0o * I1IiiI * O0oo0OO0
  for O0oooo000oO0 in os . listdir ( I1IiiiiI ) :
   OoOoO00OOoOOOo0 = os . path . join ( I1IiiiiI , O0oooo000oO0 )
   if os . path . isfile ( OoOoO00OOoOOOo0 ) :
    if ( O0oooo000oO0 == "xbmc.log" or O0oooo000oO0 == "xbmc.old.log" or O0oooo000oO0 == "kodi.log" or O0oooo000oO0 == "kodi.old.log" ) : continue
    o0IiIiI111IIII1 = os . path . join ( O0000ooO0OOo , o0o0Ooo0 )
    O0o0oO += os . path . getsize ( o0IiIiI111IIII1 )
    os . unlink ( OoOoO00OOoOOOo0 )
    oO0oO00 = oO0oO00 + 1
    if 57 - 57: iIii1I11I1II1 / i11iIiiIii / O00oOoOoO0o0O + I1ii11iIi11i % I1IiiI
    if 80 - 80: iIii1I11I1II1
    if 23 - 23: II111iiii . Oo0ooO0oo0oO % O0oo0OO0
    if 39 - 39: OoooooooOO
    if 10 - 10: Oo0Ooo * iii1I1I
    if 78 - 78: Oo0Ooo / i11iIiiIii - I1IiiI
    if 51 - 51: Oo0ooO0oo0oO / Oo0Ooo - O0oo0OO0 - iii1I1I
 except :
  pass
  if 68 - 68: I1ii11iIi11i - iIii1I11I1II1 * OoooooooOO
  if 44 - 44: OoooooooOO + O0oo0OO0 + OoO0O00
  if 15 - 15: iIii1I11I1II1 % i1IIi + iii1I1I
  if 48 - 48: o0oOOo0O0Ooo / oO0o
  if 61 - 61: I1IiiI + iii1I1I * Ii1I % O0oo0OO0 . Ii1I
  if 83 - 83: i11iIiiIii * OoOoOO00 * i11iIiiIii % II111iiii . i11iIiiIii * I11i
  if 67 - 67: i1IIi / i1IIi + O00oOoOoO0o0O . oO0o
  if 70 - 70: i1IIi . I11i * o0oOOo0O0Ooo . iii1I1I
 try :
  if 75 - 75: oO0o * OoO0O00 * I11i + oO0o + O0 . O0oo0OO0
  with open ( iii , 'r' , 0 ) as o0o0Ooo0 :
   OoO000O = json . load ( o0o0Ooo0 )
   if 8 - 8: I1ii11iIi11i / i1IIi - I1ii11iIi11i + Ii1I + OoO0O00 - I11i
   ii = OoO000O [ 'totaltempfiles' ]
   ooOo0OoOooo00 = OoO000O [ 'totalspacegained' ]
   if 79 - 79: OoooooooOO - O0oo0OO0 * I1IiiI . O0oo0OO0 - iIii1I11I1II1
   OOoOi1IiiI = OoO000O [ 'cacheinclude_genesis' ]
   O0OOO0 = OoO000O [ 'cacheinclude_navix' ]
   o0OIi = OoO000O [ 'cacheinclude_youtube' ]
   IIi1iiI = OoO000O [ 'cacheinclude_ivue' ]
   o0ooOO00OO0o0O = OoO000O [ 'cacheinclude_salts' ]
   III1IiiIiiI1i = OoO000O [ 'cacheinclude_pulsar' ]
   if 27 - 27: OoOoOO00 % OoOoOO00 % II111iiii
   if 45 - 45: iIii1I11I1II1 . o0oOOo0O0Ooo % I1IiiI
   if 10 - 10: I1IiiI / i1IIi * o0oOOo0O0Ooo + Oo0Ooo - OoOoOO00 % iii1I1I
   if 88 - 88: Ii1I % Ii1I
  if o000oo == "true" :
   print 'cacheinclude_genesis_setting = ' + str ( OOoOi1IiiI )
   print 'cacheinclude_navix_setting = ' + str ( O0OOO0 )
   print 'cacheinclude_youtube_setting = ' + str ( o0OIi )
   print 'cacheinclude_ivue_setting = ' + str ( IIi1iiI )
   print 'cacheinclude_salts_setting = ' + str ( o0ooOO00OO0o0O )
   print 'cacheinclude_pulsar_setting = ' + str ( III1IiiIiiI1i )
   if 29 - 29: OOooOOo % I1ii11iIi11i
   if 57 - 57: I1ii11iIi11i - OoOoOO00 + O00oOoOoO0o0O
   if 58 - 58: OOooOOo % I1IiiI / oO0o . Oo0ooO0oo0oO . OoO0O00 / O00oOoOoO0o0O
  if OOoOi1IiiI == "yes" :
   if 72 - 72: Oo0ooO0oo0oO + Oo0ooO0oo0oO + o0oOOo0O0Ooo - o0oOOo0O0Ooo % Ii1I
   o0OO0OO000OO = translate ( 'special://home/userdata/addon_data/plugin.video.genesis' )
   if 52 - 52: I11i % i1IIi . I1ii11iIi11i
   o0O0o0OOo = os . path . join ( xbmc . translatePath ( o0OO0OO000OO ) , 'cache.db' )
   O0o0oO += os . path . getsize ( o0O0o0OOo )
   os . unlink ( o0O0o0OOo )
   oO0oO00 = oO0oO00 + 1
   if 64 - 64: oO0o . OoOoOO00 + iIii1I11I1II1 - o0oOOo0O0Ooo % Oo0Ooo % iii1I1I
   if 30 - 30: O00oOoOoO0o0O * I1ii11iIi11i % I1ii11iIi11i % iii1I1I - i11iIiiIii % I1ii11iIi11i
   o0O0o0OOo = os . path . join ( xbmc . translatePath ( o0OO0OO000OO ) , 'sources.db' )
   O0o0oO += os . path . getsize ( o0O0o0OOo )
   os . unlink ( o0O0o0OOo )
   oO0oO00 = oO0oO00 + 1
   if 65 - 65: i11iIiiIii
   if 75 - 75: OOooOOo % I1ii11iIi11i
   o0O0o0OOo = os . path . join ( xbmc . translatePath ( o0OO0OO000OO ) , 'meta.db' )
   O0o0oO += os . path . getsize ( o0O0o0OOo )
   os . unlink ( o0O0o0OOo )
   oO0oO00 = oO0oO00 + 1
   if 40 - 40: I1IiiI / I1IiiI
   if 26 - 26: i11iIiiIii % OoO0O00 % Ii1I - Oo0ooO0oo0oO
   o0O0o0OOo = os . path . join ( xbmc . translatePath ( o0OO0OO000OO ) , 'moviefarsi.db' )
   O0o0oO += os . path . getsize ( o0O0o0OOo )
   os . unlink ( o0O0o0OOo )
   oO0oO00 = oO0oO00 + 1
   if 2 - 2: II111iiii . o0oOOo0O0Ooo * OoooooooOO + OoooooooOO
   if 18 - 18: II111iiii * OOooOOo * OoO0O00 * iIii1I11I1II1 % o0oOOo0O0Ooo / O00oOoOoO0o0O
   o0O0o0OOo = os . path . join ( xbmc . translatePath ( o0OO0OO000OO ) , 'filmikz.db' )
   O0o0oO += os . path . getsize ( o0O0o0OOo )
   os . unlink ( o0O0o0OOo )
   oO0oO00 = oO0oO00 + 1
   if 95 - 95: I1ii11iIi11i + I1IiiI . OoooooooOO
   if 22 - 22: O0oo0OO0 / O0oo0OO0 / OOooOOo + OoOoOO00 % O0oo0OO0 / Ii1I
   if 14 - 14: o0oOOo0O0Ooo % i11iIiiIii + i11iIiiIii - I1ii11iIi11i % I1ii11iIi11i
   if 26 - 26: oO0o + OoooooooOO % o0oOOo0O0Ooo
   if 96 - 96: Oo0ooO0oo0oO * OoOoOO00 - II111iiii
   if 40 - 40: oO0o * OOooOOo + Ii1I + I11i * Ii1I + OoooooooOO
  if O0OOO0 == "yes" :
   if 77 - 77: OOooOOo + Oo0ooO0oo0oO / O0
   if 16 - 16: Oo0ooO0oo0oO + Oo0Ooo * Oo0Ooo . I11i - O00oOoOoO0o0O
   IiiiIIiii = translate ( 'special://home/userdata/addon_data/script.navi-x/cache' )
   if 49 - 49: Oo0ooO0oo0oO . Ii1I
   for O0000ooO0OOo , OoiIiI1IiIII , ooooo0 in os . walk ( IiiiIIiii ) :
    iI1I1i1i = 0
    iI1I1i1i += len ( ooooo0 )
    oO0oO00 = oO0oO00 + iI1I1i1i
    if iI1I1i1i > 0 :
     for o0o0Ooo0 in ooooo0 :
      try :
       o0IiIiI111IIII1 = os . path . join ( O0000ooO0OOo , o0o0Ooo0 )
       O0o0oO += os . path . getsize ( o0IiIiI111IIII1 )
       if 75 - 75: OOooOOo / II111iiii - Oo0Ooo + O0oo0OO0
       os . unlink ( os . path . join ( O0000ooO0OOo , o0o0Ooo0 ) )
      except :
       pass
     for O00oo00oO in OoiIiI1IiIII :
      try :
       shutil . rmtree ( os . path . join ( O0000ooO0OOo , O00oo00oO ) )
      except :
       pass
       if 42 - 42: OoooooooOO * II111iiii + Ii1I % OoO0O00 / O0oo0OO0
       if 11 - 11: Oo0ooO0oo0oO / Oo0Ooo + i1IIi / O00oOoOoO0o0O
       if 4 - 4: iii1I1I - Oo0Ooo
  if o0OIi == "yes" :
   if 100 - 100: OOooOOo . i1IIi
   if 15 - 15: O0 % Oo0Ooo % o0oOOo0O0Ooo . Oo0ooO0oo0oO * iii1I1I % O0
   i1i1iIiI = translate ( 'special://home/userdata/addon_data/plugin.video.youtube/kodion' )
   if 31 - 31: i1IIi . Ii1I - OoooooooOO * I11i * Oo0ooO0oo0oO % oO0o
   if 61 - 61: O0oo0OO0 . Ii1I * I1ii11iIi11i
   for O0000ooO0OOo , OoiIiI1IiIII , ooooo0 in os . walk ( i1i1iIiI ) :
    iI1I1i1i = 0
    iI1I1i1i += len ( ooooo0 )
    oO0oO00 = oO0oO00 + iI1I1i1i
    if iI1I1i1i > 0 :
     for o0o0Ooo0 in ooooo0 :
      try :
       o0IiIiI111IIII1 = os . path . join ( O0000ooO0OOo , o0o0Ooo0 )
       O0o0oO += os . path . getsize ( o0IiIiI111IIII1 )
       if 59 - 59: OoOoOO00 + Oo0Ooo . I1ii11iIi11i - Ii1I
       os . unlink ( os . path . join ( O0000ooO0OOo , o0o0Ooo0 ) )
      except :
       pass
     for O00oo00oO in OoiIiI1IiIII :
      try :
       shutil . rmtree ( os . path . join ( O0000ooO0OOo , O00oo00oO ) )
      except :
       pass
       if 48 - 48: O0oo0OO0 % Ii1I + I1IiiI * OoooooooOO % OoOoOO00 % i11iIiiIii
       if 13 - 13: iii1I1I % i1IIi
       if 13 - 13: iii1I1I / OoooooooOO + Ii1I / iii1I1I
       if 29 - 29: OOooOOo + Oo0ooO0oo0oO % o0oOOo0O0Ooo
  if IIi1iiI == "yes" :
   if 18 - 18: I11i + OoO0O00 + OoO0O00 . Oo0ooO0oo0oO
   oOOO0OO = translate ( 'special://home/userdata/addon_data/script.tvguidetecbox' )
   if 37 - 37: i1IIi . O00oOoOoO0o0O + I1IiiI % OoOoOO00
   if 3 - 3: i11iIiiIii + Ii1I % O00oOoOoO0o0O - O0oo0OO0 / Oo0Ooo % iIii1I11I1II1
   for O0000ooO0OOo , OoiIiI1IiIII , ooooo0 in os . walk ( oOOO0OO ) :
    iI1I1i1i = 0
    iI1I1i1i += len ( ooooo0 )
    oO0oO00 = oO0oO00 + iI1I1i1i
    if iI1I1i1i > 0 :
     for o0o0Ooo0 in ooooo0 :
      if not o0o0Ooo0 == "settings.xml" :
       try :
        o0IiIiI111IIII1 = os . path . join ( O0000ooO0OOo , o0o0Ooo0 )
        O0o0oO += os . path . getsize ( o0IiIiI111IIII1 )
        if 86 - 86: Oo0Ooo + Oo0Ooo * oO0o * I1IiiI
        os . unlink ( os . path . join ( O0000ooO0OOo , o0o0Ooo0 ) )
       except :
        pass
        if 95 - 95: O00oOoOoO0o0O - OoO0O00 + OOooOOo
     for O00oo00oO in OoiIiI1IiIII :
      try :
       shutil . rmtree ( os . path . join ( O0000ooO0OOo , O00oo00oO ) )
      except :
       pass
       if 33 - 33: o0oOOo0O0Ooo . i11iIiiIii . Oo0ooO0oo0oO
       if 100 - 100: i11iIiiIii % O0oo0OO0 - OoO0O00 + O0oo0OO0 / i11iIiiIii + OOooOOo
       if 55 - 55: i11iIiiIii / O0oo0OO0 . OOooOOo - OoO0O00
  if o0ooOO00OO0o0O == "yes" :
   if 60 - 60: OoOoOO00 / i1IIi . Ii1I - OoO0O00 - OoooooooOO
   OoOO00oo0o = translate ( 'special://home/userdata/addon_data/plugin.video.salts' )
   if 39 - 39: I1IiiI + i1IIi * OoO0O00 % I11i
   if 41 - 41: I1ii11iIi11i * O00oOoOoO0o0O
   for O0000ooO0OOo , OoiIiI1IiIII , ooooo0 in os . walk ( OoOO00oo0o ) :
    iI1I1i1i = 0
    iI1I1i1i += len ( ooooo0 )
    oO0oO00 = oO0oO00 + iI1I1i1i
    if iI1I1i1i > 0 :
     for o0o0Ooo0 in ooooo0 :
      if not o0o0Ooo0 == "settings.xml" :
       try :
        o0IiIiI111IIII1 = os . path . join ( O0000ooO0OOo , o0o0Ooo0 )
        O0o0oO += os . path . getsize ( o0IiIiI111IIII1 )
        if 16 - 16: O0oo0OO0 % iIii1I11I1II1 / I1IiiI * OoOoOO00 / O00oOoOoO0o0O / OoOoOO00
        os . unlink ( os . path . join ( O0000ooO0OOo , o0o0Ooo0 ) )
       except :
        pass
        if 29 - 29: OoooooooOO / oO0o
     for O00oo00oO in OoiIiI1IiIII :
      try :
       shutil . rmtree ( os . path . join ( O0000ooO0OOo , O00oo00oO ) )
      except :
       pass
       if 1 - 1: OoOoOO00 . i11iIiiIii % O0oo0OO0 + OoooooooOO - Oo0Ooo . I1ii11iIi11i
       if 46 - 46: i11iIiiIii + I11i - iIii1I11I1II1 / OoO0O00 - Oo0ooO0oo0oO / i1IIi
  if III1IiiIiiI1i == "yes" :
   if 44 - 44: o0oOOo0O0Ooo + Oo0Ooo
   O0oO0o0oOOO0o = translate ( 'special://home/userdata/addon_data/plugin.video.pulsar/cache' )
   if 46 - 46: OOooOOo % I1IiiI
   if 66 - 66: iIii1I11I1II1 . o0oOOo0O0Ooo - Oo0ooO0oo0oO
   for O0000ooO0OOo , OoiIiI1IiIII , ooooo0 in os . walk ( O0oO0o0oOOO0o ) :
    iI1I1i1i = 0
    iI1I1i1i += len ( ooooo0 )
    oO0oO00 = oO0oO00 + iI1I1i1i
    if iI1I1i1i > 0 :
     for o0o0Ooo0 in ooooo0 :
      try :
       o0IiIiI111IIII1 = os . path . join ( O0000ooO0OOo , o0o0Ooo0 )
       O0o0oO += os . path . getsize ( o0IiIiI111IIII1 )
       if 27 - 27: Oo0Ooo - i1IIi * OoooooooOO - OoOoOO00 + OoOoOO00
       os . unlink ( os . path . join ( O0000ooO0OOo , o0o0Ooo0 ) )
      except :
       pass
     for O00oo00oO in OoiIiI1IiIII :
      try :
       shutil . rmtree ( os . path . join ( O0000ooO0OOo , O00oo00oO ) )
      except :
       pass
       if 24 - 24: i1IIi . OoOoOO00 / O0oo0OO0 + O0
       if 86 - 86: Ii1I * OoOoOO00 % I1ii11iIi11i + OOooOOo
 except :
  if 85 - 85: iii1I1I % i11iIiiIii
  pass
  if 78 - 78: i11iIiiIii / I11i / Oo0Ooo + II111iiii - I1ii11iIi11i / I1ii11iIi11i
  if 28 - 28: iIii1I11I1II1 / O00oOoOoO0o0O - iIii1I11I1II1 . i1IIi - O0 * Oo0ooO0oo0oO
  if 41 - 41: Ii1I + O00oOoOoO0o0O
  if 37 - 37: O0oo0OO0 / o0oOOo0O0Ooo - Oo0ooO0oo0oO - OoooooooOO . I1ii11iIi11i % O0oo0OO0
 i1iiI1ii = int ( ii ) + oO0oO00
 IiiiI11111I1 = float ( ooOo0OoOooo00 ) + O0o0oO / 1024 / 1024
 if 53 - 53: I1IiiI % OOooOOo + Ii1I - Ii1I
 if 99 - 99: i1IIi * OoOoOO00 - i1IIi
 Oo ( 'totaltempfiles' , str ( i1iiI1ii ) )
 Oo ( 'totalspacegained' , str ( IiiiI11111I1 ) )
 if 65 - 65: OoO0O00 / i11iIiiIii + I1ii11iIi11i + OoOoOO00
 IiiiI11111I1 = '%.2f' % float ( IiiiI11111I1 )
 if 82 - 82: Ii1I * OOooOOo % Oo0ooO0oo0oO / OoO0O00 - Oo0Ooo . O0oo0OO0
 if 90 - 90: I11i * i11iIiiIii % i1IIi + O0oo0OO0 / OoO0O00
 OooOO000 . setSetting ( "totaltempfiles" , str ( i1iiI1ii ) )
 OooOO000 . setSetting ( "totalspacegained" , str ( IiiiI11111I1 ) )
 if 15 - 15: Oo0Ooo + oO0o . I11i % OoO0O00
 if 13 - 13: I1ii11iIi11i / Oo0ooO0oo0oO * O0oo0OO0
 if 45 - 45: I1ii11iIi11i - I11i
 if 60 - 60: OOooOOo - OOooOOo * OoOoOO00 / Ii1I % iii1I1I % Oo0Ooo
 if 75 - 75: iIii1I11I1II1 - O00oOoOoO0o0O - O0oo0OO0
 if 4 - 4: i11iIiiIii % OoooooooOO . i11iIiiIii
 if 61 - 61: iIii1I11I1II1 . Oo0Ooo . i1IIi
 if 45 - 45: O0oo0OO0
 if 49 - 49: i1IIi * iii1I1I - iIii1I11I1II1 % I11i * O0 / OoOoOO00
 Ii1I11i1I1 ( )
 IIIIII111Ii . setLabel ( '[COLOR=lightgray]' + str ( IIIIiIiIi1 ) + '[/COLOR]' )
 Ii1i1i . setLabel ( '[COLOR=lightgray]' + str ( I11iiiiI1i ) + ' MB[/COLOR]' )
 if 48 - 48: O00oOoOoO0o0O
 if 69 - 69: o0oOOo0O0Ooo % i11iIiiIii - OOooOOo - o0oOOo0O0Ooo
 if 98 - 98: o0oOOo0O0Ooo * OoO0O00 . OoooooooOO
 try :
  if 40 - 40: O0oo0OO0 + Oo0Ooo + O0oo0OO0
  with open ( iii , 'r' , 0 ) as o0o0Ooo0 :
   OoO000O = json . load ( o0o0Ooo0 )
   if 57 - 57: O0oo0OO0 / II111iiii % iii1I1I
   if 32 - 32: O00oOoOoO0o0O - OOooOOo + i11iIiiIii + I1IiiI . iii1I1I
  i1IiiiiIi1I . setLabel ( '[COLOR=darkgray]' + ooO ( "totalfilesdeleted" ) + '[/COLOR]' )
  iIIoOo = OoO000O [ 'totaltempfiles' ]
  iiioO = i1IiiiiIi1I . getLabel ( )
  i1IiiiiIi1I . setLabel ( iiioO + '[COLOR=darkgray]' + iIIoOo + '[/COLOR]' )
  if 75 - 75: o0oOOo0O0Ooo % o0oOOo0O0Ooo . I1IiiI / OoO0O00
  if 22 - 22: Oo0Ooo / iIii1I11I1II1 + o0oOOo0O0Ooo
  ii1i . setLabel ( '[COLOR=darkgray]' + ooO ( "totalspacegained" ) + '[/COLOR]' )
  ooOo0OoOooo00 = OoO000O [ 'totalspacegained' ]
  II1 = int ( round ( float ( ooOo0OoOooo00 ) ) )
  iiioO = ii1i . getLabel ( )
  ii1i . setLabel ( iiioO + '[COLOR=darkgray]' + str ( II1 ) + ' MB[/COLOR]' )
  if 16 - 16: II111iiii . Ii1I + O0oo0OO0 % i1IIi / i11iIiiIii + OOooOOo
  if 43 - 43: I1IiiI . Oo0Ooo + i1IIi + I11i / OoO0O00
 except :
  pass
  if 66 - 66: i11iIiiIii
  if 83 - 83: O0oo0OO0 / iIii1I11I1II1 - oO0o
 OOooo = xbmcgui . Dialog ( )
 OOooo . ok ( ooO ( "cachedeleted1" ) , str ( oO0oO00 ) + ooO ( "cachedeleted2" ) )
 if 3 - 3: OOooOOo - Oo0Ooo * I1IiiI - OoO0O00 / OOooOOo + O00oOoOoO0o0O
 if 83 - 83: i1IIi * i1IIi - II111iiii / OoooooooOO . Ii1I + O0oo0OO0
def iii1iIiiI1 ( ) :
 if 64 - 64: i1IIi + Ii1I - II111iiii % O0oo0OO0 / I11i
 global ii1I1IIii11
 global O0o0oO
 if 2 - 2: I11i * o0oOOo0O0Ooo * OoOoOO00 % I1IiiI . I1IiiI
 if 69 - 69: O0 % O0oo0OO0 - i1IIi
 if 50 - 50: I1ii11iIi11i
 if 97 - 97: Oo0ooO0oo0oO * iIii1I11I1II1 * i1IIi * II111iiii - OOooOOo - o0oOOo0O0Ooo
 OooOO000 . setSetting ( "lastclearedthumbnails" , str ( datetime . date . today ( ) ) )
 if 37 - 37: II111iiii
 Iii1I1I11iiI1 = xbmc . translatePath ( os . path . join ( 'special://home/userdata/Thumbnails' , '' ) )
 iI1I1i1i = 0
 O0o0oO = 0.00
 oO0oO00 = 0
 if 27 - 27: Oo0Ooo * OoooooooOO / I1IiiI
 try :
  for O0000ooO0OOo , OoiIiI1IiIII , ooooo0 in os . walk ( Iii1I1I11iiI1 ) :
   iI1I1i1i = 0
   iI1I1i1i += len ( ooooo0 )
   oO0oO00 = oO0oO00 + iI1I1i1i
   if iI1I1i1i > 0 :
    for o0o0Ooo0 in ooooo0 :
     o0IiIiI111IIII1 = os . path . join ( O0000ooO0OOo , o0o0Ooo0 )
     O0o0oO += os . path . getsize ( o0IiIiI111IIII1 )
     if 43 - 43: OoO0O00
     os . unlink ( os . path . join ( O0000ooO0OOo , o0o0Ooo0 ) )
 except :
  pass
  if 51 - 51: OoooooooOO % O00oOoOoO0o0O % Oo0Ooo
  if 50 - 50: I1IiiI - i11iIiiIii / I1ii11iIi11i . Ii1I - iIii1I11I1II1
  if 91 - 91: I1IiiI . O0oo0OO0 + II111iiii . Oo0Ooo
  if 95 - 95: iii1I1I
  if 77 - 77: I1IiiI * II111iiii * iIii1I11I1II1
 III1iII1I1ii = xbmc . translatePath ( 'special://home/userdata/Database' )
 ooooo0 = glob . glob ( os . path . join ( III1iII1I1ii , 'Textures*.db' ) )
 for o0o0Ooo0 in ooooo0 :
  try :
   if 19 - 19: OOooOOo * o0oOOo0O0Ooo
   if 64 - 64: I11i % Oo0ooO0oo0oO / OOooOOo / iii1I1I
   o0OooooOooO ( o0o0Ooo0 )
  except :
   o0OooooOooO ( o0o0Ooo0 )
   if 33 - 33: O00oOoOoO0o0O
   if 82 - 82: iii1I1I . OOooOOo / II111iiii / II111iiii % Ii1I
   if 44 - 44: Oo0Ooo
   if 29 - 29: O0 + OoooooooOO
   if 82 - 82: O0 . O0oo0OO0 - O00oOoOoO0o0O
 with open ( iii , 'r' , 0 ) as o0o0Ooo0 :
  OoO000O = json . load ( o0o0Ooo0 )
  if 37 - 37: i11iIiiIii
  ii = OoO000O [ 'totaltempfiles' ]
  ooOo0OoOooo00 = OoO000O [ 'totalspacegained' ]
  if 67 - 67: Oo0ooO0oo0oO . Oo0Ooo
  if 15 - 15: OoO0O00 . oO0o - o0oOOo0O0Ooo
  if 28 - 28: OOooOOo * OoOoOO00 + OoooooooOO . OOooOOo / oO0o / OoOoOO00
  if 94 - 94: OoO0O00 / i1IIi . OoO0O00 . O0oo0OO0 + OoO0O00
 i1iiI1ii = int ( ii ) + oO0oO00
 IiiiI11111I1 = float ( ooOo0OoOooo00 ) + O0o0oO / 1024 / 1024
 if 30 - 30: o0oOOo0O0Ooo + iIii1I11I1II1 - II111iiii - Oo0ooO0oo0oO + OoOoOO00 - II111iiii
 Oo ( 'totaltempfiles' , str ( i1iiI1ii ) )
 Oo ( 'totalspacegained' , str ( IiiiI11111I1 ) )
 if 69 - 69: oO0o / O0 / I1IiiI + OoooooooOO * I11i * O00oOoOoO0o0O
 IiiiI11111I1 = '%.2f' % float ( IiiiI11111I1 )
 if 41 - 41: Oo0ooO0oo0oO % i11iIiiIii
 OooOO000 . setSetting ( "totaltempfiles" , str ( i1iiI1ii ) )
 OooOO000 . setSetting ( "totalspacegained" , str ( IiiiI11111I1 ) )
 if 69 - 69: O00oOoOoO0o0O - oO0o
 if 21 - 21: Oo0Ooo / O0oo0OO0
 if 72 - 72: OoOoOO00 . i11iIiiIii
 if 25 - 25: i1IIi
 if 69 - 69: OOooOOo / Ii1I
 if 67 - 67: i11iIiiIii . II111iiii + OoooooooOO % o0oOOo0O0Ooo + O00oOoOoO0o0O * i1IIi
 if 53 - 53: oO0o * OoooooooOO + II111iiii . O00oOoOoO0o0O * I1ii11iIi11i
 if 55 - 55: OoOoOO00
 if 27 - 27: I1IiiI
 if 81 - 81: Oo0Ooo
 if 43 - 43: i1IIi * O0 + Oo0ooO0oo0oO + OoO0O00
 Oo0O0OO0OoO0 ( Iii1I1I11iiI1 )
 o0oo0OO0oO = ii1I1IIii11
 O0OOO00OO0 = O0o0oO / 1024 / 1024
 OoO0o000oOo . setLabel ( '[COLOR=lightgray]' + str ( o0oo0OO0oO ) + '[/COLOR]' )
 Oo00OO00o0oO . setLabel ( '[COLOR=lightgray]' + str ( O0OOO00OO0 ) + ' MB[/COLOR]' )
 if 99 - 99: O00oOoOoO0o0O . OoOoOO00
 if 64 - 64: O0oo0OO0
 try :
  if 96 - 96: Ii1I
  with open ( iii , 'r' , 0 ) as o0o0Ooo0 :
   OoO000O = json . load ( o0o0Ooo0 )
   if 100 - 100: Oo0ooO0oo0oO
   if 43 - 43: Ii1I * Oo0ooO0oo0oO + O0 . II111iiii
  i1IiiiiIi1I . setLabel ( '[COLOR=darkgray]' + ooO ( "totalfilesdeleted" ) + '[/COLOR]' )
  iIIoOo = OoO000O [ 'totaltempfiles' ]
  iiioO = i1IiiiiIi1I . getLabel ( )
  i1IiiiiIi1I . setLabel ( iiioO + '[COLOR=darkgray]' + iIIoOo + '[/COLOR]' )
  if 8 - 8: O00oOoOoO0o0O * OOooOOo + I11i + O0 * oO0o - oO0o
  if 19 - 19: OoO0O00 - Oo0ooO0oo0oO + I1ii11iIi11i / I1ii11iIi11i % O0oo0OO0 % iIii1I11I1II1
  ii1i . setLabel ( '[COLOR=darkgray]' + ooO ( "totalspacegained" ) + '[/COLOR]' )
  ooOo0OoOooo00 = OoO000O [ 'totalspacegained' ]
  II1 = int ( round ( float ( ooOo0OoOooo00 ) ) )
  iiioO = ii1i . getLabel ( )
  ii1i . setLabel ( iiioO + '[COLOR=darkgray]' + str ( II1 ) + ' MB[/COLOR]' )
  if 5 - 5: OoooooooOO + Oo0ooO0oo0oO - II111iiii . i11iIiiIii / oO0o - Oo0ooO0oo0oO
 except :
  pass
  if 3 - 3: iii1I1I
  if 74 - 74: i11iIiiIii + OoooooooOO . OOooOOo
 OOooo = xbmcgui . Dialog ( )
 OOooo . ok ( ooO ( "thumbsdel" ) , ooO ( "thumbsdel2" ) )
 if 29 - 29: O00oOoOoO0o0O % OoO0O00
 if 53 - 53: OoooooooOO - OoOoOO00 / O00oOoOoO0o0O - O0oo0OO0
def IiI1oo ( ) :
 if 68 - 68: Oo0ooO0oo0oO - OoOoOO00 * II111iiii * o0oOOo0O0Ooo - OoO0O00
 OooOO000 . setSetting ( "username" , "" )
 if 32 - 32: O0 + oO0o + OoooooooOO % Oo0ooO0oo0oO
 OooOO000 . setSetting ( "accountstatus" , "" )
 OooOO000 . setSetting ( "Subends" , "" )
 OooOO000 . setSetting ( "activationsleft" , "" )
 if 76 - 76: I1ii11iIi11i + o0oOOo0O0Ooo
 iIIi1IIIi111I . setVisible ( False )
 ii1iI11 . setVisible ( True )
 if 6 - 6: iIii1I11I1II1 + oO0o
 OOooo = xbmcgui . Dialog ( )
 OOooo . ok ( ooO ( 'areswizard' ) , ooO ( 'restarneeded' ) , "" , "" )
 if 8 - 8: I1ii11iIi11i + o0oOOo0O0Ooo
 if 29 - 29: Ii1I . OOooOOo
def ooOI1ii ( ) :
 if 85 - 85: iii1I1I * OOooOOo + i1IIi
 if 99 - 99: Oo0Ooo . i1IIi * O0 . o0oOOo0O0Ooo . OoooooooOO
 global oOO0O00Oo0O0o
 global o00O0
 global ii1
 global iI1i11
 global O0ooO0Oo00o
 if 11 - 11: O0
 if 45 - 45: I1IiiI - II111iiii * iIii1I11I1II1 + OOooOOo
 try :
  with open ( iii , 'r' , 0 ) as o0o0Ooo0 :
   OoO000O = json . load ( o0o0Ooo0 )
   if 58 - 58: O0
  oOooOOOoOo = OoO000O [ 'deviceid' ]
  if 90 - 90: iii1I1I
  if 76 - 76: Ii1I % i1IIi
 except :
  oOooOOOoOo = "Error"
  if 36 - 36: Oo0Ooo * OoOoOO00 + Oo0Ooo + i1IIi / O0oo0OO0
  if 16 - 16: o0oOOo0O0Ooo * Ii1I
  if 48 - 48: Oo0Ooo
 OOooo = xbmcgui . Dialog ( )
 if OOooo . yesno ( ooO ( 'areswizard' ) , ooO ( 'alreadyhaveaccount' ) ) :
  if 33 - 33: I1ii11iIi11i / Oo0Ooo * OoO0O00
  if 45 - 45: I1IiiI
  if 5 - 5: OoooooooOO + OoOoOO00 . OOooOOo
  O00o0oO = xbmc . Keyboard ( "" , ooO ( 'enteremail' ) )
  O00o0oO . doModal ( )
  O0O0O00o0o0o = O00o0oO . getText ( )
  if 26 - 26: II111iiii . I1IiiI % I1IiiI + i1IIi + O0oo0OO0
  O00o0oO = xbmc . Keyboard ( "" , ooO ( 'entername' ) )
  O00o0oO . doModal ( )
  oO00o0oOOo0OO = O00o0oO . getText ( )
  if 48 - 48: i11iIiiIii / Oo0ooO0oo0oO . OoOoOO00 . O0 * i11iIiiIii
  O00o0oO = xbmc . Keyboard ( "" , ooO ( 'enterpass' ) )
  O00o0oO . setHiddenInput ( True )
  O00o0oO . doModal ( )
  Iiii1Ioo = O00o0oO . getText ( )
  if 32 - 32: iii1I1I + i11iIiiIii / OOooOOo - O00oOoOoO0o0O
  if 93 - 93: iIii1I11I1II1 / O0 + OoO0O00 * iIii1I11I1II1 % iIii1I11I1II1 / O00oOoOoO0o0O
  OooOO000 . setSetting ( "deviceid" , oOooOOOoOo )
  OooOO000 . setSetting ( "username" , oO00o0oOOo0OO )
  if 21 - 21: Oo0ooO0oo0oO / iii1I1I % II111iiii * I1IiiI * II111iiii
  if 40 - 40: Ii1I / i1IIi . iii1I1I
  oooOoooo0Ooo0ooo0 = update . loginbutton ( oO00o0oOOo0OO , Iiii1Ioo , O0O0O00o0o0o , oOooOOOoOo , OOO00O )
  if 65 - 65: iIii1I11I1II1 * O0 . II111iiii * o0oOOo0O0Ooo . I1ii11iIi11i * I1IiiI
  if oooOoooo0Ooo0ooo0 == "registered" :
   if 63 - 63: II111iiii . Oo0Ooo % iIii1I11I1II1
   if 85 - 85: I1IiiI + i1IIi % O0oo0OO0
   Oo0O0oOoO0o0 = update . login ( oO00o0oOOo0OO , OOO00O , oOooOOOoOo )
   if 76 - 76: i11iIiiIii % i11iIiiIii
   if 33 - 33: OOooOOo . Oo0ooO0oo0oO / iIii1I11I1II1 * OOooOOo / oO0o
   if 75 - 75: Ii1I - OoOoOO00 . OOooOOo - o0oOOo0O0Ooo - I1ii11iIi11i
   if 69 - 69: O0 % I1ii11iIi11i
   if 77 - 77: iIii1I11I1II1 . OOooOOo
   if Oo0O0oOoO0o0 == "loginerror" :
    OooOO000 . setSetting ( "accountstatus" , "free" )
    if 64 - 64: OoOoOO00 - i1IIi * i1IIi / iii1I1I * OoOoOO00 * OoO0O00
    if 61 - 61: OOooOOo
   elif Oo0O0oOoO0o0 == "devicemac-mismatch" :
    iI1i1IIi1i1 = 10
    oOooOOOoOo = '' . join ( random . choice ( string . ascii_uppercase + string . digits ) for _ in range ( iI1i1IIi1i1 ) )
    if 51 - 51: Oo0Ooo * OOooOOo / iii1I1I
    OoO000O = { 'deviceid' : oOooOOOoOo }
    if 49 - 49: Oo0ooO0oo0oO . i1IIi % O0oo0OO0 . I1IiiI . I1ii11iIi11i + OoO0O00
    if 65 - 65: I1ii11iIi11i + Ii1I / i11iIiiIii * O0oo0OO0 + OoooooooOO
    if not os . path . exists ( OOO00O0O ) :
     os . makedirs ( OOO00O0O )
     if 7 - 7: Oo0Ooo % o0oOOo0O0Ooo
     if 40 - 40: oO0o * O00oOoOoO0o0O
    with open ( iii , 'w' ) as o0o0Ooo0 :
     json . dump ( OoO000O , o0o0Ooo0 )
     o0o0Ooo0 . close
     if 29 - 29: O0 - II111iiii + iii1I1I
    OooOO000 . setSetting ( "deviceid" , oOooOOOoOo )
    OooOO000 . setSetting ( "activationsleft" , '' )
    OooOO000 . setSetting ( "Subends" , '' )
    OooOO000 . setSetting ( "username" , "free" )
    OooOO000 . setSetting ( "accountstatus" , "free" )
    if 73 - 73: O0oo0OO0 - I11i + O00oOoOoO0o0O - o0oOOo0O0Ooo - I11i - OOooOOo
    Oo0O0oOoO0o0 = update . login ( 'free' , OOO00O , oOooOOOoOo )
    if 40 - 40: iIii1I11I1II1 . iii1I1I * I1ii11iIi11i + O00oOoOoO0o0O - iIii1I11I1II1
    if 83 - 83: i1IIi
   elif Oo0O0oOoO0o0 == "inserted" :
    OooOO000 . setSetting ( "username" , "free" )
    OooOO000 . setSetting ( "accountstatus" , "free" )
    I1iIIiiIIi1i = "free"
    o00O0 = "free"
    O0ooO0Oo00o = "free"
    OooOO000 . setSetting ( "activationsleft" , '' )
    OooOO000 . setSetting ( "Subends" , '' )
    if 9 - 9: iIii1I11I1II1 + i11iIiiIii
    if 70 - 70: I1IiiI - OoO0O00 % OOooOOo + Oo0ooO0oo0oO % II111iiii
   elif Oo0O0oOoO0o0 == "user-not-found" :
    OooOO000 . setSetting ( "username" , "free" )
    OooOO000 . setSetting ( "accountstatus" , "free" )
    I1iIIiiIIi1i = "free"
    o00O0 = "free"
    O0ooO0Oo00o = "free"
    OooOO000 . setSetting ( "activationsleft" , '' )
    OooOO000 . setSetting ( "Subends" , '' )
    if 19 - 19: I11i + i1IIi / i1IIi - II111iiii + O0oo0OO0
    if 11 - 11: i11iIiiIii % i11iIiiIii / O00oOoOoO0o0O - Oo0Ooo / O0 - I11i
   else :
    O00o0O00 = json . loads ( Oo0O0oOoO0o0 )
    if 29 - 29: OOooOOo * iIii1I11I1II1 * Oo0ooO0oo0oO
    if 80 - 80: oO0o * O0oo0OO0
    if 87 - 87: iii1I1I + OoOoOO00 % Oo0ooO0oo0oO - oO0o
    for oO00O in O00o0O00 :
     if o00O0 <> "free" :
      OOoOoo = oO00O [ 'Subends' ]
     O0ooO0Oo00o = oO00O [ 'userlevel' ]
     O00O0oOO00O00 = oO00O [ 'Banned' ]
     oOOOOo0 = oO00O [ 'BanReason' ]
     if 40 - 40: i1IIi / OoOoOO00 - I11i / Oo0ooO0oo0oO . Ii1I
     if 8 - 8: I1IiiI . O00oOoOoO0o0O . OOooOOo . O0
     if 3 - 3: Ii1I + i11iIiiIii
     if 87 - 87: Oo0ooO0oo0oO - iii1I1I % I11i
     if 88 - 88: I11i . OoooooooOO
     if 86 - 86: Ii1I - I1IiiI - iii1I1I % Ii1I . I1ii11iIi11i % i1IIi
     if 84 - 84: OoOoOO00
     if 99 - 99: OoO0O00 - OoOoOO00 - i1IIi / OoO0O00 * I1ii11iIi11i * iIii1I11I1II1
     if 65 - 65: iii1I1I - O0 / i1IIi . O0oo0OO0
     if 85 - 85: o0oOOo0O0Ooo % Ii1I
     if 81 - 81: oO0o / OoO0O00 * i1IIi % iIii1I11I1II1
     if 23 - 23: II111iiii . II111iiii
     if 17 - 17: i11iIiiIii / O00oOoOoO0o0O * I1IiiI . Oo0Ooo / o0oOOo0O0Ooo - iIii1I11I1II1
   ii1iI11 . setVisible ( False )
   iIIi1IIIi111I . setVisible ( True )
   oooo00oO0O . controlUp ( iIIi1IIIi111I )
   iIIi1IIIi111I . controlDown ( oooo00oO0O )
   Iii11iI1I . setFocus ( oooo00oO0O )
   if 21 - 21: OOooOOo % Ii1I
   if 3 - 3: OOooOOo / Oo0ooO0oo0oO / O0oo0OO0 . I11i
  if oooOoooo0Ooo0ooo0 == "user-or-pass-not-found" :
   if 54 - 54: I1ii11iIi11i - I1IiiI . OoOoOO00
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Ares Wizard" , "Username or Password Incorrect" , "" , "" )
   OooOO000 . setSetting ( "username" , "free" )
   OooOO000 . setSetting ( "accountstatus" , "free" )
   I1iIIiiIIi1i = "free"
   o00O0 = "free"
   O0ooO0Oo00o = "free"
   OooOO000 . setSetting ( "activationsleft" , '' )
   OooOO000 . setSetting ( "Subends" , '' )
   if 36 - 36: OoO0O00 * I1IiiI / iii1I1I
   if 95 - 95: Ii1I . Oo0Ooo
   if 42 - 42: O00oOoOoO0o0O . i1IIi % O0 * Oo0ooO0oo0oO - OOooOOo % Oo0ooO0oo0oO
  if oooOoooo0Ooo0ooo0 == "maximumnumberofregistrationsmet" :
   if 99 - 99: i1IIi + OoOoOO00 - iii1I1I % II111iiii
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Ares Wizard" , "You cannot register anymore devices using this email" , "" , "" )
   OooOO000 . setSetting ( "username" , "free" )
   OooOO000 . setSetting ( "accountstatus" , "free" )
   I1iIIiiIIi1i = "free"
   o00O0 = "free"
   O0ooO0Oo00o = "free"
   OooOO000 . setSetting ( "activationsleft" , '' )
   OooOO000 . setSetting ( "Subends" , '' )
   if 6 - 6: Oo0ooO0oo0oO - O0oo0OO0 . OoOoOO00
   if 64 - 64: iii1I1I + I1ii11iIi11i
   if 88 - 88: O0oo0OO0 / i11iIiiIii - O0 . II111iiii / II111iiii * II111iiii
 else :
  if 56 - 56: Oo0Ooo / I1IiiI % O0oo0OO0 % I1ii11iIi11i * I1IiiI - O00oOoOoO0o0O
  if 39 - 39: oO0o + iii1I1I . O0oo0OO0 * i11iIiiIii % o0oOOo0O0Ooo + OOooOOo
  if 61 - 61: Oo0ooO0oo0oO / O0oo0OO0 / I1ii11iIi11i - Ii1I % o0oOOo0O0Ooo * iii1I1I
  if 94 - 94: I1IiiI / I11i
  if 100 - 100: Ii1I % OoO0O00 % OoooooooOO / II111iiii * O0oo0OO0
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Ares Wizard" , "This is currently for staff use only" , "" , "" )
  if 64 - 64: O0oo0OO0 * OOooOOo * Ii1I + I1ii11iIi11i / iIii1I11I1II1 / Oo0Ooo
  if 50 - 50: OOooOOo % i11iIiiIii
  if 99 - 99: O00oOoOoO0o0O
  if 87 - 87: O00oOoOoO0o0O
  if 35 - 35: oO0o . O0 . Ii1I / Oo0ooO0oo0oO
def Iii1 ( ) :
 if 26 - 26: Oo0Ooo - II111iiii % Oo0ooO0oo0oO
 global OOO00O
 if 81 - 81: i11iIiiIii + I1ii11iIi11i * oO0o
 try :
  OOO00O
 except :
  Ii1111iI1i1 ( )
  if 86 - 86: OoO0O00 . Oo0ooO0oo0oO . o0oOOo0O0Ooo
 try :
  o00O0 = xbmcplugin . getSetting ( int ( sys . argv [ 1 ] ) , 'username' )
  if 70 - 70: O0 % OoooooooOO - Ii1I * Oo0Ooo
 except :
  pass
  if 18 - 18: OOooOOo . I1IiiI + i1IIi . I1IiiI
  if 3 - 3: O0 * O0 + II111iiii + OoOoOO00 * I11i % Oo0Ooo
  if 19 - 19: oO0o % O00oOoOoO0o0O % OoooooooOO % I1ii11iIi11i / OoO0O00
  if 6 - 6: O0 * O0oo0OO0 - II111iiii
 oOO0oo0Oo0o = Iii1 ( o00O0 , OOO00O , oOooOOOoOo )
 if 9 - 9: OoO0O00 / O0oo0OO0 . II111iiii % I11i + iii1I1I
 if oOO0oo0Oo0o == "activated" :
  if 16 - 16: I1IiiI % I11i - iii1I1I / Oo0ooO0oo0oO
  oooo00oO0O . setEnabled ( True )
  ii1O0oOOo . setEnabled ( True )
  iiIIii1iIiIi . setEnabled ( True )
  iiIiIi1I1 . setEnabled ( True )
  Oo0OOo . setEnabled ( True )
  ii11I1IIII11 . setEnabled ( True )
  O0OoO . setVisible ( False )
  iIIi1IIIi111I . setVisible ( True )
  Iii11iI1I . setFocus ( oooo00oO0O )
  OooOO000 . setSetting ( "accountstatus" , "Registered" )
  if 77 - 77: i1IIi * I1ii11iIi11i * II111iiii - I11i
  if 81 - 81: Oo0ooO0oo0oO . OoOoOO00 % OOooOOo
  oOOOOOo . setLabel ( '[COLOR=darkgray]' + ooO ( 'introlabel_loggedin' ) + '[/COLOR]' )
  if 68 - 68: O00oOoOoO0o0O % i1IIi + o0oOOo0O0Ooo
  update . login ( o00O0 , OOO00O , oOooOOOoOo )
  if 33 - 33: iIii1I11I1II1 . O0
  if 54 - 54: iIii1I11I1II1
  if 54 - 54: iii1I1I + OOooOOo + OoO0O00
  if 6 - 6: oO0o - OoooooooOO * iIii1I11I1II1 * I1ii11iIi11i
def iI1i1Iiii ( rating , votesint ) :
 if 65 - 65: O00oOoOoO0o0O + OoOoOO00
 if 93 - 93: Ii1I
 if 43 - 43: iIii1I11I1II1 / iii1I1I - Ii1I + I11i % iii1I1I - OoO0O00
 i11ii . setVisible ( False )
 oOOOOO0Ooooo . setVisible ( False )
 o0o000Oo . setVisible ( False )
 oO0o0O0o0OO00 . setVisible ( False )
 iIiiiIi . setVisible ( False )
 if 5 - 5: OoO0O00 / Oo0ooO0oo0oO
 if 92 - 92: Oo0Ooo / iii1I1I + O0 * Oo0ooO0oo0oO * OOooOOo % Oo0Ooo
 if 97 - 97: oO0o / Ii1I
 if 70 - 70: iii1I1I / Oo0Ooo . OoOoOO00 - II111iiii * II111iiii % I1IiiI
 I111i11 = int ( rating )
 I1I1iiiiiIi1 = int ( votesint )
 if 98 - 98: O0oo0OO0
 if I111i11 == 0 or I1I1iiiiiIi1 == 0 :
  return
  if 34 - 34: Oo0ooO0oo0oO * OOooOOo % O0oo0OO0 . o0oOOo0O0Ooo + Ii1I % OoOoOO00
 OO0O0000OOOo = ( I111i11 / I1I1iiiiiIi1 )
 O0oO0oOO = int ( OO0O0000OOOo )
 Oo0o0OOoOO0 = str ( O0oO0oOO )
 if 47 - 47: OoOoOO00 . II111iiii + I1ii11iIi11i * Oo0Ooo
 if 95 - 95: O00oOoOoO0o0O + iii1I1I % I1IiiI
 if 18 - 18: Oo0Ooo
 if Oo0o0OOoOO0 == "5" :
  i11ii . setVisible ( True )
  oOOOOO0Ooooo . setVisible ( True )
  o0o000Oo . setVisible ( True )
  oO0o0O0o0OO00 . setVisible ( True )
  iIiiiIi . setVisible ( True )
 elif Oo0o0OOoOO0 == "4" :
  i11ii . setVisible ( True )
  oOOOOO0Ooooo . setVisible ( True )
  o0o000Oo . setVisible ( True )
  oO0o0O0o0OO00 . setVisible ( True )
 elif Oo0o0OOoOO0 == "3" :
  i11ii . setVisible ( True )
  oOOOOO0Ooooo . setVisible ( True )
  o0o000Oo . setVisible ( True )
 elif Oo0o0OOoOO0 == "2" :
  i11ii . setVisible ( True )
  oOOOOO0Ooooo . setVisible ( True )
 elif Oo0o0OOoOO0 == "1" :
  i11ii . setVisible ( True )
 else :
  pass
  if 8 - 8: O0 + iIii1I11I1II1 - O0
  if 67 - 67: O0
  if 22 - 22: I11i / i1IIi . II111iiii % Oo0ooO0oo0oO / I11i - Ii1I
def iIIIIII ( name ) :
 if 28 - 28: O0 - Oo0Ooo
 global OoOOoooOO0O
 if 58 - 58: iIii1I11I1II1 - OoooooooOO - iii1I1I
 if OoOOoooOO0O <> "" :
  iI1i1IIi1i1 = 4
  OoOoo00Oo0OoO = '' . join ( random . choice ( string . ascii_uppercase ) for _ in range ( iI1i1IIi1i1 ) )
  iiII1i1 = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=getunblockurls&code=' + OoOoo00Oo0OoO
  if 43 - 43: Oo0ooO0oo0oO / o0oOOo0O0Ooo
  OoOOoooOO0O = iIii111Ii ( iiII1i1 , 'yes' )
  if 56 - 56: II111iiii * I1ii11iIi11i * O0 . iii1I1I . I1ii11iIi11i % O0oo0OO0
  if OoOOoooOO0O == "downloadfailed" :
   return ( )
   if 99 - 99: Oo0Ooo - OoO0O00 + OoooooooOO - O0oo0OO0 - I1ii11iIi11i % i1IIi
   if 49 - 49: O00oOoOoO0o0O % OoooooooOO / Oo0Ooo - OoOoOO00 + o0oOOo0O0Ooo / Ii1I
 O00o0O00 = json . loads ( OoOOoooOO0O )
 if 6 - 6: I11i % O00oOoOoO0o0O
 for oO00O in O00o0O00 :
  if name == oO00O [ 'name' ] :
   i1I1II1iiII = oO00O [ 'url' ]
   if 15 - 15: I1IiiI - o0oOOo0O0Ooo % iIii1I11I1II1 % I11i * OoOoOO00 % O00oOoOoO0o0O
 return ( i1I1II1iiII )
 if 74 - 74: iii1I1I - O0 * o0oOOo0O0Ooo / OoooooooOO + II111iiii + Ii1I
 if 39 - 39: i11iIiiIii . O00oOoOoO0o0O + I1ii11iIi11i % O00oOoOoO0o0O
 if 96 - 96: I11i / I1IiiI . i1IIi
def ooIiiI1i1 ( ) :
 if 46 - 46: Oo0Ooo / O0 - i1IIi - i11iIiiIii + Oo0Ooo - O0oo0OO0
 oooIiiii1iIIIi1I = os . path . join ( xbmc . translatePath ( 'special://home/userdata/addon_data/' ) , oo00OO0000oO )
 Oo00000oo0OOo = os . path . join ( oooIiiii1iIIIi1I , 'settings.xml' )
 if 85 - 85: O00oOoOoO0o0O . OoooooooOO / iii1I1I . oO0o * O00oOoOoO0o0O . O0oo0OO0
 if 68 - 68: OoO0O00 * i1IIi
 iIIiI11iI1 = open ( Oo00000oo0OOo ) . read ( )
 if oOo0OOoO0 in iIIiI11iI1 :
  iIIiI11iI1 = iIIiI11iI1 . replace ( oOo0OOoO0 , IIo0Oo0oO0oOO00 )
  o0o0Ooo0 = open ( Oo00000oo0OOo , 'w' )
  o0o0Ooo0 . write ( iIIiI11iI1 )
  o0o0Ooo0 . flush ( )
  o0o0Ooo0 . close ( )
  if 84 - 84: iii1I1I . i11iIiiIii % Oo0ooO0oo0oO % O0 + I1IiiI
 if IIo0Oo0oO0oOO00 in open ( Oo00000oo0OOo ) . read ( ) :
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Success" , I1 + ooO ( "urlchanged" ) , "" , "" )
 else :
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Error" , I1 + ooO ( "urlnotchanged" ) , "" , "" )
  if 25 - 25: iIii1I11I1II1
  if 95 - 95: Oo0ooO0oo0oO * OoO0O00 % OoooooooOO % OoO0O00
  if 79 - 79: II111iiii % Ii1I * oO0o * iii1I1I + II111iiii
def OoO0oo ( ) :
 if 87 - 87: O00oOoOoO0o0O + OOooOOo - iIii1I11I1II1 + OoOoOO00 % O00oOoOoO0o0O
 if 88 - 88: Ii1I . iIii1I11I1II1 . iii1I1I - O0 . Oo0ooO0oo0oO
 if xbmc . getCondVisibility ( 'system.platform.osx' ) :
  try : os . system ( 'killall -9 XBMC' )
  except : pass
  try : os . system ( 'killall -9 Kodi' )
  except : pass
  if 3 - 3: OoOoOO00
 elif xbmc . getCondVisibility ( 'system.platform.linux' ) :
  try : os . system ( 'killall XBMC' )
  except : pass
  try : os . system ( 'killall Kodi' )
  except : pass
  try : os . system ( 'killall -9 xbmc.bin' )
  except : pass
  try : os . system ( 'killall -9 kodi.bin' )
  except : pass
  if 79 - 79: i11iIiiIii * OoooooooOO
 elif xbmc . getCondVisibility ( 'system.platform.android' ) :
  oO00o ( )
  try : os . system ( 'adb shell am force-stop org.xbmc.kodi' )
  except : pass
  try : os . system ( 'adb shell am force-stop org.kodi' )
  except : pass
  try : os . system ( 'adb shell am force-stop org.xbmc.xbmc' )
  except : pass
  try : os . system ( 'adb shell am force-stop org.xbmc' )
  except : pass
  if 50 - 50: I1IiiI * II111iiii . O0oo0OO0 / O0oo0OO0
 elif xbmc . getCondVisibility ( 'system.platform.windows' ) :
  if 28 - 28: Oo0ooO0oo0oO
  print ' '
  print 'windows detected'
  print ' '
  if 27 - 27: OoO0O00
  if 80 - 80: o0oOOo0O0Ooo
  if 70 - 70: iii1I1I . OOooOOo / Oo0ooO0oo0oO - OoO0O00 * oO0o / Oo0ooO0oo0oO
  if 5 - 5: O0
  Oo0IiIiI1iII = translate ( os . path . join ( 'special://xbmc/system/players/dvdplayer/' , 'librtmp.dll' ) )
  if 68 - 68: Ii1I % Oo0Ooo
  if 74 - 74: iIii1I11I1II1 / O0 + Ii1I . O0 + iii1I1I
  print 'libfile: ' + Oo0IiIiI1iII
  if 46 - 46: I11i . i11iIiiIii * OoOoOO00 + o0oOOo0O0Ooo / Oo0ooO0oo0oO
  iII1II1I = os . path . getsize ( Oo0IiIiI1iII )
  if 16 - 16: i1IIi - iIii1I11I1II1 - Oo0ooO0oo0oO / OoooooooOO - Oo0Ooo
  print ' '
  print 'filesize: ' + str ( iII1II1I )
  if 46 - 46: OoOoOO00 + i1IIi
  if iII1II1I == 383609 :
   OOooo = xbmcgui . Dialog ( )
   if 43 - 43: II111iiii * O00oOoOoO0o0O % iIii1I11I1II1 % i11iIiiIii % I1ii11iIi11i
   if OOooo . yesno ( "Backup ?" , "You have the default librmtp, do you want to back it up?" ) :
    if 81 - 81: oO0o % I1ii11iIi11i % Oo0ooO0oo0oO * O0 - OOooOOo
    try :
     os . system ( 'copy "C:\Program Files (x86)\Kodi\system\players\dvdplayer\librtmp.dll" "C:\Program Files (x86)\Kodi\system\players\dvdplayer\librtmp_backup.dll"' )
    except :
     pass
     if 17 - 17: O0 % O0 / I1ii11iIi11i . Oo0Ooo . iii1I1I
     if 4 - 4: OoO0O00
     if 65 - 65: Oo0Ooo % O0 / O0oo0OO0 * O00oOoOoO0o0O - oO0o
     if 32 - 32: Ii1I * OoO0O00 + Oo0ooO0oo0oO
     if 41 - 41: O00oOoOoO0o0O + I11i * Oo0ooO0oo0oO + Oo0Ooo . Oo0ooO0oo0oO
 else :
  try : os . system ( 'killall AppleTV' )
  except : pass
  try : os . system ( 'sudo initctl stop kodi' )
  except : pass
  try : os . system ( 'sudo initctl stop xbmc' )
  except : pass
  if 38 - 38: iii1I1I * OoooooooOO - O00oOoOoO0o0O
  if 36 - 36: O0oo0OO0 * II111iiii + I1ii11iIi11i - iii1I1I * iii1I1I
  if 91 - 91: O0 + O0oo0OO0 * II111iiii - O0 . i11iIiiIii . Oo0Ooo
def O0o00O00oo0oO ( ) :
 if 42 - 42: O00oOoOoO0o0O - O00oOoOoO0o0O - I1ii11iIi11i + i1IIi * Oo0Ooo
 if 80 - 80: oO0o + O0
 OOo0o00oo0Oo = xbmcgui . Dialog ( ) . yesno ( ooO ( "areswizard" ) , ooO ( "buildinstallfreshstart1" ) , '' , ooO ( "buildinstallfreshstart2" ) , yeslabel = 'Yes' , nolabel = 'No' )
 if 84 - 84: i1IIi - II111iiii
 if OOo0o00oo0Oo == 1 :
  if 2 - 2: i11iIiiIii - OoO0O00 * Oo0Ooo
  if 100 - 100: O0oo0OO0
  iiII1i1 = "http://localhost:8080/jsonrpc"
  oooo = { 'content-type' : 'application/json' }
  if 5 - 5: O00oOoOoO0o0O % oO0o . I1IiiI * II111iiii + o0oOOo0O0Ooo / Ii1I
  Oo0oO0 = { "jsonrpc" : "2.0" , "method" : "Settings.SetSettingValue" , "id" : 1 , "params" : { "setting" : "lookandfeel.skin" , "value" : "skin.confluence" } }
  if 55 - 55: Oo0Ooo / o0oOOo0O0Ooo
  try :
   if 51 - 51: I1IiiI + i11iIiiIii / Oo0ooO0oo0oO % I1IiiI + Oo0Ooo
   iIiIi1i1ii11 = urllib2 . Request ( iiII1i1 , Oo0oO0 , oooo )
   if 6 - 6: OoOoOO00 . O0
   if 44 - 44: Oo0ooO0oo0oO % I11i + Oo0ooO0oo0oO . oO0o
   o0O00o00Ooo = urllib2 . urlopen ( iIiIi1i1ii11 ) . read ( )
   if 70 - 70: O0 - I11i . iIii1I11I1II1 % I11i . OoOoOO00 % oO0o
  except :
   if 5 - 5: O0 * OoO0O00
   pass
   if 61 - 61: Ii1I / I11i + Ii1I . O00oOoOoO0o0O - OoO0O00 - o0oOOo0O0Ooo
   if 84 - 84: OoooooooOO - Oo0Ooo
  oOOOoo ( )
  if 86 - 86: O0 + OoO0O00 + O0 . I1IiiI
  if o000oo == "true" :
   print '----------------------------------'
   print '-->   kodi still running       <--'
   print '-----------------------------------'
   if 82 - 82: OoOoOO00
  oO00o ( )
  if 61 - 61: oO0o . o0oOOo0O0Ooo
  if 82 - 82: Oo0Ooo * OoooooooOO / Oo0ooO0oo0oO / I1IiiI
  if 70 - 70: I1IiiI
  if 74 - 74: Oo0ooO0oo0oO * II111iiii
def OoOi111i ( ) :
 if 45 - 45: OoO0O00 + Oo0ooO0oo0oO / iIii1I11I1II1 % i11iIiiIii
 global I1
 if 16 - 16: i1IIi / oO0o - OOooOOo / Ii1I + I1IiiI
 IIiIiiIIiI = Oooo00OooOoooo0 ( I1 )
 if 61 - 61: o0oOOo0O0Ooo / Oo0ooO0oo0oO + o0oOOo0O0Ooo + Ii1I * iIii1I11I1II1 * OoooooooOO
 if IIiIiiIIiI == "kodirunning" :
  if 86 - 86: oO0o . o0oOOo0O0Ooo * OoOoOO00 / oO0o
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   if 47 - 47: OOooOOo
   O000oOo ( )
   if 40 - 40: I1ii11iIi11i
   II1iI11ii1 . setImage ( I1Ii1iI1 )
   ii1iI11 . setEnabled ( False )
   oooo00oO0O . setEnabled ( False )
   ii1O0oOOo . setEnabled ( False )
   iiIIii1iIiIi . setEnabled ( False )
   iiIiIi1I1 . setEnabled ( False )
   Oo0OOo . setEnabled ( False )
   ii11I1IIII11 . setEnabled ( False )
   iiI1II11I1iI . setEnabled ( False )
   iii111iI . setEnabled ( False )
   if 67 - 67: O0oo0OO0 - OoO0O00 * Oo0ooO0oo0oO - oO0o / OoO0O00 . O0oo0OO0
  else :
   if 39 - 39: Ii1I
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( ooO ( "areswizard" ) , ooO ( "kodinotclosed" ) )
   if 90 - 90: O0oo0OO0 - O0oo0OO0 . i11iIiiIii + OoooooooOO % OOooOOo / Oo0Ooo
   if 51 - 51: o0oOOo0O0Ooo
   if 8 - 8: oO0o . oO0o . Ii1I
   if 100 - 100: i11iIiiIii / i1IIi . I1ii11iIi11i
   if 1 - 1: O00oOoOoO0o0O * O0oo0OO0 / I1ii11iIi11i * i11iIiiIii
def OOoO0O0O0ooo ( ) :
 if 8 - 8: OoO0O00 % I11i + I1IiiI / O00oOoOoO0o0O - OOooOOo + i1IIi
 Iii11iI1I . close ( )
 if 3 - 3: iii1I1I - o0oOOo0O0Ooo / O0oo0OO0
 if 65 - 65: i1IIi * OoO0O00 . O00oOoOoO0o0O
 if 53 - 53: O00oOoOoO0o0O / Oo0ooO0oo0oO + OoOoOO00
 if 96 - 96: oO0o
 if 44 - 44: OoooooooOO / iii1I1I * Oo0Ooo % OoOoOO00 . oO0o
def oo0oI1IIii ( ) :
 if 2 - 2: I11i - O00oOoOoO0o0O + I1IiiI % OoO0O00 + iIii1I11I1II1 + oO0o
 O000oOo ( )
 if 49 - 49: I1IiiI * O0oo0OO0 . I1IiiI - II111iiii
 OOooo = xbmcgui . Dialog ( )
 OOooo . ok ( "Ares Wizard" , "Sorry, backup feature isn't ready yet" , "" , "" )
 if 57 - 57: oO0o + O0 - OoOoOO00
 if 14 - 14: II111iiii + i11iIiiIii + Ii1I / o0oOOo0O0Ooo . OoO0O00
 if 93 - 93: o0oOOo0O0Ooo + i1IIi
 if 24 - 24: i1IIi
 if 54 - 54: iIii1I11I1II1 - O00oOoOoO0o0O + o0oOOo0O0Ooo + I1ii11iIi11i + O00oOoOoO0o0O
def iII1I ( ) :
 if 99 - 99: Oo0Ooo
 if 38 - 38: I1ii11iIi11i - I1IiiI
 xbmc . executebuiltin ( "ActivateWindow(busydialog)" )
 socket . setdefaulttimeout ( 30 )
 if 50 - 50: iii1I1I % OoO0O00 - oO0o + Oo0Ooo . O0 . iii1I1I
 i1IIi1 = (
 ( '//.+?:.+?@' , '//USER:PASSWORD@' ) ,
 ( '<user>.+?</user>' , '<user>USER</user>' ) ,
 ( '<pass>.+?</pass>' , '<pass>PASSWORD</pass>' ) ,
 )
 if 57 - 57: I1ii11iIi11i . Oo0Ooo + O00oOoOoO0o0O - O0oo0OO0 / i1IIi * O0
 if 48 - 48: OoO0O00 / O00oOoOoO0o0O - O00oOoOoO0o0O % OOooOOo
 if 16 - 16: I1IiiI * iIii1I11I1II1 % o0oOOo0O0Ooo - O00oOoOoO0o0O - OOooOOo
 if 83 - 83: Ii1I
 if 20 - 20: Oo0ooO0oo0oO
 if 38 - 38: O00oOoOoO0o0O + OoO0O00 . OOooOOo - O0oo0OO0 + O00oOoOoO0o0O
 if 82 - 82: OOooOOo
 I1Ii11 = open ( O0OOO , 'r' ) . read ( )
 for oOo0O , OoooOO0o0oO0 in i1IIi1 :
  I1Ii11 = re . sub ( oOo0O , OoooOO0o0oO0 , I1Ii11 )
  if 88 - 88: O0oo0OO0 * o0oOOo0O0Ooo
 o0Oo0oooO = {
 'data' : I1Ii11 ,
 'project' : 'www' ,
 'language' : 'text' ,
 'expire' : 1209600 ,
 }
 if 33 - 33: I11i * OoooooooOO * iii1I1I / O0oo0OO0 . i1IIi / O0oo0OO0
 if 25 - 25: Oo0ooO0oo0oO . II111iiii + II111iiii - I11i / I11i . I1IiiI
 iIIi1i1IIiIIi = json . dumps ( o0Oo0oooO )
 if 63 - 63: O00oOoOoO0o0O
 if 74 - 74: II111iiii - i11iIiiIii - O00oOoOoO0o0O + OOooOOo
 oooo = {
 'User-Agent' : '%s-%s' % ( OooOO000 . getAddonInfo ( 'name' ) , OooOO000 . getAddonInfo ( 'version' ) ) ,
 'Content-Type' : 'application/json' ,
 }
 if 8 - 8: I1ii11iIi11i
 if 56 - 56: o0oOOo0O0Ooo / I1ii11iIi11i
 iiIII = 'http://xbmclogs.com'
 o00oOoOOOOO = iiIII + '/api/json/create'
 if 85 - 85: II111iiii / O00oOoOoO0o0O * iIii1I11I1II1 + iIii1I11I1II1
 iIiIi1i1ii11 = urllib2 . Request ( o00oOoOOOOO , iIIi1i1IIiIIi , oooo )
 if 78 - 78: II111iiii * I11i
 try :
  o0O00o00Ooo = urllib2 . urlopen ( iIiIi1i1ii11 ) . read ( )
  if 47 - 47: Ii1I
 except HTTPError , ii111I1iIiIi111I :
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "HTTP Error" , str ( ii111I1iIiIi111I . code ) )
  print '@Ares: HTTP Error: ' + str ( ii111I1iIiIi111I . code )
  return ( 'downloadfailed' )
  if 42 - 42: I11i . oO0o - I1IiiI / OoO0O00
 except URLError , ii111I1iIiIi111I :
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "HTTP Error" , str ( ii111I1iIiIi111I . reason ) , "" , "" )
  print '@Ares: HTTP Error: ' + str ( ii111I1iIiIi111I . reason )
  return ( 'downloadfailed' )
  if 75 - 75: I1IiiI / OoOoOO00 . I11i * iIii1I11I1II1
 except IOError , ii111I1iIiIi111I :
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . errno ) + " - " + str ( ii111I1iIiIi111I . strerror ) , "" , "" )
  print '@Ares: IO Error: ' + str ( ii111I1iIiIi111I . errno ) + ' - ' + str ( ii111I1iIiIi111I . strerror )
  return ( 'downloadfailed' )
  if 53 - 53: iIii1I11I1II1
 except :
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "HTTP Error" , "Unspecified Error (sorry)" , "" , "" )
  print '@Ares: HTTP Error: Unspecified'
  return ( 'downloadfailed' )
  if 8 - 8: O0 - O0 - II111iiii
  if 77 - 77: i1IIi - Oo0ooO0oo0oO + O0 . OoO0O00 * O0oo0OO0 - I11i
  if 64 - 64: i1IIi + OoooooooOO + OOooOOo / Oo0ooO0oo0oO % I1IiiI . OoooooooOO
  if 96 - 96: II111iiii - OoOoOO00 + oO0o
  if 80 - 80: oO0o / OoOoOO00 - I11i / oO0o - iii1I1I - OoooooooOO
 try :
  oOo00OoO = json . loads ( o0O00o00Ooo )
 except :
  oOo00OoO = None
  if 37 - 37: OoooooooOO * iii1I1I . i11iIiiIii % O0oo0OO0 + oO0o . I1ii11iIi11i
 xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
 if 17 - 17: iii1I1I + Oo0ooO0oo0oO % Oo0Ooo * i1IIi / O0 * oO0o
 if 58 - 58: OOooOOo . iii1I1I - Oo0Ooo / iii1I1I . I11i
 if oOo00OoO and oOo00OoO . get ( 'result' , { } ) . get ( 'id' ) :
  oo000oOoO = oOo00OoO [ 'result' ] [ 'id' ]
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( ooO ( "areswizard" ) , ooO ( "logfileresult" ) , iiIII + '/' + str ( oo000oOoO ) )
  if 57 - 57: OOooOOo % O00oOoOoO0o0O % i11iIiiIii . iIii1I11I1II1 . o0oOOo0O0Ooo / OOooOOo
 else :
  print 'upload failed with response: %s' % repr ( o0O00o00Ooo )
  if 88 - 88: oO0o / O0oo0OO0 . iii1I1I * I1ii11iIi11i + OoooooooOO
  if 56 - 56: OOooOOo * O0oo0OO0 % OOooOOo + Ii1I
  if 78 - 78: OOooOOo * OoOoOO00
  if 20 - 20: O00oOoOoO0o0O
  if 17 - 17: o0oOOo0O0Ooo % iIii1I11I1II1
  if 66 - 66: OoooooooOO + O00oOoOoO0o0O . II111iiii
  if 66 - 66: iIii1I11I1II1 % I11i
def OoOO0O0O0o0O ( name ) :
 if 38 - 38: I1ii11iIi11i * Oo0ooO0oo0oO
 if 77 - 77: OOooOOo - i11iIiiIii - I1ii11iIi11i
 if 94 - 94: OoO0O00 % iii1I1I - O0oo0OO0 + OoO0O00 - I1IiiI
 I1Iii11iI = xbmcgui . DialogProgress ( )
 I1Iii11iI . create ( ooO ( "areswizard" ) , ooO ( "backingupbuild" ) )
 I1Iii11iI . update ( 1 )
 if 65 - 65: OOooOOo
 if 90 - 90: O0
 if 91 - 91: O0 * OoOoOO00 - OoOoOO00 * II111iiii - iii1I1I
 if 38 - 38: oO0o * I11i % OOooOOo
 if 80 - 80: O0 % II111iiii / O0 . Oo0Ooo * OoOoOO00 + OOooOOo
 i11IIiiII = os . path . join ( oO0 , 'backup' )
 if 31 - 31: OoO0O00 + i11iIiiIii / I11i % O0 / Ii1I
 try :
  shutil . rmtree ( i11IIiiII )
  os . remove ( os . path . join ( oO0 , name + '.zip' ) )
 except :
  pass
  if 90 - 90: iIii1I11I1II1 % oO0o % O00oOoOoO0o0O
  if 84 - 84: I1IiiI * O00oOoOoO0o0O * iii1I1I / i1IIi . II111iiii * o0oOOo0O0Ooo
 if not os . path . exists ( i11IIiiII ) :
  os . makedirs ( i11IIiiII )
  if 1 - 1: oO0o - iIii1I11I1II1 % i1IIi
  if 94 - 94: Oo0Ooo + iIii1I11I1II1 . OoO0O00 * oO0o . i1IIi
 oooO0 = os . path . join ( i11IIiiII , 'userdata' )
 if 64 - 64: OoO0O00 + I1ii11iIi11i / OoO0O00 * O0oo0OO0 . Oo0Ooo
 if 5 - 5: iii1I1I - iIii1I11I1II1 * O00oOoOoO0o0O
 if not os . path . exists ( oooO0 ) :
  os . makedirs ( oooO0 )
  if 52 - 52: OOooOOo
 IIIIIiiIII = os . path . join ( oO0 , 'userdata' )
 if 40 - 40: OoO0O00 * o0oOOo0O0Ooo / i1IIi * O0oo0OO0 * I1ii11iIi11i
 iiIiII1 = os . path . join ( IIIIIiiIII , 'guisettings.xml' )
 I1IIi = os . path . join ( oooO0 , 'guisettings.xml' )
 OoOoOooO00o = os . path . join ( IIIIIiiIII , 'profiles.xml' )
 Oo0o = os . path . join ( oooO0 , 'profiles.xml' )
 if 61 - 61: iii1I1I % OoO0O00 - I1IiiI + OOooOOo - OoooooooOO
 if 82 - 82: O0oo0OO0 . OoO0O00
 if 24 - 24: i1IIi . iii1I1I * iIii1I11I1II1 . I11i % I1ii11iIi11i + i11iIiiIii
 shutil . copy2 ( iiIiII1 , oooO0 )
 shutil . copy2 ( OoOoOooO00o , oooO0 )
 if 28 - 28: OoO0O00 . I1ii11iIi11i / O0
 if 35 - 35: O0 . oO0o % OoOoOO00 * O0 - O00oOoOoO0o0O
 if 63 - 63: Oo0ooO0oo0oO
 IiI1I1I1 = os . path . join ( i11IIiiII , 'addons' )
 if 53 - 53: I1IiiI % O00oOoOoO0o0O . I11i + OoOoOO00 . OoooooooOO + oO0o
 if 17 - 17: O00oOoOoO0o0O
 if not os . path . exists ( IiI1I1I1 ) :
  os . makedirs ( IiI1I1I1 )
  if 47 - 47: I11i . I1IiiI % Oo0ooO0oo0oO . i11iIiiIii
  if 63 - 63: I1ii11iIi11i % I11i % OoooooooOO
  if 100 - 100: O0
  if 9 - 9: Ii1I
 iiII = open ( iiIiII1 , 'r' )
 ii1IIIIi1 = iiII . read ( )
 if 87 - 87: I1IiiI
 if 56 - 56: OOooOOo % oO0o - OoOoOO00
 if 27 - 27: I1ii11iIi11i - O00oOoOoO0o0O * OoooooooOO * I1ii11iIi11i + i11iIiiIii . O00oOoOoO0o0O
 oOoo0 = IIIi11I11 ( ii1IIIIi1 , '<skin>' , '</skin>' )
 if 49 - 49: I1IiiI . OOooOOo / OoooooooOO + I11i - I11i
 I1iIi = os . path . join ( I1I1i1I , oOoo0 )
 if 13 - 13: OoO0O00 + O0 / O00oOoOoO0o0O * iIii1I11I1II1
 OO0o0O = os . path . join ( IiI1I1I1 , oOoo0 )
 if 2 - 2: i1IIi - O00oOoOoO0o0O + iIii1I11I1II1 % i1IIi * II111iiii
 if not os . path . exists ( OO0o0O ) :
  os . makedirs ( OO0o0O )
  if 26 - 26: I11i
  if 57 - 57: I1ii11iIi11i + O0oo0OO0 + i11iIiiIii . i1IIi / i11iIiiIii
  if 43 - 43: Ii1I % I11i
 try :
  if 5 - 5: OoooooooOO % i11iIiiIii * o0oOOo0O0Ooo * OoooooooOO - o0oOOo0O0Ooo % I11i
  OoO0OOOOoo ( I1iIi , OO0o0O )
  if 7 - 7: OOooOOo . Ii1I + O0oo0OO0
 except :
  if 67 - 67: Oo0Ooo * O0 . iIii1I11I1II1 / I11i * i1IIi * I1IiiI
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( ooO ( "areswizard" ) , ooO ( "buildbackupfailedskin" ) )
  if 10 - 10: O0oo0OO0 / I1IiiI + OOooOOo + OOooOOo - OoOoOO00 / i1IIi
  return ( 'fail' )
  if 44 - 44: i11iIiiIii - iii1I1I . I1IiiI * o0oOOo0O0Ooo
  if 54 - 54: O0 % OoooooooOO / i1IIi % OOooOOo
  if 62 - 62: OOooOOo / OoooooooOO + Ii1I - iii1I1I + I1IiiI
 i1iI1i = os . path . join ( oO0 , name + '.zip' )
 if 29 - 29: II111iiii / I1ii11iIi11i * OOooOOo
 if 39 - 39: O0 . OOooOOo
 if 95 - 95: I11i
 if 58 - 58: I1ii11iIi11i / i11iIiiIii + iii1I1I + I11i / oO0o
 if 8 - 8: I1ii11iIi11i
 ooO00iiiIi11 = [ 'plugin.program.shadowbuilds' , 'plugin.repository.shadowcrew' , 'cache' , 'system' , 'Thumbnails' , "peripheral_data" , 'library' , 'keymaps' ]
 oOooOO = [ "xbmc.log" , "xbmc.old.log" , "kodi.log" , "kodi.old.log" , "Textures13.db" , '.DS_Store' , '.setup_complete' , 'XBMCHelper.conf' ]
 if 68 - 68: O0oo0OO0 % Ii1I * Oo0Ooo - O0 . O00oOoOoO0o0O
 if 1 - 1: I1ii11iIi11i
 Ii1IiI1Ii1 = zipfile . ZipFile ( i1iI1i , 'w' , zipfile . ZIP_DEFLATED )
 I11i11I = len ( i11IIiiII )
 i1i11i1iiIii = [ ]
 OO0O0ooo = [ ]
 I1Iii11iI . create ( "Saving Configuration.." , "1" , "2" , "3" )
 for o0OOO00oo0O , OoiIiI1IiIII , ooooo0 in os . walk ( i11IIiiII ) :
  for file in ooooo0 :
   OO0O0ooo . append ( file )
 oooOI11Ii = len ( OO0O0ooo )
 for o0OOO00oo0O , OoiIiI1IiIII , ooooo0 in os . walk ( i11IIiiII ) :
  OoiIiI1IiIII [ : ] = [ O00oo00oO for O00oo00oO in OoiIiI1IiIII if O00oo00oO not in ooO00iiiIi11 ]
  ooooo0 [ : ] = [ o0o0Ooo0 for o0o0Ooo0 in ooooo0 if o0o0Ooo0 not in oOooOO ]
  for file in ooooo0 :
   ooo0oO = os . path . join ( o0OOO00oo0O , file )
   oOOoOo = ooo0oO . replace ( i11IIiiII , '' )
   if 5 - 5: OoOoOO00 % OoooooooOO - i1IIi / OoooooooOO * OOooOOo / O0
   i1i11i1iiIii . append ( file )
   O0OOOo0oO = len ( i1i11i1iiIii ) / float ( oooOI11Ii ) * 100
   I1Iii11iI . update ( int ( O0OOOo0oO ) , "Backing Up" , '%s' % oOOoOo , 'Please Wait' )
   if not 'temp' in OoiIiI1IiIII :
    Ii1IiI1Ii1 . write ( ooo0oO , ooo0oO [ I11i11I : ] )
    if 9 - 9: i11iIiiIii % iIii1I11I1II1 + i11iIiiIii + Oo0Ooo % OOooOOo
    if 58 - 58: iii1I1I + OOooOOo / i1IIi * Oo0ooO0oo0oO
    if 37 - 37: OoO0O00
    if 19 - 19: Oo0ooO0oo0oO
    if 4 - 4: Oo0Ooo - i1IIi . Oo0Ooo * I11i . i1IIi + OOooOOo
    if 3 - 3: O00oOoOoO0o0O / iii1I1I * iii1I1I
    if 15 - 15: O0 + I1IiiI * OoO0O00 - i1IIi + Ii1I . i1IIi
    if 99 - 99: II111iiii + iIii1I11I1II1 / o0oOOo0O0Ooo / i11iIiiIii % iIii1I11I1II1 - iIii1I11I1II1
    if 38 - 38: I1IiiI . oO0o - II111iiii
    if 37 - 37: i1IIi % oO0o / O00oOoOoO0o0O * I11i + Oo0ooO0oo0oO % Oo0Ooo
    if 75 - 75: o0oOOo0O0Ooo . O0oo0OO0 % i1IIi . i11iIiiIii
    if 38 - 38: o0oOOo0O0Ooo - OoO0O00 - i11iIiiIii
    if 60 - 60: i11iIiiIii % iIii1I11I1II1 * I1ii11iIi11i * iii1I1I . oO0o + iii1I1I
    if 29 - 29: Oo0Ooo
    if 16 - 16: oO0o
    if 52 - 52: I11i * I1IiiI % I11i - iii1I1I - Ii1I - OoooooooOO
    if 15 - 15: iii1I1I
    if 95 - 95: i11iIiiIii . Ii1I / II111iiii + II111iiii + Ii1I / I11i
    if 72 - 72: O0oo0OO0 . O0oo0OO0 * O0 + I1ii11iIi11i / Oo0Ooo
    if 96 - 96: oO0o . Oo0ooO0oo0oO * Oo0Ooo % Oo0ooO0oo0oO + O0oo0OO0 + iIii1I11I1II1
    if 45 - 45: II111iiii
    if 42 - 42: Oo0ooO0oo0oO
    if 62 - 62: II111iiii * o0oOOo0O0Ooo . OoO0O00 / II111iiii
    if 5 - 5: OoO0O00 + O0 . OoooooooOO + I1IiiI + i1IIi * OOooOOo
 try :
  os . unlink ( I1IIi )
  os . unlink ( Oo0o )
  os . unlink ( IIIIIiiIII )
  os . unlink ( i11IIiiII )
  os . remove ( I1IIi )
  os . remove ( Oo0o )
  shutil . rmtree ( IIIIIiiIII )
  shutil . rmtree ( i11IIiiII )
 except :
  pass
  if 19 - 19: OoooooooOO + i11iIiiIii / II111iiii - Oo0Ooo . OOooOOo
  if 10 - 10: oO0o * Oo0Ooo
 pass
 if 55 - 55: OoO0O00 - i1IIi - I11i * oO0o
 if 91 - 91: O0oo0OO0
 if 77 - 77: I1ii11iIi11i . Oo0ooO0oo0oO - iIii1I11I1II1 + Ii1I % II111iiii * II111iiii
 if 41 - 41: II111iiii + Oo0Ooo - O00oOoOoO0o0O / O0oo0OO0 - OOooOOo . oO0o
def Oooo00OooOoooo0 ( name ) :
 if 100 - 100: Oo0ooO0oo0oO / I1ii11iIi11i * OoOoOO00 . I1ii11iIi11i . o0oOOo0O0Ooo * iIii1I11I1II1
 I1Iii11iI = xbmcgui . DialogProgress ( )
 I1Iii11iI . create ( ooO ( "areswizard" ) , ooO ( "repairingbuild" ) )
 I1Iii11iI . update ( 1 )
 if 15 - 15: iii1I1I + o0oOOo0O0Ooo / O00oOoOoO0o0O
 if 33 - 33: OoooooooOO . O00oOoOoO0o0O * o0oOOo0O0Ooo
 if 41 - 41: Ii1I . iii1I1I . o0oOOo0O0Ooo % OoooooooOO % O00oOoOoO0o0O
 for O0000ooO0OOo , OoiIiI1IiIII , ooooo0 in os . walk ( I1I1i1I ) :
  for O00oo00oO in OoiIiI1IiIII :
   try :
    if 81 - 81: O00oOoOoO0o0O * i11iIiiIii + i1IIi + OOooOOo . i1IIi
    III1iII1I1ii = os . path . join ( O0000ooO0OOo , O00oo00oO )
    if 'addons/skin.' in III1iII1I1ii :
     shutil . rmtree ( os . path . join ( O0000ooO0OOo , O00oo00oO ) )
     print 'from mainaddondir removed folder: ' + os . path . join ( O0000ooO0OOo , O00oo00oO )
   except :
    pass
    if 6 - 6: i11iIiiIii - oO0o % OoO0O00 + iIii1I11I1II1
 I1Iii11iI . close
 if 69 - 69: O00oOoOoO0o0O
 oO00o ( )
 if 13 - 13: i11iIiiIii
 i1iI1i = os . path . join ( oO0 , name + '.zip' )
 if 49 - 49: OoOoOO00
 III1ii1 = IiI1i1 ( i1iI1i , ii1111iII , name , 'restore' )
 if 61 - 61: O0oo0OO0 / O0oo0OO0 / iii1I1I / Oo0ooO0oo0oO - I1IiiI . o0oOOo0O0Ooo
 if 80 - 80: I1IiiI - OOooOOo . oO0o
 if III1ii1 == "unzipfail" :
  print ' '
  print '--> INSTALL HALTED: Error extracting Zip'
  if 75 - 75: oO0o + OoOoOO00 - OoooooooOO
  if 38 - 38: I11i / Oo0ooO0oo0oO / OoOoOO00 * OOooOOo . oO0o
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( ooO ( "areswizard" ) , Oo0oo0O0o00O + ooO ( "installfailed" ) )
  if 8 - 8: OoO0O00 . OOooOOo % O0oo0OO0 * OOooOOo / I1IiiI
  return ( 'unzipfail' )
  if 3 - 3: O00oOoOoO0o0O - I1ii11iIi11i . o0oOOo0O0Ooo
  if 39 - 39: oO0o . O0oo0OO0 + oO0o % OoOoOO00 - i11iIiiIii
 I1i ( )
 if 69 - 69: I11i / OoO0O00
 if o000oo == "true" :
  print '----------------------------------'
  print '--> kodi still running  <--'
  print '-----------------------------------'
  if 73 - 73: i11iIiiIii / i1IIi
 return ( 'kodirunning' )
 if 8 - 8: O0 / OOooOOo + iii1I1I % iIii1I11I1II1 % iIii1I11I1II1 . Oo0ooO0oo0oO
 if 47 - 47: OoO0O00 / o0oOOo0O0Ooo / Ii1I * I1IiiI % Oo0ooO0oo0oO / O0oo0OO0
 if 80 - 80: O0oo0OO0 / O0 * O0
 if 40 - 40: OoO0O00 - oO0o / o0oOOo0O0Ooo . oO0o
 if 89 - 89: i11iIiiIii - II111iiii
def OoO0OOOOoo ( src , dst , symlinks = False , ignore = None ) :
 for O0oooo000oO0 in os . listdir ( src ) :
  iIIiI11iI1 = os . path . join ( src , O0oooo000oO0 )
  O00oo00oO = os . path . join ( dst , O0oooo000oO0 )
  if os . path . isdir ( iIIiI11iI1 ) :
   shutil . copytree ( iIIiI11iI1 , O00oo00oO , symlinks , ignore )
  else :
   shutil . copy2 ( iIIiI11iI1 , O00oo00oO )
   if 67 - 67: O00oOoOoO0o0O % O0oo0OO0 + i11iIiiIii
   if 53 - 53: OOooOOo
   if 95 - 95: oO0o - OOooOOo % O0oo0OO0 / OoooooooOO % OoooooooOO - O0
   if 21 - 21: O0oo0OO0 . i1IIi - iii1I1I % I1ii11iIi11i . OOooOOo
def OooIII1i1I ( url , dest , name ) :
 if 52 - 52: Ii1I * I1ii11iIi11i
 global ooo00Ooo
 if 21 - 21: I1IiiI . i11iIiiIii - o0oOOo0O0Ooo * II111iiii % iIii1I11I1II1
 try :
  ooo00Ooo
 except NameError :
  ooo00Ooo = " "
  if 9 - 9: I1ii11iIi11i + I11i
 if o000oo == "true" :
  print '---------------------'
  print '-->  Downloader   <--'
  print '---------------------'
  print '--> URL: ' + url
  print '--> Dest: ' + dest
  print '--> name: ' + name
  print '--> agent: ' + ooo00Ooo
  print '---------------------'
  print ' '
  if 20 - 20: iii1I1I + i1IIi / oO0o % OoooooooOO * OoOoOO00
  if 70 - 70: Oo0Ooo - OOooOOo * OOooOOo / o0oOOo0O0Ooo
 I1Iii11iI = xbmcgui . DialogProgress ( )
 I1Iii11iI . create ( ooO ( "areswizard" ) , ooO ( "downloading" ) + name , ' ' , ' ' )
 I1Iii11iI . update ( 0 )
 iIIIiIIIiIIii11I = time . time ( )
 if 8 - 8: I1ii11iIi11i . o0oOOo0O0Ooo + OoooooooOO
 if 52 - 52: i1IIi - oO0o
 if 33 - 33: Ii1I / I1ii11iIi11i . Oo0ooO0oo0oO . OoooooooOO
 if 45 - 45: OoO0O00 . I1ii11iIi11i + Ii1I / I11i - Oo0ooO0oo0oO / OoooooooOO
 if 44 - 44: OoO0O00 % O0 * O00oOoOoO0o0O + iii1I1I
 if 79 - 79: Oo0ooO0oo0oO
 if ooo00Ooo <> "blackbox" :
  if 82 - 82: O0 - Oo0Ooo - i11iIiiIii
  Iioo00o = { 'User-Agent' : 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11' ,
 'Accept' : 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8' ,
 'Accept-Charset' : 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' ,
 'Accept-Encoding' : 'none' ,
 'Accept-Language' : 'en-US,en;q=0.8' ,
 'Connection' : 'keep-alive' }
  if 57 - 57: o0oOOo0O0Ooo . I1IiiI / iii1I1I / Oo0ooO0oo0oO - OoO0O00
  try :
   oo00 ( ) . retrieve ( url , dest , lambda IiI1iI1IIii , IiIIiIII1I1i , IIi1iiIIIII : ooo00O ( IiI1iI1IIii , IiIIiIII1I1i , IIi1iiIIIII , I1Iii11iI , iIIIiIIIiIIii11I ) )
  except II1Iiii1111i :
   I1Iii11iI . update ( 0 )
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Ares Wizard" , "Download cancelled" )
   return 'cancelled'
  except Exception , ii111I1iIiIi111I :
   I1Iii11iI . update ( 0 )
   print ii111I1iIiIi111I
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I ) )
   return 'false'
  except :
   I1Iii11iI . update ( 0 )
   if 70 - 70: O00oOoOoO0o0O / OoooooooOO * oO0o
   while os . path . exists ( dest ) :
    try :
     os . remove ( dest )
     return 'false'
    except :
     return 'false'
     if 99 - 99: iIii1I11I1II1
   if sys . exc_info ( ) [ 0 ] in ( urllib . ContentTooShortError , II1Iiii1111i , OSError ) :
    try :
     os . remove ( dest )
     return 'false'
    except :
     pass
     if 27 - 27: Oo0Ooo
     if 85 - 85: iIii1I11I1II1 . o0oOOo0O0Ooo + oO0o
   else :
    if 79 - 79: O0 - iIii1I11I1II1 + i1IIi . I11i
    return 'false'
    if 21 - 21: II111iiii
    if 23 - 23: I11i * i1IIi . oO0o / O00oOoOoO0o0O + o0oOOo0O0Ooo
    if 1 - 1: O00oOoOoO0o0O / OoO0O00 . oO0o * O0oo0OO0 - i11iIiiIii
    if 50 - 50: oO0o - O0 / I1IiiI . OoOoOO00 . Oo0Ooo
    if 30 - 30: O00oOoOoO0o0O . OoO0O00 + Oo0Ooo
 else :
  if 48 - 48: iIii1I11I1II1 / i11iIiiIii . OoOoOO00 * I11i
  if 1 - 1: O00oOoOoO0o0O . OoOoOO00 * o0oOOo0O0Ooo
  if 63 - 63: O0 / Ii1I + O0oo0OO0 % OoO0O00 % OOooOOo * O0
  if o000oo == "true" :
   print ' '
   print '@ares: blackbox agent used '
   print ' '
   if 35 - 35: OoO0O00 + OoooooooOO % Oo0Ooo / I11i - O0 . i1IIi
  try :
   if 76 - 76: O00oOoOoO0o0O % I1IiiI * Ii1I / Ii1I / OoooooooOO + Ii1I
   IiiIII111iI ( ) . retrieve ( url , dest , lambda IiI1iI1IIii , IiIIiIII1I1i , IIi1iiIIIII : ooo00O ( IiI1iI1IIii , IiIIiIII1I1i , IIi1iiIIIII , I1Iii11iI , iIIIiIIIiIIii11I ) )
   if 19 - 19: OoooooooOO
   if 88 - 88: I1IiiI % Oo0ooO0oo0oO % Oo0Ooo - O0
  except II1Iiii1111i :
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Ares Wizard" , "Download cancelled" )
   return 'cancelled'
  except Exception , ii111I1iIiIi111I :
   print ii111I1iIiIi111I
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I ) )
   return 'false'
  except :
   if 71 - 71: OOooOOo % Ii1I - i11iIiiIii - oO0o . Oo0ooO0oo0oO / O0oo0OO0
   while os . path . exists ( dest ) :
    try :
     os . remove ( dest )
     return 'false'
    except :
     return 'false'
     if 53 - 53: iii1I1I . Oo0Ooo
   if sys . exc_info ( ) [ 0 ] in ( urllib . ContentTooShortError , II1Iiii1111i , OSError ) :
    try :
     os . remove ( dest )
     return 'false'
    except :
     pass
     if 91 - 91: oO0o * OoooooooOO * oO0o % oO0o * II111iiii % O0oo0OO0
     if 8 - 8: Ii1I
   else :
    if 28 - 28: iii1I1I / I1ii11iIi11i - OoOoOO00 * Oo0Ooo + Ii1I * OoOoOO00
    return 'false'
    if 94 - 94: oO0o
    if 95 - 95: Oo0ooO0oo0oO * O0 + OOooOOo
    if 11 - 11: i1IIi / OoOoOO00 + OoOoOO00 + I1ii11iIi11i + OOooOOo
    if 21 - 21: Oo0ooO0oo0oO
    if 28 - 28: OoOoOO00 + OoOoOO00 - OoOoOO00 / Oo0ooO0oo0oO
 I1Iii11iI = xbmcgui . DialogProgress ( )
 I1Iii11iI . create ( ooO ( "areswizard" ) , "Please wait..." , ' ' , ' ' )
 I1Iii11iI . update ( 0 )
 if 81 - 81: oO0o
 if 34 - 34: o0oOOo0O0Ooo * OOooOOo - i1IIi * o0oOOo0O0Ooo * Oo0Ooo
 if 59 - 59: iIii1I11I1II1 / Oo0Ooo % II111iiii
 if 55 - 55: Oo0ooO0oo0oO - O00oOoOoO0o0O + o0oOOo0O0Ooo
 if 48 - 48: O0 - iIii1I11I1II1 * OOooOOo
 if 33 - 33: I11i
 if o000oo == "true" :
  print '--------------------------'
  print ' --> DOWNLOAD COMPLETE <--'
  print '--------------------------'
  print ' '
  if 63 - 63: Ii1I % II111iiii / OoOoOO00 + Oo0Ooo
 return 'true'
 if 28 - 28: OoO0O00 + I1IiiI . oO0o + II111iiii - O0
 if 32 - 32: oO0o
 if 62 - 62: i11iIiiIii + OoooooooOO + O00oOoOoO0o0O - OoO0O00 / oO0o * iIii1I11I1II1
def OOOo0OoO0 ( url , dest , name ) :
 if 22 - 22: Oo0ooO0oo0oO - O0oo0OO0 + O0oo0OO0 * OoOoOO00 * Ii1I
 if 78 - 78: O0 % Ii1I * OoO0O00 . I11i + I11i
 if 86 - 86: i1IIi + I1ii11iIi11i / i1IIi
 if o000oo == "true" :
  print '---------------------'
  print '-->  Alternate Downloader   <--'
  print '---------------------'
  print '--> URL: ' + url
  print '--> Dest: ' + dest
  print '--> name: ' + name
  print '---------------------'
  print ' '
  if 54 - 54: iIii1I11I1II1 * Ii1I
  if 13 - 13: OoO0O00 - II111iiii . iii1I1I + OoOoOO00 / i11iIiiIii
  if 32 - 32: Oo0ooO0oo0oO / II111iiii / I1ii11iIi11i
  if 34 - 34: iIii1I11I1II1
 try :
  os . remove ( dest )
 except :
  pass
  if 47 - 47: OOooOOo * iii1I1I
  if 71 - 71: O00oOoOoO0o0O - OoooooooOO * i11iIiiIii . OoooooooOO % i1IIi . Oo0Ooo
  if 3 - 3: OoO0O00 + i11iIiiIii + oO0o * O00oOoOoO0o0O
 I1Iii11iI = xbmcgui . DialogProgress ( )
 I1Iii11iI . create ( ooO ( "areswizard" ) , ooO ( "downloading" ) + name , ' ' , ' ' )
 I1Iii11iI . update ( 0 )
 if 19 - 19: iii1I1I / II111iiii . O0oo0OO0 * I1IiiI - OOooOOo
 if 70 - 70: OoO0O00
 if 42 - 42: OoooooooOO - O0oo0OO0 + I1ii11iIi11i * iii1I1I * iii1I1I / OoO0O00
 if 85 - 85: O0 . II111iiii
 if 80 - 80: O0 * I11i * O0oo0OO0
 if 89 - 89: Ii1I * OoO0O00 . i1IIi . O0 - O00oOoOoO0o0O - OoOoOO00
 if 25 - 25: iii1I1I + i1IIi
 if 64 - 64: O00oOoOoO0o0O % I11i / iIii1I11I1II1
 if 66 - 66: Ii1I
 if 55 - 55: OOooOOo + I1IiiI + O00oOoOoO0o0O . Ii1I * oO0o
 if 71 - 71: O00oOoOoO0o0O - iii1I1I % I1IiiI * iii1I1I
 if 27 - 27: Oo0ooO0oo0oO - OoO0O00
 if 83 - 83: iii1I1I * OoOoOO00 - O0 * Ii1I
 if 79 - 79: I11i / iii1I1I % Ii1I / OoOoOO00 % O0 / O00oOoOoO0o0O
 try :
  iIiIi1i1ii11 = urllib2 . Request ( url )
  iIiIi1i1ii11 . add_header ( 'User-Agent' , I1ii1Ii1 )
  if 32 - 32: O00oOoOoO0o0O * II111iiii . Ii1I
  try :
   if 68 - 68: I11i / O0
   o0O00o00Ooo = urllib2 . urlopen ( iIiIi1i1ii11 )
   if 6 - 6: oO0o - oO0o . I1IiiI % I1ii11iIi11i
  except HTTPError , ii111I1iIiIi111I :
   if 22 - 22: Ii1I / I1IiiI / II111iiii
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . code ) )
   print '@Ares: HTTP Error: ' + str ( ii111I1iIiIi111I . code )
   return ( 'downloadfailed' )
   if 31 - 31: II111iiii - Ii1I * OOooOOo - i11iIiiIii / OoooooooOO - O0oo0OO0
  except URLError , ii111I1iIiIi111I :
   if 76 - 76: Oo0Ooo
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . reason ) , "" , "" )
   print '@Ares: URL Error: ' + str ( ii111I1iIiIi111I . reason )
   return ( 'downloadfailed' )
   if 93 - 93: i1IIi - I1IiiI * i11iIiiIii / Ii1I . Ii1I - i1IIi
  except IOError , ii111I1iIiIi111I :
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . errno ) + " - " + str ( ii111I1iIiIi111I . strerror ) , "" , "" )
   print '@Ares: IO Error: ' + str ( ii111I1iIiIi111I . errno ) + ' - ' + str ( ii111I1iIiIi111I . strerror )
   return ( 'downloadfailed' )
   if 19 - 19: iIii1I11I1II1 * OOooOOo * Oo0Ooo % I1IiiI
  except :
   if 93 - 93: O00oOoOoO0o0O % OoOoOO00 / I1IiiI + o0oOOo0O0Ooo * Oo0ooO0oo0oO / i1IIi
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Download Error" , "Unspecified Error (sorry)" , "" , "" )
   print '@Ares: Download Error: Unspecified'
   return ( 'downloadfailed' )
   if 25 - 25: O0 / Oo0Ooo - o0oOOo0O0Ooo * Oo0Ooo
   if 45 - 45: Ii1I * O00oOoOoO0o0O - OOooOOo
   if 57 - 57: iii1I1I % OoO0O00 / OoooooooOO
  O00o0O00 = o0O00o00Ooo . read ( )
  file = open ( dest , "wb" )
  file . write ( O00o0O00 )
  file . close ( )
  if 69 - 69: oO0o
 except HTTPError , ii111I1iIiIi111I :
  if 44 - 44: O00oOoOoO0o0O - II111iiii % Ii1I
  if 64 - 64: Ii1I % OoO0O00 + OOooOOo % OoOoOO00 + O00oOoOoO0o0O
  if 92 - 92: iii1I1I * Oo0Ooo - OoOoOO00
  print ii111I1iIiIi111I . code
  if 33 - 33: i11iIiiIii - OoOoOO00 . OOooOOo * II111iiii . Ii1I
 except URLError , ii111I1iIiIi111I :
  if 59 - 59: OoOoOO00
  if 29 - 29: iii1I1I - II111iiii * OoooooooOO * OoooooooOO
  if 15 - 15: O00oOoOoO0o0O / OOooOOo / iIii1I11I1II1 / OoOoOO00
  print ii111I1iIiIi111I . reason
  if 91 - 91: i11iIiiIii % O0 . Oo0Ooo / O0oo0OO0
 except IOError , ii111I1iIiIi111I :
  if 62 - 62: Oo0Ooo . II111iiii % OoO0O00 . Ii1I * OOooOOo + II111iiii
  print '@Ares: IO Error: ' + str ( ii111I1iIiIi111I . errno ) + ' - ' + str ( ii111I1iIiIi111I . strerror )
  if 7 - 7: OOooOOo
  if 22 - 22: Oo0Ooo + Oo0ooO0oo0oO
 except :
  pass
  if 71 - 71: OOooOOo . Ii1I * i11iIiiIii . I11i
  if 9 - 9: O0 / I1ii11iIi11i . iii1I1I . O0 + O00oOoOoO0o0O % I11i
  if 27 - 27: i11iIiiIii - I1ii11iIi11i / O0 - i1IIi + I1IiiI * iii1I1I
  if 26 - 26: Oo0Ooo . Ii1I
  if 7 - 7: OoOoOO00 - o0oOOo0O0Ooo + oO0o
  if 8 - 8: iIii1I11I1II1
 I1Iii11iI = xbmcgui . DialogProgress ( )
 I1Iii11iI . create ( ooO ( "areswizard" ) , "Please wait..." , ' ' , ' ' )
 I1Iii11iI . update ( 0 )
 if 6 - 6: oO0o
 if 51 - 51: O0oo0OO0 - o0oOOo0O0Ooo
 if 5 - 5: O0
 if 7 - 7: OoOoOO00 + OoO0O00 * I1IiiI
 if 63 - 63: I1ii11iIi11i + iii1I1I * i1IIi
 if 63 - 63: I1ii11iIi11i / II111iiii % oO0o + Oo0ooO0oo0oO . Ii1I % I11i
 if o000oo == "true" :
  print '--------------------------'
  print ' --> DOWNLOAD COMPLETE <--'
  print '--------------------------'
  print ' '
  if 59 - 59: O0oo0OO0 % o0oOOo0O0Ooo - I1IiiI * i1IIi
  if 5 - 5: I1IiiI
  if 22 - 22: II111iiii / iii1I1I
  if 18 - 18: i11iIiiIii * Oo0ooO0oo0oO . I1IiiI + i1IIi + I11i
  if 62 - 62: O0 % o0oOOo0O0Ooo + iIii1I11I1II1 + iIii1I11I1II1 * Oo0ooO0oo0oO
def iIi1iIiii1i ( source_file_path , destination_dir , name ) :
 if 95 - 95: Oo0ooO0oo0oO - Oo0ooO0oo0oO % O00oOoOoO0o0O . OoO0O00 - iIii1I11I1II1 % Ii1I
 try :
  I1Iii11iI . close ( )
 except :
  pass
  if 51 - 51: i1IIi % Oo0Ooo
 if o000oo == "true" :
  print '---------------------'
  print '-->    UnZip      <--'
  print '---------------------'
  print '--> Source: ' + source_file_path
  print '--> Dest: ' + destination_dir
  print '---------------------'
  print ' '
  if 32 - 32: OoOoOO00 + iIii1I11I1II1 . OoO0O00 . I1ii11iIi11i . O00oOoOoO0o0O
  if 97 - 97: Oo0ooO0oo0oO * Oo0ooO0oo0oO * iIii1I11I1II1 * O0oo0OO0 + iii1I1I + OoOoOO00
  if 8 - 8: Oo0Ooo . oO0o + II111iiii
  if 100 - 100: OoOoOO00 . O00oOoOoO0o0O / OoO0O00 * OoooooooOO - OoOoOO00
  if 98 - 98: OoO0O00 / I1ii11iIi11i + I1ii11iIi11i
 try :
  Oo0OO0o00OO = zipfile . ZipFile ( source_file_path , 'r' )
 except :
  os . remove ( source_file_path )
  print 'zipfile failed'
  if 74 - 74: II111iiii
  return ( 'unzipfail' )
  if 73 - 73: oO0o + OoO0O00 . O0 - Ii1I - O0oo0OO0 - I11i
  if 64 - 64: OOooOOo / OoOoOO00
 iiiII1I11 = float ( len ( Oo0OO0o00OO . infolist ( ) ) )
 o00000 = 0
 if 24 - 24: O0 % Ii1I . I1ii11iIi11i % O0oo0OO0 * i11iIiiIii
 if 19 - 19: I1IiiI - OoO0O00 % iii1I1I . i11iIiiIii * O0oo0OO0
 I1Iii11iI = xbmcgui . DialogProgress ( )
 I1Iii11iI . create ( ooO ( "areswizard" ) , "Extracting" , ' ' )
 I1Iii11iI . update ( 1 )
 if 54 - 54: o0oOOo0O0Ooo . i1IIi / iii1I1I
 if 21 - 21: O0 + Oo0ooO0oo0oO
 o00oo0o0O = [ ]
 if 15 - 15: II111iiii + OoO0O00 . iIii1I11I1II1 + iIii1I11I1II1 - o0oOOo0O0Ooo
 for O0OOo0oo in Oo0OO0o00OO . infolist ( ) :
  o00000 += 1
  II1i1i = o00000 / iiiII1I11 * 100
  o00OOoooO0o = O0OOo0oo . filename
  o00OOoooO0o = o00OOoooO0o . replace ( 'addons/' , '' )
  I1Iii11iI . update ( int ( II1i1i ) , "Extracting.." , o00OOoooO0o )
  if 93 - 93: OoooooooOO + I1IiiI % iii1I1I
  if 41 - 41: iIii1I11I1II1 * O0 - OoOoOO00 + OOooOOo / iIii1I11I1II1
  o00OOoooO0o = str ( O0OOo0oo . filename )
  if o00OOoooO0o . find ( 'kodi.log' ) <> - 1 :
   print '@ares-Skipping kodi.log extraction'
  else :
   try :
    Oo0OO0o00OO . extract ( O0OOo0oo , destination_dir )
    if 56 - 56: i11iIiiIii - oO0o
   except Exception , ii111I1iIiIi111I :
    if 33 - 33: O00oOoOoO0o0O + I1IiiI / i11iIiiIii - OoO0O00
    try :
     print ' '
     print '@ares-ERROR-EXTRACTING: ' + str ( ii111I1iIiIi111I )
     iiIiIIIii = str ( ii111I1iIiIi111I )
    except :
     iiIiIIIii = " "
     if 92 - 92: Oo0Ooo * Oo0ooO0oo0oO / o0oOOo0O0Ooo % i11iIiiIii + OoooooooOO
     if 37 - 37: OoO0O00 . iii1I1I
     if 32 - 32: II111iiii
     if 11 - 11: i11iIiiIii - OOooOOo . i1IIi + OOooOOo - O0
     if 17 - 17: i1IIi % o0oOOo0O0Ooo % Oo0ooO0oo0oO / I11i
     if 68 - 68: OoOoOO00
     if 14 - 14: iIii1I11I1II1 + oO0o / Oo0ooO0oo0oO
     if 20 - 20: I1ii11iIi11i . II111iiii % O0oo0OO0 + O0oo0OO0 / OoooooooOO . Ii1I
     if 98 - 98: OoooooooOO - i11iIiiIii - iii1I1I + Ii1I - I1IiiI
    ooOo0OO0O0 = iiIiIIIii . find ( '\'' )
    if 24 - 24: OoooooooOO / Oo0ooO0oo0oO + Oo0Ooo - OOooOOo - o0oOOo0O0Ooo . I1ii11iIi11i
    if 2 - 2: I1IiiI . o0oOOo0O0Ooo / Oo0Ooo - OoOoOO00 - OoooooooOO
    if 73 - 73: O0oo0OO0 . i11iIiiIii * Oo0ooO0oo0oO . O00oOoOoO0o0O - I11i + O0oo0OO0
    I1IiiI1 = iiIiIIIii [ : ooOo0OO0O0 ]
    if 7 - 7: OoO0O00 - OOooOOo * I11i . oO0o
    if 17 - 17: iii1I1I - OOooOOo * I1IiiI + i1IIi % I1ii11iIi11i
    if 71 - 71: Ii1I - o0oOOo0O0Ooo - oO0o
    o00OOoooO0o = O0OOo0oo . filename . replace ( "addons/" , "" )
    if 27 - 27: O0 - iIii1I11I1II1
    oOOOooOoOO0o = I1IiiI1 + o00OOoooO0o
    if 60 - 60: I1ii11iIi11i * i11iIiiIii + oO0o
    if 59 - 59: I11i
    if 61 - 61: O00oOoOoO0o0O * O0oo0OO0 * OoO0O00 / oO0o - OoooooooOO
    if 5 - 5: o0oOOo0O0Ooo % OOooOOo % II111iiii
    OoOoo0o0o = OoOoo0o0o + 1
    if 26 - 26: OoooooooOO - O0oo0OO0 / Oo0Ooo - iii1I1I % OoOoOO00 * OoooooooOO
    if 3 - 3: oO0o
    if 3 - 3: I1ii11iIi11i . O00oOoOoO0o0O + Oo0ooO0oo0oO
    o00oo0o0O . append ( oOOOooOoOO0o )
    if 66 - 66: OOooOOo + oO0o - Oo0ooO0oo0oO / Ii1I * OoO0O00 * i11iIiiIii
    if 69 - 69: I11i % i11iIiiIii
    if 34 - 34: Ii1I . OoooooooOO + II111iiii % oO0o
    if 69 - 69: i11iIiiIii % I1IiiI * i11iIiiIii - OoO0O00 * iIii1I11I1II1
    if 70 - 70: O0oo0OO0 . OoOoOO00 % OoooooooOO + OoOoOO00 / II111iiii
    if 39 - 39: O0oo0OO0 * I1IiiI - o0oOOo0O0Ooo . oO0o . OOooOOo * i11iIiiIii
    if 70 - 70: OoOoOO00 / OOooOOo - o0oOOo0O0Ooo
    if 82 - 82: OOooOOo . i11iIiiIii . I1ii11iIi11i % OoOoOO00 * Ii1I / OoO0O00
 time . sleep ( 2 )
 if 56 - 56: o0oOOo0O0Ooo / I1IiiI + I11i + I1IiiI
 if 34 - 34: Oo0Ooo / i11iIiiIii - Oo0ooO0oo0oO
 if len ( o00oo0o0O ) > 1 :
  if 77 - 77: OoOoOO00 * OoooooooOO
  OOooo = xbmcgui . Dialog ( )
  if OOooo . yesno ( ooO ( "areswizard" ) , ooO ( "buildextractfail" ) , yeslabel = 'Yes' , nolabel = 'No' ) :
   if 41 - 41: iIii1I11I1II1 - O0 . II111iiii + I1IiiI - II111iiii / oO0o
   if 35 - 35: Oo0ooO0oo0oO - OoOoOO00 / iIii1I11I1II1 / OOooOOo
   Ooo0000o = '\n' . join ( o00oo0o0O )
   O0o00 ( Ooo0000o )
   if 38 - 38: i1IIi % OoooooooOO
   if 5 - 5: iIii1I11I1II1 + iIii1I11I1II1 . iIii1I11I1II1 + o0oOOo0O0Ooo
 if o000oo == "true" :
  print '--------------------------'
  print ' -->  UnZip COMPLETE   <--'
  print '--------------------------'
  print ' '
  if 45 - 45: I1IiiI - OoooooooOO - O0oo0OO0 - i1IIi - OoooooooOO * O0
  if 67 - 67: OoOoOO00 * o0oOOo0O0Ooo . O00oOoOoO0o0O
  if 72 - 72: OoOoOO00 % OoooooooOO * O0
  if 27 - 27: I1ii11iIi11i . OoooooooOO / II111iiii . OOooOOo
  if 58 - 58: oO0o / Oo0ooO0oo0oO
def IiI1i1 ( source_file_path , destination_dir , name , mode ) :
 if 31 - 31: o0oOOo0O0Ooo % I11i - OoO0O00
 try :
  I1Iii11iI . close ( )
 except :
  pass
  if 40 - 40: o0oOOo0O0Ooo % OoOoOO00 + I11i / O0 - II111iiii
 if o000oo == "true" :
  print '---------------------'
  print '-->    UnZip      <--'
  print '---------------------'
  print '--> Source: ' + source_file_path
  print '--> Dest: ' + destination_dir
  print '---------------------'
  print ' '
  if 9 - 9: OoooooooOO - OOooOOo . I11i * oO0o
  if 3 - 3: iIii1I11I1II1 - OoO0O00
  if 38 - 38: O0 + Oo0ooO0oo0oO * O0oo0OO0 - oO0o * o0oOOo0O0Ooo
  if 97 - 97: Oo0Ooo - O0 * OoooooooOO
  if 52 - 52: i1IIi + O00oOoOoO0o0O
 try :
  Oo0OO0o00OO = zipfile . ZipFile ( source_file_path , 'r' )
 except :
  os . remove ( source_file_path )
  print 'zipfile failed'
  if 11 - 11: I1IiiI % iIii1I11I1II1 * Ii1I % Oo0ooO0oo0oO
  return ( 'unzipfail' )
  if 33 - 33: iii1I1I / O0 % II111iiii % OoOoOO00 / O0oo0OO0
  if 77 - 77: OoOoOO00 % I1IiiI % II111iiii * iii1I1I . OoOoOO00 / O0
 iiiII1I11 = float ( len ( Oo0OO0o00OO . infolist ( ) ) )
 o00000 = 0
 oO0oO00 = int ( iiiII1I11 )
 if 21 - 21: Oo0ooO0oo0oO - I11i . i11iIiiIii
 if 39 - 39: Oo0Ooo * II111iiii % OOooOOo / oO0o . Oo0ooO0oo0oO
 I1Iii11iI = xbmcgui . DialogProgress ( )
 I1Iii11iI . create ( ooO ( "areswizard" ) , "Extracting" , ' ' )
 I1Iii11iI . update ( 1 )
 if 75 - 75: I11i / O0 + OoooooooOO + OOooOOo % iii1I1I + I1IiiI
 if 10 - 10: II111iiii * I11i - O00oOoOoO0o0O * iIii1I11I1II1 . OoooooooOO
 OoOoo0o0o = 0
 I1oOO000 = [ ]
 if 34 - 34: OoooooooOO . I1IiiI . Oo0Ooo % iii1I1I
 for O0OOo0oo in Oo0OO0o00OO . infolist ( ) :
  o00000 += 1
  if 24 - 24: Oo0ooO0oo0oO * oO0o * Oo0Ooo . oO0o - OoOoOO00
  II1i1i = o00000 / iiiII1I11 * 100
  o00OOoooO0o = O0OOo0oo . filename
  o00OOoooO0o = o00OOoooO0o . replace ( 'addons/' , '' )
  I1Iii11iI . update ( int ( II1i1i ) , 'Extracting' + ooO ( "buildextractfile" ) + str ( o00000 ) + ooO ( "buildextractfile2" ) + str ( oO0oO00 ) + '... [Errors: ' + str ( OoOoo0o0o ) + ']' , o00OOoooO0o )
  if 85 - 85: II111iiii
  if 51 - 51: Oo0Ooo
  if 57 - 57: i1IIi * Oo0ooO0oo0oO + o0oOOo0O0Ooo + O0 - I1ii11iIi11i % O00oOoOoO0o0O
  try :
   o00OOoooO0o = str ( O0OOo0oo . filename )
  except :
   if 62 - 62: Ii1I / i11iIiiIii - I11i * Oo0ooO0oo0oO + iii1I1I
   if o000oo == "true" :
    print ' '
    print '@Ares: buildunzip: filename error '
    print ' '
    if 85 - 85: oO0o . iIii1I11I1II1 % i11iIiiIii - i11iIiiIii % O00oOoOoO0o0O / Oo0Ooo
    if 11 - 11: OoO0O00 . I1IiiI * I1ii11iIi11i / Oo0ooO0oo0oO - i11iIiiIii
  if o00OOoooO0o . find ( 'kodi.log' ) <> - 1 :
   print '@ares-Skipping kodi.log extraction'
   if 40 - 40: I1ii11iIi11i + I11i * OoooooooOO % OoooooooOO
  elif o00OOoooO0o . find ( 'kodi.old.log' ) <> - 1 :
   print '@ares-Skipping kodi.old.log extraction'
   if 19 - 19: Oo0Ooo . OOooOOo
  elif o00OOoooO0o . find ( 'areswizard' ) <> - 1 :
   print '@ares-Skipping AresWizard extraction'
   if 58 - 58: O00oOoOoO0o0O % iii1I1I + i1IIi % I1IiiI % OOooOOo . iii1I1I
   if 85 - 85: i11iIiiIii . o0oOOo0O0Ooo * iii1I1I . I1ii11iIi11i / O0oo0OO0 % Ii1I
   if 27 - 27: II111iiii . iIii1I11I1II1 / I1ii11iIi11i / i1IIi / iIii1I11I1II1
   if 70 - 70: i11iIiiIii . OoO0O00 / OoooooooOO * OoooooooOO - OOooOOo
  elif o00OOoooO0o . find ( '.gitignore' ) <> - 1 :
   print '@ares-Skipping .gitignore extraction'
   if 34 - 34: I1ii11iIi11i * i1IIi % OoooooooOO / I1IiiI
  elif o00OOoooO0o . find ( 'saltscache' ) <> - 1 :
   print '@ares-Skipping saltscache extraction'
   if 39 - 39: OoO0O00 + O00oOoOoO0o0O - II111iiii % I11i
  elif o00OOoooO0o . find ( '__MACOSX' ) <> - 1 :
   print '@ares-Skipping __MACOSX junk apple files extraction'
   if 80 - 80: o0oOOo0O0Ooo * Oo0ooO0oo0oO
  elif o00OOoooO0o . find ( '.DS_Store' ) <> - 1 :
   print '@ares-Skipping .DS_Store junk apple files extraction'
   if 87 - 87: O0oo0OO0 + O0 / I1ii11iIi11i / OoOoOO00 . Oo0Ooo - O00oOoOoO0o0O
  elif xbmcplugin . getSetting ( int ( sys . argv [ 1 ] ) , 'keepfavourites' ) == "true" and o00OOoooO0o . find ( 'userdata/favourites.xml' ) <> - 1 :
   print '@ares-Skipping favorites extraction (keep favorites turned on)'
   if 24 - 24: OoOoOO00
  elif xbmcplugin . getSetting ( int ( sys . argv [ 1 ] ) , 'keepsources' ) == "true" and o00OOoooO0o . find ( 'userdata/sources.xml' ) <> - 1 :
   print '@ares-Skipping sources extraction (keep sources turned on)'
   if 19 - 19: Oo0ooO0oo0oO
   if 43 - 43: O0 . O0oo0OO0 % OoooooooOO / I1IiiI . o0oOOo0O0Ooo - OoOoOO00
  else :
   if 46 - 46: I11i - OoooooooOO % o0oOOo0O0Ooo
   if o00OOoooO0o . find ( 'guisettings.xml' ) <> - 1 :
    if 7 - 7: OoooooooOO - O0oo0OO0 * O00oOoOoO0o0O
    if not mode == "restore" :
     if 20 - 20: o0oOOo0O0Ooo . OoooooooOO * I1IiiI . Oo0Ooo * OoOoOO00
     print '@ares: detected guisettings.xml at ' + o00OOoooO0o
     if 3 - 3: O0oo0OO0 % i11iIiiIii % O0 % II111iiii
     oOO0o0o ( 'guisettingssize' , O0OOo0oo . file_size )
     if 8 - 8: OoooooooOO * Oo0ooO0oo0oO
     try :
      Oo0OO0o00OO . extract ( O0OOo0oo , oO0 )
      print '@ares: guisettings.xml extracted to datadir'
      if 26 - 26: i11iIiiIii + oO0o - i1IIi
     except :
      print '@ares: failed to write guisetting.xml backup to datadir'
      if 71 - 71: I1IiiI % O0oo0OO0 / oO0o % oO0o / iIii1I11I1II1 + O0oo0OO0
      if 86 - 86: O00oOoOoO0o0O % i1IIi * o0oOOo0O0Ooo - O0oo0OO0
      if 37 - 37: iii1I1I % I1IiiI - I1ii11iIi11i % I11i
      if 35 - 35: O0 - OoooooooOO % iii1I1I
      if 48 - 48: OOooOOo % i11iIiiIii
      if 49 - 49: O0 * iii1I1I + II111iiii - OOooOOo
   if o00OOoooO0o . find ( 'profiles.xml' ) <> - 1 :
    if 29 - 29: OoooooooOO % II111iiii - Oo0Ooo / O00oOoOoO0o0O - i11iIiiIii
    if not mode == "restore" :
     if 64 - 64: iii1I1I . O0oo0OO0 + O0oo0OO0
     if 1 - 1: OOooOOo % Oo0Ooo
     try :
      Oo0OO0o00OO . extract ( O0OOo0oo , oO0 )
      print '@ares: profiles.xml extracted to datadir'
      if 81 - 81: oO0o / I11i % Ii1I . I11i + OoooooooOO
     except :
      print '@ares: failed to write profiles.xml backup to datadir'
      if 31 - 31: OoO0O00
      if 41 - 41: i11iIiiIii - I1ii11iIi11i - II111iiii
      if 5 - 5: OoOoOO00 + i1IIi
      if 43 - 43: iii1I1I * I1IiiI
      if 20 - 20: I1IiiI . I11i * OoO0O00 . Oo0ooO0oo0oO . II111iiii
   try :
    if 6 - 6: Ii1I * OoOoOO00 % O00oOoOoO0o0O + I11i
    if o000oo == "true" :
     print '@Ares: Extracting:  ' + O0OOo0oo . filename
     if 20 - 20: oO0o
     if 34 - 34: i1IIi + oO0o * Oo0Ooo * O0oo0OO0 % OoooooooOO % Oo0ooO0oo0oO
     if 17 - 17: I1ii11iIi11i + o0oOOo0O0Ooo / OoO0O00 . Oo0Ooo - o0oOOo0O0Ooo / oO0o
    Oo0OO0o00OO . extract ( O0OOo0oo , destination_dir )
    if 87 - 87: Oo0ooO0oo0oO
   except Exception , ii111I1iIiIi111I :
    if 74 - 74: i11iIiiIii . i11iIiiIii . iIii1I11I1II1
    try :
     print ' '
     print '@ares-ERROR-EXTRACTING: ' + str ( ii111I1iIiIi111I )
     iiIiIIIii = str ( ii111I1iIiIi111I )
    except :
     iiIiIIIii = " "
     if 100 - 100: i11iIiiIii - oO0o + iIii1I11I1II1 * OoOoOO00 % OOooOOo % i11iIiiIii
     if 26 - 26: O0
     if 97 - 97: OOooOOo + I11i % O0oo0OO0 % i11iIiiIii / I1ii11iIi11i
     if 21 - 21: O0 + iIii1I11I1II1 / i11iIiiIii . OOooOOo * i1IIi
     if 3 - 3: i1IIi % o0oOOo0O0Ooo + OoOoOO00
     if 32 - 32: OoO0O00 . Oo0Ooo * iIii1I11I1II1
     if 12 - 12: O0 + I1ii11iIi11i + I11i . O0oo0OO0
     if 48 - 48: Ii1I . iIii1I11I1II1 - iIii1I11I1II1 * I11i . OoooooooOO
     if 73 - 73: Ii1I / II111iiii - iIii1I11I1II1 . Oo0ooO0oo0oO * II111iiii . OOooOOo
    ooOo0OO0O0 = iiIiIIIii . find ( '\'' )
    if 50 - 50: iIii1I11I1II1 + OoOoOO00 % O0 + OoO0O00 . i11iIiiIii / oO0o
    if 31 - 31: I1IiiI % o0oOOo0O0Ooo . i11iIiiIii % OOooOOo - iIii1I11I1II1
    if 77 - 77: i11iIiiIii / OOooOOo
    I1IiiI1 = iiIiIIIii [ : ooOo0OO0O0 ]
    if 93 - 93: I1ii11iIi11i - iii1I1I % O0 - Ii1I
    if 84 - 84: I1ii11iIi11i . iIii1I11I1II1 % O00oOoOoO0o0O * I11i + Oo0ooO0oo0oO
    if 59 - 59: oO0o * OoO0O00 - I11i * I1IiiI
    o00OOoooO0o = O0OOo0oo . filename . replace ( "addons/" , "" )
    if 60 - 60: iii1I1I - OoooooooOO / iii1I1I % OoO0O00 . OoOoOO00 - o0oOOo0O0Ooo
    oOOOooOoOO0o = I1IiiI1 + o00OOoooO0o
    if 71 - 71: iii1I1I * o0oOOo0O0Ooo * i11iIiiIii * O0
    if 77 - 77: OOooOOo % iii1I1I + I11i / OoOoOO00
    if 50 - 50: OoOoOO00 - i11iIiiIii - OOooOOo . iIii1I11I1II1
    if 97 - 97: oO0o % OOooOOo . OoooooooOO * Ii1I
    OoOoo0o0o = OoOoo0o0o + 1
    if 100 - 100: I1ii11iIi11i / Ii1I % Oo0Ooo
    if 83 - 83: O0 . O0oo0OO0 % I1ii11iIi11i
    if 97 - 97: Oo0Ooo % OoO0O00 * I1ii11iIi11i * Oo0ooO0oo0oO * OoO0O00
    I1oOO000 . append ( oOOOooOoOO0o )
    if 12 - 12: Oo0ooO0oo0oO
    if 56 - 56: i1IIi
    if 3 - 3: OOooOOo - Oo0Ooo * Ii1I + i11iIiiIii
    if 53 - 53: i1IIi % I1ii11iIi11i
    if 65 - 65: I11i + OoOoOO00 - i11iIiiIii
    if 72 - 72: i11iIiiIii - iii1I1I . i11iIiiIii
    if 61 - 61: oO0o . i11iIiiIii / Ii1I % iii1I1I
 time . sleep ( 2 )
 if 36 - 36: OoO0O00 + Ii1I / I11i - iii1I1I % OoO0O00 / Oo0Ooo
 if 38 - 38: Ii1I - Oo0ooO0oo0oO - O0 + oO0o . iIii1I11I1II1
 if o00000 <> iiiII1I11 :
  if 90 - 90: i1IIi * OoOoOO00
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( ooO ( "areswizard" ) , "POOP!" )
  if 27 - 27: iIii1I11I1II1
  if 95 - 95: iii1I1I / Oo0ooO0oo0oO % Ii1I
  if 44 - 44: OOooOOo . OOooOOo
  if 5 - 5: oO0o + OoooooooOO
  if 88 - 88: oO0o + OOooOOo
 if OoOoo0o0o > 0 :
  if 14 - 14: I11i / i1IIi
  if 56 - 56: OoooooooOO
  if 59 - 59: I1ii11iIi11i + OoO0O00
  if 37 - 37: O00oOoOoO0o0O * I1IiiI % O0
  OOooo = xbmcgui . Dialog ( )
  if 32 - 32: Oo0ooO0oo0oO % II111iiii
  if OOooo . yesno ( ooO ( "areswizard" ) , ooO ( "buildextractfail" ) ) :
   if 60 - 60: i11iIiiIii
   Ooo0000o = '\n' . join ( I1oOO000 )
   O0o00 ( Ooo0000o )
   if 11 - 11: o0oOOo0O0Ooo
   if 77 - 77: o0oOOo0O0Ooo / iIii1I11I1II1 * iIii1I11I1II1 / o0oOOo0O0Ooo * iii1I1I
   if 26 - 26: Ii1I
   if 1 - 1: OoOoOO00 . o0oOOo0O0Ooo + Oo0Ooo % Oo0Ooo * I1ii11iIi11i
   if 50 - 50: O00oOoOoO0o0O / i1IIi . I1ii11iIi11i
 if o000oo == "true" :
  print '--------------------------'
  print ' -->  UnZip COMPLETE   <--'
  print '--------------------------'
  print ' '
  if 75 - 75: I11i * oO0o + OoooooooOO . iii1I1I + OoO0O00
 return ( )
 if 44 - 44: II111iiii
 if 65 - 65: I11i . iii1I1I . I1IiiI - Oo0Ooo % iIii1I11I1II1 / O0
 if 54 - 54: iii1I1I - O0oo0OO0
 if 88 - 88: iii1I1I * OoO0O00 % OoooooooOO / oO0o
 if 7 - 7: i1IIi
def o000OOoOO0 ( addonname , addonpath , addontype ) :
 if 30 - 30: oO0o . i1IIi / I11i
 if 23 - 23: i1IIi + oO0o % iii1I1I - OoO0O00 - i1IIi
 if 74 - 74: Ii1I + I11i . OoooooooOO - I1ii11iIi11i
 if addonpath == "" or addonpath == " " :
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Error" , "Addon path could not be found" )
  return ( )
  if 2 - 2: oO0o - o0oOOo0O0Ooo
 oO0oIi1I111IiI11I = translate ( 'special://home/addons/' + addonpath )
 if 63 - 63: I1IiiI . iii1I1I % iIii1I11I1II1 + I1ii11iIi11i
 try :
  shutil . rmtree ( oO0oIi1I111IiI11I )
 except :
  pass
  if 56 - 56: O0oo0OO0 % oO0o
 time . sleep ( 2 )
 if 31 - 31: OOooOOo + O00oOoOoO0o0O
 xbmc . executebuiltin ( 'UpdateLocalAddons' )
 if 56 - 56: OoooooooOO * II111iiii
 if 99 - 99: i11iIiiIii - II111iiii . Oo0Ooo - oO0o . I1IiiI + i1IIi
 if 69 - 69: O0 / i1IIi - OoOoOO00 + Oo0ooO0oo0oO - oO0o
 if 80 - 80: o0oOOo0O0Ooo % O0 * I11i . i1IIi - Oo0ooO0oo0oO
 if 93 - 93: OoooooooOO / o0oOOo0O0Ooo
def O00 ( addonname , url , addonpath , addontype , deviceid , mac , username ) :
 if 61 - 61: II111iiii / i1IIi . I1ii11iIi11i % iIii1I11I1II1
 if 66 - 66: iIii1I11I1II1 % OoOoOO00 + i1IIi * i11iIiiIii * OoooooooOO
 if 36 - 36: iii1I1I - OoO0O00 + I1IiiI + Ii1I . OoooooooOO
 url = url . replace ( " " , "%20" )
 if 75 - 75: oO0o * Oo0Ooo * O0
 if 22 - 22: Oo0ooO0oo0oO / OoooooooOO . II111iiii / Ii1I * OoO0O00 . i1IIi
 if 62 - 62: oO0o % Ii1I - Ii1I
 if 16 - 16: OoO0O00 - O0 - OOooOOo - I11i % OoOoOO00
 if 7 - 7: O0oo0OO0 / OoOoOO00 . II111iiii
 if o000oo == "true" :
  print '---------------------'
  print '--> Addon Install <--'
  print '---------------------'
  print '--> Addon Name: ' + addonname
  print '--> Addon URL: ' + url
  print '--> Addon Path: ' + addonpath
  print '--> Addon Type: ' + addontype
  print '---------------------'
  if 9 - 9: I11i . I11i . OoooooooOO
  if 42 - 42: iii1I1I / oO0o / iii1I1I * OoO0O00
 iI1I1 = os . path . join ( Ii1I1Ii , addonpath + '.zip' )
 OooIII1i1I ( url , iI1I1 , addonname )
 if 25 - 25: OoOoOO00 - II111iiii + II111iiii . Ii1I * II111iiii
 I1Iii11iI = xbmcgui . DialogProgress ( )
 I1Iii11iI . create ( ooO ( "areswizard" ) , ooO ( "pleasewait" ) , ' ' , ' ' )
 I1Iii11iI . update ( 0 )
 if 12 - 12: O00oOoOoO0o0O / Ii1I
 time . sleep ( 2 )
 if 54 - 54: Oo0Ooo + Ii1I % OoooooooOO * OOooOOo / OoOoOO00
 III1ii1 = iIi1iIiii1i ( iI1I1 , I1I1i1I , addonname )
 if 39 - 39: I1IiiI % i11iIiiIii % Ii1I
 if III1ii1 == "unzipfail" :
  if 59 - 59: Oo0ooO0oo0oO % OoO0O00 / I1IiiI - II111iiii + OoooooooOO * i11iIiiIii
  OOooo = xbmcgui . Dialog ( )
  if OOooo . yesno ( ooO ( "areswizard" ) , ooO ( "regulardownloadfailed" ) ) :
   if 58 - 58: O00oOoOoO0o0O / Oo0Ooo + o0oOOo0O0Ooo
   OOOo0OoO0 ( url , iI1I1 , addonname )
   if 71 - 71: Ii1I - O00oOoOoO0o0O
   I1Iii11iI = xbmcgui . DialogProgress ( )
   I1Iii11iI . create ( ooO ( "areswizard" ) , ooO ( "pleasewait" ) , ' ' , ' ' )
   I1Iii11iI . update ( 0 )
   if 2 - 2: OoOoOO00 % O00oOoOoO0o0O % OoO0O00 . i1IIi / O0oo0OO0 - iIii1I11I1II1
   time . sleep ( 2 )
   if 88 - 88: Oo0Ooo * i1IIi % OOooOOo
   III1ii1 = iIi1iIiii1i ( iI1I1 , I1I1i1I , addonname )
   if 65 - 65: iii1I1I . oO0o
   if III1ii1 == "unzipfail" :
    if 67 - 67: I1IiiI / iii1I1I / O0 % Oo0ooO0oo0oO - O00oOoOoO0o0O / Ii1I
    if 31 - 31: I11i - oO0o * Oo0ooO0oo0oO
    if 64 - 64: I11i
    print ' '
    print '--> INSTALL HALTED: Error extracting Zip'
    if 41 - 41: O0oo0OO0 * OoooooooOO / OoOoOO00 + OoO0O00 . OoOoOO00 + O0oo0OO0
    iii1i = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=installfailed&user=' + username + '&url=' + url + '&name=' + addonname + '&type=' + addontype + '&time=' + datetime . datetime . now ( ) . strftime ( '%S' )
    if 9 - 9: O00oOoOoO0o0O . I11i . O0oo0OO0 / i1IIi * OoOoOO00 - O0
    iii1i = iii1i . replace ( " " , "%20" )
    if 3 - 3: O0 / iIii1I11I1II1 % O00oOoOoO0o0O + I11i
    if o000oo == "true" :
     print iii1i
     if 43 - 43: Oo0Ooo % I11i
    iIii111Ii ( iii1i , '' )
    if 53 - 53: OoOoOO00 % OoooooooOO * o0oOOo0O0Ooo % OoooooooOO
    OOooo = xbmcgui . Dialog ( )
    OOooo . ok ( ooO ( "areswizard" ) , ooO ( "downloadfailed" ) , "" , "" )
    if 47 - 47: iIii1I11I1II1 - OOooOOo + I1ii11iIi11i * Oo0ooO0oo0oO + Oo0Ooo + OoO0O00
    return ( 'unzipfail' )
    if 64 - 64: OoOoOO00 - OoOoOO00 . OoooooooOO + Oo0ooO0oo0oO
    if 100 - 100: Oo0ooO0oo0oO . OoooooooOO % i1IIi % OoO0O00
    if 26 - 26: OoOoOO00 * O00oOoOoO0o0O
    if 76 - 76: I1IiiI + O00oOoOoO0o0O * I1ii11iIi11i * I1IiiI % Ii1I + Oo0ooO0oo0oO
    if 46 - 46: OoOoOO00
 O0oo00ooo = xbmcgui . DialogProgress ( )
 O0oo00ooo . create ( ooO ( "areswizard" ) , ooO ( "installing" ) + addonname , ' ' , ' ' )
 O0oo00ooo . update ( 0 )
 if 41 - 41: Oo0ooO0oo0oO + O00oOoOoO0o0O
 time . sleep ( 2 )
 if 97 - 97: I11i % I11i
 if 18 - 18: OoooooooOO . OOooOOo * Ii1I + II111iiii - I1ii11iIi11i
 if 61 - 61: Ii1I % i1IIi + OoOoOO00 % o0oOOo0O0Ooo + Oo0Ooo % OoooooooOO
 if 5 - 5: i1IIi % Oo0Ooo / OoooooooOO * OoOoOO00 + OOooOOo - Oo0ooO0oo0oO
 xbmc . executebuiltin ( 'UpdateLocalAddons' )
 os . remove ( iI1I1 )
 II11 ( addonpath , addonname )
 if 32 - 32: O00oOoOoO0o0O - i11iIiiIii
 if 41 - 41: Ii1I % Ii1I * oO0o - I11i + iIii1I11I1II1 . Oo0ooO0oo0oO
 O0oo00ooo . close
 if 30 - 30: Ii1I * iii1I1I . II111iiii / i1IIi
 if 77 - 77: oO0o . O00oOoOoO0o0O + I1ii11iIi11i . i1IIi
 username = xbmcplugin . getSetting ( int ( sys . argv [ 1 ] ) , 'username' )
 if 49 - 49: O0oo0OO0 . OoooooooOO / o0oOOo0O0Ooo - iii1I1I - iii1I1I - i11iIiiIii
 if 37 - 37: OOooOOo
 if 79 - 79: O0oo0OO0 - OoO0O00 + Oo0ooO0oo0oO + oO0o . i11iIiiIii + i1IIi
 if 32 - 32: O00oOoOoO0o0O . Oo0ooO0oo0oO / OoO0O00 / iii1I1I . iIii1I11I1II1 % O00oOoOoO0o0O
 url = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=logaddondownload&user=' + username + '&name=' + addonname + '&deviceid=' + deviceid + '&mac=' + mac + '&time=' + datetime . datetime . now ( ) . strftime ( '%S' )
 if 28 - 28: O0oo0OO0 + OoooooooOO + O00oOoOoO0o0O . Oo0ooO0oo0oO . I1IiiI / oO0o
 if addontype == "repo" :
  url = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=logrepodownload&user=' + username + '&name=' + addonname + '&deviceid=' + deviceid + '&mac=' + mac + '&time=' + datetime . datetime . now ( ) . strftime ( '%S' )
  if 66 - 66: Ii1I - I11i + Oo0Ooo . Oo0ooO0oo0oO
 url = url . replace ( " " , "%20" )
 if 89 - 89: O00oOoOoO0o0O . II111iiii / OoO0O00 + I1ii11iIi11i * i11iIiiIii
 iIii111Ii ( url , '' )
 if 85 - 85: o0oOOo0O0Ooo - Oo0Ooo / O0oo0OO0
 if 100 - 100: OoO0O00 * iIii1I11I1II1 - O00oOoOoO0o0O . i1IIi % i11iIiiIii % Oo0Ooo
 if o000oo == "true" :
  print '------------------------------------'
  print '--> URL: ' + url
  print '-----------------------------------'
  if 22 - 22: Oo0ooO0oo0oO - OOooOOo
  if 90 - 90: i11iIiiIii . i11iIiiIii - iIii1I11I1II1
 if o000oo == "true" :
  print '------------------------------------'
  print '--> ' + addonname + ' Install completed  <--'
  print '-----------------------------------'
  if 20 - 20: Oo0ooO0oo0oO - i11iIiiIii
 OOooo = xbmcgui . Dialog ( )
 OOooo . ok ( ooO ( "areswizard" ) , addonname + ooO ( "wasinstalled" ) )
 if 23 - 23: OoO0O00 + I1IiiI / I1ii11iIi11i * I1ii11iIi11i % Oo0ooO0oo0oO
 if 83 - 83: I1IiiI * i11iIiiIii - I1ii11iIi11i + I11i
 if 33 - 33: OoO0O00 . OoooooooOO % iii1I1I / oO0o * Ii1I + Oo0ooO0oo0oO
 if 29 - 29: oO0o
 if 21 - 21: i11iIiiIii . o0oOOo0O0Ooo
 if 78 - 78: Oo0Ooo
 if 77 - 77: oO0o % Oo0Ooo % O0
def II11 ( addonpath , addonname ) :
 if 51 - 51: O00oOoOoO0o0O % O00oOoOoO0o0O + OOooOOo . II111iiii / I1ii11iIi11i
 O0oo00ooo = xbmcgui . DialogProgress ( )
 O0oo00ooo . create ( ooO ( "areswizard" ) , ooO ( "installing" ) + addonname , '' , '' )
 O0oo00ooo . update ( 0 )
 if 4 - 4: o0oOOo0O0Ooo % I1IiiI * o0oOOo0O0Ooo * OoOoOO00 - Ii1I
 if o000oo == "true" :
  print '-----------------------------'
  print '--> Checking Dependancies <--'
  print '-----------------------------'
  print '--> Addon: ' + addonname
  print '-----------------------------'
  if 61 - 61: OoooooooOO - OoOoOO00 . O0 / Oo0ooO0oo0oO . Ii1I
  if 41 - 41: Oo0Ooo / OoOoOO00 % O0oo0OO0 - O0
 III1iiii11 = ""
 if 8 - 8: Oo0ooO0oo0oO . Oo0Ooo - iIii1I11I1II1 % Oo0ooO0oo0oO * OoooooooOO . II111iiii
 oooo00OoOo = xbmc . translatePath ( os . path . join ( I1I1i1I , addonpath , 'addon.xml' ) ) ;
 iiII = open ( oooo00OoOo , 'r' )
 ii1IIIIi1 = iiII . read ( )
 if 27 - 27: I11i - I11i % OoO0O00 - iii1I1I . OOooOOo - iIii1I11I1II1
 iIi1i1i = re . compile ( 'import addon="(.+?)"' ) . findall ( ii1IIIIi1 )
 for oO00Oo in iIi1i1i :
  if 'xbmc.python' in oO00Oo :
   pass
  else :
   if 13 - 13: I11i + O0 / oO0o % O0 . I11i
   III1iiii11 = III1iiii11 + oO00Oo + '\n'
   if 22 - 22: OoOoOO00 . I1IiiI % Oo0ooO0oo0oO + O0oo0OO0 - OoooooooOO
   if 55 - 55: OoooooooOO * O0 - II111iiii / O00oOoOoO0o0O
   if 18 - 18: II111iiii % O0 - o0oOOo0O0Ooo * Oo0ooO0oo0oO
   if not os . path . exists ( os . path . join ( I1I1i1I , oO00Oo ) ) :
    if 74 - 74: I11i . oO0o + I11i * o0oOOo0O0Ooo / O0
    if o000oo == "true" :
     print '--> Requires: ' + oO00Oo + ' (not installed)'
     if 55 - 55: OoO0O00 / i11iIiiIii / o0oOOo0O0Ooo
    O0oo00ooo = xbmcgui . DialogProgress ( )
    O0oo00ooo . create ( ooO ( "areswizard" ) , ooO ( "installing" ) + addonname , '' , '' )
    O0oo00ooo . update ( 0 )
    if 19 - 19: Oo0ooO0oo0oO * iii1I1I
    iI1I1 = os . path . join ( Ii1I1Ii , oO00Oo + '.zip' )
    if 38 - 38: Oo0ooO0oo0oO
    if 35 - 35: o0oOOo0O0Ooo * O00oOoOoO0o0O * Oo0Ooo
    if 34 - 34: I11i - OoooooooOO % i1IIi + I1IiiI
    if 14 - 14: I1IiiI . o0oOOo0O0Ooo / O0oo0OO0
    iiII1i1 = OO + Ii1I1i + oO00Oo + '.zip'
    OooIII1i1I ( OO + Ii1I1i + oO00Oo + '.zip' , iI1I1 , oO00Oo )
    if 67 - 67: OoooooooOO . oO0o * OoOoOO00 - OoooooooOO
    III1ii1 = iIi1iIiii1i ( iI1I1 , I1I1i1I , oO00Oo )
    if 32 - 32: oO0o
    if III1ii1 == "unzipfail" :
     print ' '
     print '--> @ares: Error extracting Zip'
     if 72 - 72: I1IiiI
     iI1i1IIi1i1 = 4
     OoOoo00Oo0OoO = '' . join ( random . choice ( string . ascii_uppercase ) for _ in range ( iI1i1IIi1i1 ) )
     iii1i = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=installfailed&user=' + o00O0 + '&url=' + iiII1i1 + '&name=' + addonname + '&type=module' + '&code=' + OoOoo00Oo0OoO
     if 34 - 34: Oo0ooO0oo0oO % II111iiii / Oo0ooO0oo0oO
     iii1i = iii1i . replace ( " " , "%20" )
     if 87 - 87: Oo0Ooo
     if 7 - 7: iIii1I11I1II1
     iIii111Ii ( iii1i , '' )
     if 85 - 85: iIii1I11I1II1 . O0
     OOooo = xbmcgui . Dialog ( )
     OOooo . ok ( ooO ( "areswizard" ) , oO00Oo + ooO ( "modulefail" ) )
     if 43 - 43: II111iiii / OoOoOO00 + OOooOOo % Oo0Ooo * OOooOOo
     return ( 'dependanciesfail' )
     if 62 - 62: Oo0ooO0oo0oO * OOooOOo . I11i + Oo0Ooo - O0oo0OO0
    II11 ( oO00Oo , addonname )
    if 48 - 48: O0oo0OO0 * Oo0Ooo % OoO0O00 % Ii1I
    O0oo00ooo = xbmcgui . DialogProgress ( )
    O0oo00ooo . create ( ooO ( "areswizard" ) , ooO ( "installing" ) + addonname , '' , '' )
    O0oo00ooo . update ( 0 )
    if 8 - 8: OoO0O00 . OoO0O00
    time . sleep ( 2 )
    if 29 - 29: I11i + OoooooooOO % o0oOOo0O0Ooo - O0oo0OO0
    os . remove ( iI1I1 )
   else :
    if o000oo == "true" :
     print '--> Requires: ' + oO00Oo + ' (already installed)'
     if 45 - 45: II111iiii - OOooOOo / oO0o % O0 . iii1I1I . iii1I1I
 xbmc . executebuiltin ( 'UpdateLocalAddons' )
 if 82 - 82: iIii1I11I1II1 % Oo0Ooo * i1IIi - O0oo0OO0 - I1ii11iIi11i / iii1I1I
 O0oo00ooo . close
 if 24 - 24: O00oOoOoO0o0O
 if 95 - 95: O00oOoOoO0o0O + OoOoOO00 * OOooOOo
 if 92 - 92: OoOoOO00 + Oo0ooO0oo0oO . iii1I1I
 if 59 - 59: iIii1I11I1II1 % O0oo0OO0 + I1ii11iIi11i . OoOoOO00 * Oo0Ooo / O0oo0OO0
def ii11i ( mode , username , deviceid , mac ) :
 if 80 - 80: I11i * O00oOoOoO0o0O % iii1I1I + OoOoOO00
 if 56 - 56: OOooOOo . OOooOOo + oO0o
 xbmc . executebuiltin ( "ActivateWindow(busydialog)" )
 if 7 - 7: o0oOOo0O0Ooo * II111iiii - I11i . Ii1I % OoooooooOO - I1IiiI
 II1ioOoOOO00OoOoO = [ ]
 for O0000ooO0OOo , OoiIiI1IiIII , ooooo0 in os . walk ( I1I1i1I , topdown = True ) :
  for O00oo00oO in OoiIiI1IiIII :
   if O00oo00oO . startswith ( 'repository' ) :
    II1ioOoOOO00OoOoO . append ( O00oo00oO )
    if 98 - 98: iIii1I11I1II1 + OOooOOo * oO0o / o0oOOo0O0Ooo . iii1I1I
 xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
 if 52 - 52: O00oOoOoO0o0O + iIii1I11I1II1
 if 22 - 22: O00oOoOoO0o0O - OOooOOo + I1ii11iIi11i
 if 64 - 64: OoOoOO00
 if 79 - 79: O00oOoOoO0o0O
 OO0ooOo0o = xbmcgui . Dialog ( ) . select ( "Select a repo" , II1ioOoOOO00OoOoO )
 if 48 - 48: iIii1I11I1II1 - oO0o / OoO0O00 + O0 . Ii1I + O0oo0OO0
 III = str ( II1ioOoOOO00OoOoO [ OO0ooOo0o ] )
 if 36 - 36: OoO0O00 * O0oo0OO0
 if 76 - 76: I1IiiI / iIii1I11I1II1 - OoooooooOO . O0 . OoO0O00
 if 91 - 91: Oo0Ooo + O0 . iii1I1I
 if OO0ooOo0o == - 1 : return
 if 69 - 69: OoO0O00 - OoOoOO00 - OoooooooOO / I1ii11iIi11i . Oo0ooO0oo0oO
 if 98 - 98: I11i + OoooooooOO * Oo0Ooo / I11i . i11iIiiIii
 xbmc . executebuiltin ( "ActivateWindow(busydialog)" )
 if 90 - 90: OOooOOo - I1IiiI % o0oOOo0O0Ooo
 if 26 - 26: Oo0Ooo . II111iiii - I11i . Ii1I % OOooOOo
 if 4 - 4: I11i + O0oo0OO0 / i1IIi + OoooooooOO
 oooo00OoOo = xbmc . translatePath ( os . path . join ( I1I1i1I , II1ioOoOOO00OoOoO [ OO0ooOo0o ] , 'addon.xml' ) ) ;
 iiII = open ( oooo00OoOo , 'r' )
 ii1IIIIi1 = iiII . read ( )
 if 84 - 84: Oo0ooO0oo0oO
 if 47 - 47: Oo0Ooo
 ooOOoo0o = IIIi11I11 ( ii1IIIIi1 , '<info compressed="false">' , '</info>' )
 if 18 - 18: iii1I1I
 if ooOOoo0o == "" :
  ooOOoo0o = IIIi11I11 ( ii1IIIIi1 , '<info compressed="true">' , '</info>' )
  if 91 - 91: i11iIiiIii % OoOoOO00
  if 17 - 17: OoOoOO00
  if 62 - 62: O0oo0OO0 * I11i - II111iiii + Oo0Ooo - Ii1I . Oo0ooO0oo0oO
  if 70 - 70: OoOoOO00 * o0oOOo0O0Ooo / O00oOoOoO0o0O
  if 6 - 6: iii1I1I
 iI1II1iIIi = IIIi11I11 ( ii1IIIIi1 , '<datadir zip="true">' , '</datadir>' )
 if 80 - 80: i1IIi + II111iiii / Oo0Ooo % i11iIiiIii / iii1I1I
 if iI1II1iIIi == "" :
  iI1II1iIIi = IIIi11I11 ( ii1IIIIi1 , '<datadir zip="false">' , '</datadir>' )
  if 93 - 93: Oo0Ooo + I1IiiI % OoOoOO00 / OOooOOo / I1ii11iIi11i
  if 6 - 6: O00oOoOoO0o0O
  if 68 - 68: Oo0Ooo
  if 83 - 83: OOooOOo / iIii1I11I1II1 . OoO0O00 - oO0o % Oo0Ooo
  if 30 - 30: Ii1I . OoOoOO00 / oO0o . OoO0O00
 if iI1II1iIIi . endswith ( '/' ) :
  iI1II1iIIi = iI1II1iIIi [ : - 1 ]
  if 93 - 93: i11iIiiIii
  if 33 - 33: i1IIi % OoooooooOO + Oo0Ooo % I1IiiI / Oo0ooO0oo0oO
  if 40 - 40: O00oOoOoO0o0O % O00oOoOoO0o0O
  if 9 - 9: I1IiiI * i1IIi + OOooOOo * OoOoOO00
  if 8 - 8: iii1I1I
  if 51 - 51: I1IiiI
 if "tvaresolvers" in ooOOoo0o :
  if 72 - 72: Oo0ooO0oo0oO / I1ii11iIi11i . Ii1I * iii1I1I . iIii1I11I1II1
  iI1II1iIIi = ""
  ooOOoo0o = ""
  if 35 - 35: OoO0O00 . OoOoOO00 % O0 * OoO0O00
  oo00oO = ii1IIIIi1 . rfind ( "tvaresolvers" )
  if 68 - 68: OOooOOo
  if 87 - 87: O00oOoOoO0o0O * O00oOoOoO0o0O - OoO0O00 / I1ii11iIi11i + OOooOOo / i11iIiiIii
  if 21 - 21: o0oOOo0O0Ooo / oO0o + oO0o + Oo0Ooo / o0oOOo0O0Ooo
  if 39 - 39: i11iIiiIii - OoO0O00 - i11iIiiIii / OoooooooOO
  if 15 - 15: i1IIi . iii1I1I + O00oOoOoO0o0O / I1ii11iIi11i - i1IIi / iii1I1I
  ii1IIIIi1 = ii1IIIIi1 [ oo00oO : ]
  if 27 - 27: OoOoOO00 / OoooooooOO + i1IIi % iIii1I11I1II1 / OoO0O00
  if 73 - 73: I1ii11iIi11i / OoOoOO00 / O00oOoOoO0o0O + oO0o
  if 73 - 73: I11i * o0oOOo0O0Ooo * I1IiiI . OoooooooOO % O0oo0OO0
  ooOOoo0o = IIIi11I11 ( ii1IIIIi1 , '<info compressed="false">' , '</info>' )
  iI1II1iIIi = IIIi11I11 ( ii1IIIIi1 , '<datadir zip="true">' , '</datadir>' )
  if 9 - 9: oO0o % O0oo0OO0 . O0 + I1ii11iIi11i - Ii1I - I1ii11iIi11i
  if iI1II1iIIi == "" :
   iI1II1iIIi = IIIi11I11 ( ii1IIIIi1 , '<datadir zip="false">' , '</datadir>' )
   if 57 - 57: i11iIiiIii
   if 21 - 21: iIii1I11I1II1 / I1IiiI / iii1I1I
  if iI1II1iIIi . endswith ( '/' ) :
   iI1II1iIIi = iI1II1iIIi [ : - 1 ]
   if 19 - 19: Oo0Ooo / iIii1I11I1II1 / I11i
   if 71 - 71: iIii1I11I1II1 * I1IiiI
   if 35 - 35: O0
   if 10 - 10: Ii1I - O0oo0OO0 / Oo0Ooo + O0
   if 67 - 67: Ii1I % i11iIiiIii . Oo0Ooo
   if 78 - 78: I1IiiI - iIii1I11I1II1
   if 20 - 20: i11iIiiIii % I1IiiI % OoOoOO00
   if 85 - 85: I11i + OoOoOO00 * O0 * O0
   if 92 - 92: i11iIiiIii
 try :
  if 16 - 16: I11i . Oo0ooO0oo0oO - Oo0Ooo / OoO0O00 . i1IIi
  iIiIi1i1ii11 = urllib2 . Request ( ooOOoo0o )
  iIiIi1i1ii11 . add_header ( 'User-Agent' , I1ii1Ii1 )
  o0O00o00Ooo = urllib2 . urlopen ( iIiIi1i1ii11 )
  if 59 - 59: Oo0ooO0oo0oO - Oo0ooO0oo0oO % I11i + OoO0O00
  if 88 - 88: Ii1I - Oo0ooO0oo0oO . Oo0Ooo
 except HTTPError , ii111I1iIiIi111I :
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Error" , str ( ii111I1iIiIi111I . code ) , "" , "" )
  print ii111I1iIiIi111I . code
  return ( )
 except URLError , ii111I1iIiIi111I :
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Error" , str ( ii111I1iIiIi111I . reason ) , "" , "" )
  print ii111I1iIiIi111I . reason
 except ValueError , ii111I1iIiIi111I :
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Error" , str ( ii111I1iIiIi111I ) , "" , "" )
  print ii111I1iIiIi111I
  return ( )
  if 83 - 83: I11i + Oo0Ooo . I1ii11iIi11i * I1ii11iIi11i
 except IOError , ii111I1iIiIi111I :
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . errno ) + " - " + str ( ii111I1iIiIi111I . strerror ) , "" , "" )
  print '@Ares: IO Error: ' + str ( ii111I1iIiIi111I . errno ) + ' - ' + str ( ii111I1iIiIi111I . strerror )
  return ( )
 else :
  if 80 - 80: i1IIi * I11i - OOooOOo / II111iiii * iIii1I11I1II1
  if 42 - 42: OoOoOO00 . I11i % II111iiii
  I1I1I = o0O00o00Ooo . read ( )
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  if 19 - 19: OoooooooOO
  if 31 - 31: I11i . OoOoOO00 - O0 * iii1I1I % O0oo0OO0 - II111iiii
  if 21 - 21: OOooOOo . Oo0Ooo - i1IIi
 ooOoo0o0oO = xbmc . translatePath ( os . path . join ( oO0 , 'addon.xml' ) ) ;
 file = open ( ooOoo0o0oO , "w" )
 file . write ( I1I1I )
 file . close ( )
 if 21 - 21: i1IIi / Oo0ooO0oo0oO % Oo0ooO0oo0oO - O00oOoOoO0o0O * Oo0Ooo
 if 93 - 93: OoO0O00 + O0
 if 36 - 36: i1IIi * oO0o
 if 51 - 51: iIii1I11I1II1 / o0oOOo0O0Ooo % OOooOOo * Oo0Ooo . I1ii11iIi11i - oO0o
 o0oOoO0O000 = [ ]
 O0O = ET . parse ( ooOoo0o0oO )
 if 30 - 30: I1IiiI . OoO0O00 / i1IIi . o0oOOo0O0Ooo
 if 44 - 44: OOooOOo + O0 * iii1I1I . i1IIi / OoOoOO00
 file . close ( )
 if 2 - 2: iii1I1I % O0 + II111iiii + oO0o . O0oo0OO0
 for Oo0oo0O0o00O in O0O . findall ( "addon" ) :
  I1 = Oo0oo0O0o00O . get ( 'name' )
  o0oOoO0O000 . append ( I1 )
  if 38 - 38: iIii1I11I1II1 . Ii1I
  if 82 - 82: OOooOOo * Ii1I + I1ii11iIi11i . OoO0O00
  if 15 - 15: O0
  if 44 - 44: Ii1I . Oo0Ooo . O0oo0OO0 + oO0o
 OO0ooOo0o = xbmcgui . Dialog ( ) . select ( "Select an addon" , o0oOoO0O000 )
 if 32 - 32: OOooOOo - II111iiii + O00oOoOoO0o0O * iIii1I11I1II1 - Oo0Ooo
 if OO0ooOo0o == - 1 : return
 if 25 - 25: Oo0ooO0oo0oO
 if 33 - 33: Oo0Ooo
 if 11 - 11: I11i
 if 55 - 55: i11iIiiIii * OoOoOO00 - OoOoOO00 * OoO0O00 / iii1I1I
 for Oo0oo0O0o00O in O0O . findall ( "addon" ) :
  I1 = Oo0oo0O0o00O . get ( 'name' )
  if 64 - 64: iIii1I11I1II1 . Ii1I * Oo0Ooo - OoO0O00
  if I1 == o0oOoO0O000 [ OO0ooOo0o ] :
   ooOOo = Oo0oo0O0o00O . get ( 'name' )
   oOO00oO00 = Oo0oo0O0o00O . get ( 'id' )
   o0OoO00Oo = Oo0oo0O0o00O . get ( 'version' )
   Ii1iIIiIi1IiI = Oo0oo0O0o00O . get ( 'provider-name' )
   oO00OOOOOOOo0 = Oo0oo0O0o00O . get ( 'description' )
   if 61 - 61: o0oOOo0O0Ooo % oO0o / I1ii11iIi11i . Ii1I % II111iiii
   if 22 - 22: iIii1I11I1II1 - OoooooooOO
   if 8 - 8: Oo0ooO0oo0oO % i11iIiiIii
   if 41 - 41: O0oo0OO0 . Oo0ooO0oo0oO - i11iIiiIii + Ii1I . OOooOOo . OoOoOO00
   if 70 - 70: i1IIi % OoOoOO00 / iii1I1I + i11iIiiIii % Oo0ooO0oo0oO + O00oOoOoO0o0O
   if 58 - 58: OOooOOo / i11iIiiIii . Oo0Ooo % iii1I1I
   if 92 - 92: OoOoOO00 / Oo0ooO0oo0oO % iii1I1I / iIii1I11I1II1
   if 73 - 73: O0 % i11iIiiIii
   if 16 - 16: O0
 iiII1i1 = iI1II1iIIi + '/' + oOO00oO00 + '/' + oOO00oO00 + '-' + o0OoO00Oo + '.zip'
 iiii1i1iI11 = iI1II1iIIi + '/' + oOO00oO00 + '/icon.png'
 if 45 - 45: I1IiiI . iIii1I11I1II1 + OoooooooOO + oO0o
 if 26 - 26: OoOoOO00 + I1IiiI % II111iiii * Oo0Ooo . iii1I1I / i1IIi
 if 90 - 90: I1IiiI - OoO0O00 % O0oo0OO0 . i1IIi
 if 30 - 30: iIii1I11I1II1 . O0
 if 5 - 5: OOooOOo . OOooOOo % I11i
 if 81 - 81: Oo0Ooo
 if 75 - 75: O0oo0OO0 * iIii1I11I1II1
 try :
  if 49 - 49: Oo0ooO0oo0oO * I11i / OOooOOo
  Iioo00o = { 'User-Agent' : 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11' ,
 'Accept' : 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8' ,
 'Accept-Charset' : 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' ,
 'Accept-Encoding' : 'none' ,
 'Accept-Language' : 'en-US,en;q=0.8' ,
 'Connection' : 'keep-alive' }
  iIiIi1i1ii11 = Request ( iiII1i1 , headers = Iioo00o )
  O0O0o = urlopen ( iIiIi1i1ii11 )
  if 98 - 98: O0 - i11iIiiIii + OoooooooOO + OoooooooOO
 except HTTPError , ii111I1iIiIi111I :
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "HTTPError" , str ( ii111I1iIiIi111I . code ) , "" , "" )
  print ii111I1iIiIi111I . code
  if not ii111I1iIiIi111I . code == "403" :
   return ( )
 except URLError , ii111I1iIiIi111I :
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "URLError" , str ( ii111I1iIiIi111I . reason ) , "" , "" )
  print ii111I1iIiIi111I . reason
  return ( )
  if 22 - 22: Oo0ooO0oo0oO + iIii1I11I1II1 - iii1I1I . i11iIiiIii
 except IOError , ii111I1iIiIi111I :
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Download Error" , str ( ii111I1iIiIi111I . errno ) + " - " + str ( ii111I1iIiIi111I . strerror ) , "" , "" )
  print '@Ares: IO Error: ' + str ( ii111I1iIiIi111I . errno ) + ' - ' + str ( ii111I1iIiIi111I . strerror )
  return ( )
  if 81 - 81: O00oOoOoO0o0O . I1ii11iIi11i * Oo0ooO0oo0oO * O0oo0OO0 % iIii1I11I1II1 % iii1I1I
  if 80 - 80: i1IIi * I1IiiI + OOooOOo
  if 91 - 91: I1IiiI % OoOoOO00 * Oo0Ooo / I1ii11iIi11i
  if 57 - 57: i11iIiiIii / o0oOOo0O0Ooo . II111iiii
 I1iiii1I = "Video"
 if 63 - 63: O0
 if 64 - 64: i11iIiiIii / oO0o . oO0o - Oo0Ooo
 if 48 - 48: i1IIi + I1ii11iIi11i + O0oo0OO0 - iii1I1I
 if 3 - 3: i1IIi + OoooooooOO * Oo0ooO0oo0oO + O0oo0OO0 % OOooOOo / O00oOoOoO0o0O
 if 70 - 70: oO0o + i1IIi % o0oOOo0O0Ooo - I11i
 if 74 - 74: i11iIiiIii
 if 93 - 93: O0oo0OO0 % OOooOOo * I1IiiI % iii1I1I / iIii1I11I1II1 + OoO0O00
 if 6 - 6: I11i
 if 70 - 70: Oo0ooO0oo0oO + OoooooooOO % OoOoOO00 % oO0o / Ii1I . I11i
 if 63 - 63: I1ii11iIi11i - Oo0ooO0oo0oO . OOooOOo / O0 . iIii1I11I1II1 - Ii1I
 if 6 - 6: Ii1I
 if 60 - 60: iii1I1I + I1IiiI
 if 36 - 36: i1IIi . O0 . OoO0O00 % OOooOOo * I11i / Ii1I
 iiii1i1iI11 = iiii1i1iI11 . replace ( "http://" , "" )
 iiii1i1iI11 = iiii1i1iI11 . replace ( "https://" , "" )
 if 16 - 16: Oo0Ooo
 iI1i1IIi1i1 = 4
 OoOoo00Oo0OoO = '' . join ( random . choice ( string . ascii_uppercase ) for _ in range ( iI1i1IIi1i1 ) )
 if 44 - 44: iIii1I11I1II1 - II111iiii . O00oOoOoO0o0O . i1IIi
 if mode == "add" :
  if 37 - 37: OoooooooOO + Oo0Ooo - Oo0Ooo + I1ii11iIi11i . O0oo0OO0 / I1IiiI
  if 60 - 60: I1IiiI % Ii1I / O0oo0OO0 + Ii1I
  iii1i = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=addaddon&user=' + username + '&mac=' + mac + '&deviceid=' + deviceid + '&name=' + ooOOo . encode ( 'utf-8' ) + '&url=' + iiII1i1 + '&icon=' + iiii1i1iI11 + '&descr=' + str ( oO00OOOOOOOo0 ) + '&version=' + str ( o0OoO00Oo ) + '&type=' + I1iiii1I + '&addonpath=' + oOO00oO00 + '&author=' + Ii1iIIiIi1IiI + '&devrepo=' + III + '&code=' + OoOoo00Oo0OoO
  if 43 - 43: I1ii11iIi11i + I11i
 if mode == "update" :
  if 83 - 83: II111iiii + o0oOOo0O0Ooo - O0oo0OO0
  iii1i = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=updateaddon&user=' + username + '&mac=' + mac + '&deviceid=' + deviceid + '&name=' + ooOOo . encode ( 'utf-8' ) + '&url=' + iiII1i1 + '&icon=' + iiii1i1iI11 + '&descr=' + str ( oO00OOOOOOOo0 ) + '&version=' + str ( o0OoO00Oo ) + '&type=' + I1iiii1I + '&addonpath=' + oOO00oO00 + '&author=' + Ii1iIIiIi1IiI + '&devrepo=' + III + '&code=' + OoOoo00Oo0OoO
  if 100 - 100: O00oOoOoO0o0O - OoOoOO00 / I11i
  if 33 - 33: O0oo0OO0 * OoOoOO00 . I1ii11iIi11i % O0oo0OO0
 if o000oo == "true" :
  print '@ares: addonurl = ' + str ( iii1i )
  if 87 - 87: Oo0Ooo
  if 65 - 65: Oo0ooO0oo0oO . I1IiiI
 Oo0 = iii1i . replace ( " " , "%20" )
 if 51 - 51: O00oOoOoO0o0O
 if 43 - 43: oO0o - I11i . i11iIiiIii
 if 78 - 78: i11iIiiIii + Oo0Ooo * Ii1I - o0oOOo0O0Ooo % i11iIiiIii
 if 30 - 30: I1IiiI % oO0o * OoooooooOO
 oo00Oo = iIii111Ii ( Oo0 , '' )
 if 82 - 82: iii1I1I / O00oOoOoO0o0O * OoOoOO00 . Oo0ooO0oo0oO / O0
 if o000oo == "true" :
  print '@ares: response = ' + str ( oo00Oo )
  if 88 - 88: O00oOoOoO0o0O / I1IiiI - OOooOOo . O0oo0OO0
  if 28 - 28: i1IIi - I1IiiI * Oo0ooO0oo0oO * o0oOOo0O0Ooo / OOooOOo
  if 58 - 58: oO0o - OoO0O00 % O0oo0OO0 + O0oo0OO0
 if oo00Oo == "Inserted" :
  if 65 - 65: iIii1I11I1II1 + OOooOOo % iIii1I11I1II1 / i11iIiiIii
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( ooO ( "addoninserted" ) , ooO ( "addoninserted" ) , "" , "" )
  if 70 - 70: O0
 return ( oo00Oo )
 if 67 - 67: Ii1I + II111iiii . i1IIi - i11iIiiIii + o0oOOo0O0Ooo
 if 72 - 72: OOooOOo . Oo0ooO0oo0oO / Ii1I / iIii1I11I1II1 - O00oOoOoO0o0O - Oo0ooO0oo0oO
def II1i11 ( url , name , thumbnail ) :
 if 36 - 36: i11iIiiIii / i11iIiiIii / II111iiii - o0oOOo0O0Ooo . o0oOOo0O0Ooo
 ooOOoi1i = 0
 iIIi1I = 0
 Oo0O0OooO = 0
 I1i1i = 0
 oOoOoOOooOO = 0
 if 83 - 83: O00oOoOoO0o0O % OoO0O00 - i11iIiiIii
 if 53 - 53: i11iIiiIii + OoooooooOO
 I1Iii11iI = xbmcgui . DialogProgress ( )
 I1Iii11iI . create ( "Ares Wizard" , "Checking Repos.." , ' ' , ' ' )
 I1Iii11iI . update ( 0 )
 if 23 - 23: i11iIiiIii - O00oOoOoO0o0O - I1ii11iIi11i + I1ii11iIi11i % I1IiiI
 o00000 = 0
 if 79 - 79: II111iiii / OoooooooOO
 II1ioOoOOO00OoOoO = [ ]
 for O0000ooO0OOo , OoiIiI1IiIII , ooooo0 in os . walk ( I1I1i1I , topdown = True ) :
  if 35 - 35: i1IIi + O00oOoOoO0o0O + II111iiii % OOooOOo
  I1IiIi1 = len ( OoiIiI1IiIII )
  iiiII1I11 = float ( len ( OoiIiI1IiIII ) )
  o00000 = 0
  if 69 - 69: I11i . OoOoOO00 / OOooOOo / i1IIi . II111iiii
  if 17 - 17: O0oo0OO0
  for O00oo00oO in OoiIiI1IiIII :
   oOoOoOOooOO = oOoOoOOooOO + 1
   if O00oo00oO . startswith ( 'repository' ) :
    ooOOoi1i = ooOOoi1i + 1
    iiIIIi1I1I1 = "Checking:  " + str ( O00oo00oO )
    o00000 += 1
    II1i1i = o00000 / iiiII1I11 * 100
    I1Iii11iI . update ( int ( II1i1i ) , iiIIIi1I1I1 )
    if 73 - 73: OoooooooOO * O0
    if 51 - 51: O00oOoOoO0o0O
    if 31 - 31: I11i - iIii1I11I1II1 * Ii1I + Ii1I
    oooo00OoOo = xbmc . translatePath ( os . path . join ( I1I1i1I , O00oo00oO , 'addon.xml' ) ) ;
    iiII = open ( oooo00OoOo , 'r' )
    ii1IIIIi1 = iiII . read ( )
    if 10 - 10: OoOoOO00 - i11iIiiIii % iIii1I11I1II1 / Oo0ooO0oo0oO * i11iIiiIii - Ii1I
    if 64 - 64: II111iiii . i11iIiiIii . iii1I1I . OOooOOo
    if 95 - 95: O0 - OoOoOO00
    if 68 - 68: Oo0ooO0oo0oO . O0oo0OO0
    ooOOoo0o = IIIi11I11 ( ii1IIIIi1 , '<info compressed="false">' , '</info>' )
    if 84 - 84: OoooooooOO + oO0o % i1IIi + o0oOOo0O0Ooo * i1IIi
    if 51 - 51: oO0o . OoooooooOO + OOooOOo * I1ii11iIi11i - Oo0ooO0oo0oO
    iI1II1iIIi = IIIi11I11 ( ii1IIIIi1 , '<datadir zip="true">' , '</datadir>' )
    if 41 - 41: Oo0Ooo
    if 46 - 46: i11iIiiIii + iIii1I11I1II1 . i11iIiiIii . iii1I1I
    if 66 - 66: oO0o % i1IIi % OoooooooOO
    if iI1II1iIIi == "" :
     iI1II1iIIi = IIIi11I11 ( ii1IIIIi1 , '<datadir zip="false">' , '</datadir>' )
     if 58 - 58: OOooOOo
     if 89 - 89: iIii1I11I1II1 - i1IIi
    if ooOOoo0o == "" :
     ooOOoo0o = IIIi11I11 ( ii1IIIIi1 , '<info compressed="true">' , '</info>' )
     if 26 - 26: OOooOOo - iii1I1I * I1ii11iIi11i / iii1I1I
     if 9 - 9: O0oo0OO0 / II111iiii * O0oo0OO0 / I11i - OoO0O00
    if ooOOoo0o == "" :
     ooOOoo0o = IIIi11I11 ( ii1IIIIi1 , '<info>' , '</info>' )
     if 36 - 36: O00oOoOoO0o0O . OoOoOO00 . Ii1I
     if 31 - 31: iIii1I11I1II1
     if 84 - 84: I1ii11iIi11i - iii1I1I * I1IiiI
     if 88 - 88: OOooOOo / Oo0Ooo
     if 31 - 31: II111iiii
     if 32 - 32: o0oOOo0O0Ooo % o0oOOo0O0Ooo
    if iI1II1iIIi . endswith ( '/' ) :
     iI1II1iIIi = iI1II1iIIi [ : - 1 ]
     if 67 - 67: O00oOoOoO0o0O + oO0o * O00oOoOoO0o0O
     if 26 - 26: I1ii11iIi11i + i1IIi . i1IIi - oO0o + I1IiiI * o0oOOo0O0Ooo
     if 62 - 62: Oo0ooO0oo0oO + Oo0ooO0oo0oO % I11i
     if 100 - 100: II111iiii . OoooooooOO
    I111iiiii1I = [ ]
    if 15 - 15: I1ii11iIi11i * iii1I1I + i11iIiiIii
    if 68 - 68: i1IIi / oO0o * I1ii11iIi11i - OoOoOO00 + Oo0Ooo / O0
    if ooOOoo0o not in I111iiiii1I :
     if 1 - 1: Oo0ooO0oo0oO - Oo0Ooo + O0oo0OO0
     if 90 - 90: O0oo0OO0 * O0 . iii1I1I - Oo0Ooo % iIii1I11I1II1
     if 7 - 7: I1ii11iIi11i % o0oOOo0O0Ooo % O0 % iIii1I11I1II1
     if 10 - 10: OoooooooOO - iii1I1I . i1IIi % oO0o . OoooooooOO + OOooOOo
     if 59 - 59: I1IiiI * OoooooooOO % OOooOOo / I11i
     try :
      iIiIi1i1ii11 = urllib2 . Request ( ooOOoo0o )
      iIiIi1i1ii11 . add_header ( 'User-Agent' , I1ii1Ii1 )
      o0O00o00Ooo = urllib2 . urlopen ( iIiIi1i1ii11 )
     except HTTPError , ii111I1iIiIi111I :
      if 77 - 77: II111iiii - O00oOoOoO0o0O % OOooOOo
      if 22 - 22: OoooooooOO / oO0o
      if 78 - 78: oO0o * I11i . i1IIi % i1IIi + i1IIi / OOooOOo
      print ii111I1iIiIi111I . code
      if 66 - 66: OoooooooOO % o0oOOo0O0Ooo / I11i * O0oo0OO0
     except URLError , ii111I1iIiIi111I :
      if 12 - 12: O0oo0OO0
      if 17 - 17: O0oo0OO0 % oO0o + O0
      if 15 - 15: o0oOOo0O0Ooo - OoooooooOO % Oo0ooO0oo0oO % oO0o / i11iIiiIii / Oo0Ooo
      print str ( ii111I1iIiIi111I . reason )
      if 59 - 59: iii1I1I + O0 - I1ii11iIi11i * I1ii11iIi11i + iIii1I11I1II1
     except IOError , ii111I1iIiIi111I :
      print '@Ares: IO Error: ' + str ( ii111I1iIiIi111I . errno ) + ' - ' + str ( ii111I1iIiIi111I . strerror )
      if 41 - 41: iIii1I11I1II1 . O0 - Oo0ooO0oo0oO / OoOoOO00 % iIii1I11I1II1 + O00oOoOoO0o0O
      if 23 - 23: OoOoOO00 + Oo0ooO0oo0oO . i11iIiiIii
      if 39 - 39: OoOoOO00 - I1ii11iIi11i / O0oo0OO0
     else :
      I1I1I = o0O00o00Ooo . read ( )
      if 48 - 48: O00oOoOoO0o0O - oO0o + I11i % o0oOOo0O0Ooo
      if 81 - 81: Oo0Ooo . O0oo0OO0 * iIii1I11I1II1
      if 60 - 60: OoooooooOO
      if 41 - 41: iIii1I11I1II1 + O0 % o0oOOo0O0Ooo - O00oOoOoO0o0O . I11i * O0
      if 39 - 39: i11iIiiIii . Ii1I
     ooOoo0o0oO = xbmc . translatePath ( os . path . join ( oO0 , 'addon.xml' ) ) ;
     file = open ( ooOoo0o0oO , "w" )
     file . write ( I1I1I )
     file . close ( )
     if 68 - 68: OOooOOo * Oo0ooO0oo0oO . I1IiiI - iii1I1I
     if 81 - 81: I11i % Oo0Ooo / iii1I1I
     if 44 - 44: Oo0Ooo
     if 90 - 90: Oo0Ooo . Oo0ooO0oo0oO / O00oOoOoO0o0O * O0oo0OO0 . Oo0ooO0oo0oO + II111iiii
     o0oOoO0O000 = [ ]
     if 43 - 43: iIii1I11I1II1 % OOooOOo + OoOoOO00 + I1ii11iIi11i - Oo0Ooo / Ii1I
     try :
      O0O = ET . parse ( ooOoo0o0oO )
     except :
      O0O = "error"
      if 94 - 94: Ii1I / Oo0Ooo % II111iiii % Oo0Ooo * oO0o
      if 54 - 54: O0 / Oo0ooO0oo0oO * O0oo0OO0
     file . close ( )
     if 5 - 5: Ii1I / OoOoOO00 - O0 * OoO0O00
     if 13 - 13: O00oOoOoO0o0O + Oo0Ooo - O0oo0OO0
     if not O0O == "error" :
      if 10 - 10: OOooOOo % OoooooooOO / I1IiiI . II111iiii % iii1I1I
      iIIi1I = iIIi1I + 1
      if 47 - 47: o0oOOo0O0Ooo . i11iIiiIii * i1IIi % I11i - Oo0ooO0oo0oO * oO0o
      if 95 - 95: oO0o / Ii1I + OoO0O00
      for Oo0oo0O0o00O in O0O . findall ( "addon" ) :
       name = Oo0oo0O0o00O . get ( 'name' )
       ooOOo = Oo0oo0O0o00O . get ( 'name' )
       oOO00oO00 = Oo0oo0O0o00O . get ( 'id' )
       o0OoO00Oo = Oo0oo0O0o00O . get ( 'version' )
       Ii1iIIiIi1IiI = Oo0oo0O0o00O . get ( 'provider-name' )
       if 57 - 57: iIii1I11I1II1 + O0oo0OO0 % oO0o - Ii1I . I1IiiI
       iiIIIi1I1I1 = "Checking Addon:  " + str ( ooOOo . encode ( 'utf-8' ) )
       iIi11Ii = "From Repo: " + str ( O00oo00oO )
       I1Iii11iI . update ( int ( II1i1i ) , iiIIIi1I1I1 , iIi11Ii )
       if 70 - 70: oO0o - iii1I1I + Ii1I * Ii1I / o0oOOo0O0Ooo . o0oOOo0O0Ooo
       if 41 - 41: O0oo0OO0 % Oo0Ooo - iIii1I11I1II1
       if 96 - 96: O0oo0OO0 / II111iiii . oO0o + oO0o
       if 62 - 62: I1IiiI
       if 22 - 22: i11iIiiIii . Ii1I . Oo0Ooo * Oo0Ooo - iii1I1I / I1ii11iIi11i
       if 49 - 49: iii1I1I + I11i . Oo0Ooo
       if 23 - 23: I1IiiI . Ii1I + Oo0ooO0oo0oO . OoooooooOO
       url = iI1II1iIIi + '/' + oOO00oO00 + '/' + oOO00oO00 + '-' + o0OoO00Oo + '.zip'
       if 57 - 57: OOooOOo / OoOoOO00 / i11iIiiIii - I11i - I11i . Ii1I
       if 53 - 53: Oo0ooO0oo0oO . iii1I1I + Ii1I * O0oo0OO0
       iIiIi1i1ii11 = Request ( url )
       iIiIi1i1ii11 . add_header ( 'User-Agent' , 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.0.3) Gecko/2008092417 Firefox/3.0.3' )
       if 49 - 49: II111iiii . I1ii11iIi11i * OoOoOO00 - OOooOOo
       try :
        O0O0o = urlopen ( iIiIi1i1ii11 )
       except HTTPError , ii111I1iIiIi111I :
        if 48 - 48: OoO0O00 . iIii1I11I1II1 - OoooooooOO + O0oo0OO0 / i11iIiiIii . Oo0Ooo
        if 61 - 61: II111iiii + OOooOOo . o0oOOo0O0Ooo . iIii1I11I1II1
        print ii111I1iIiIi111I . code
        I1i1i = I1i1i + 1
        if 63 - 63: I11i + i11iIiiIii . o0oOOo0O0Ooo . i1IIi + OoOoOO00
       except URLError , ii111I1iIiIi111I :
        if 1 - 1: i11iIiiIii
        if 1 - 1: iIii1I11I1II1
        print str ( ii111I1iIiIi111I . reason )
        I1i1i = I1i1i + 1
        if 73 - 73: iii1I1I + O00oOoOoO0o0O
       except IOError , ii111I1iIiIi111I :
        print '@Ares: IO Error: ' + str ( ii111I1iIiIi111I . errno ) + ' - ' + str ( ii111I1iIiIi111I . strerror )
        if 95 - 95: O0
        if 75 - 75: Oo0ooO0oo0oO
        if 8 - 8: O0 - OoooooooOO + I1ii11iIi11i / Oo0Ooo . oO0o + O0oo0OO0
       except ssl . SSLError , ii111I1iIiIi111I :
        I1i1i = I1i1i + 1
        if 85 - 85: Oo0ooO0oo0oO
       else :
        if 29 - 29: iii1I1I . Ii1I
        Oo0O0OooO = Oo0O0OooO + 1
        if 43 - 43: I11i - I1ii11iIi11i + iIii1I11I1II1 / I1ii11iIi11i * oO0o / iIii1I11I1II1
 print '> '
 print '>> '
 print '>>> '
 print 'installedrepos:'
 print ooOOoi1i
 print 'connectedrepos:'
 print iIIi1I
 print 'possibleaddons:'
 print Oo0O0OooO
 print 'failedlinks:'
 print I1i1i
 if 45 - 45: O00oOoOoO0o0O
 I1Iii11iI . close ( )
 if 49 - 49: I1IiiI . Ii1I * I1IiiI - OoooooooOO . I11i / O0oo0OO0
 OOooo = xbmcgui . Dialog ( )
 OOooo . ok ( "result" , "Installed Repos: " + str ( ooOOoi1i ) + "\nConnected Repos: " + str ( iIIi1I ) + "\nPossible Addons: " + str ( Oo0O0OooO ) + "\nFailed URLS\Zips: " + str ( I1i1i ) , "" , "" )
 if 9 - 9: iIii1I11I1II1 * Ii1I / O0 - OOooOOo
 xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
 if 95 - 95: i11iIiiIii * II111iiii * OOooOOo * iIii1I11I1II1
 if 22 - 22: iIii1I11I1II1 / I1IiiI + OoOoOO00 - OOooOOo . i11iIiiIii / i11iIiiIii
 if 10 - 10: iIii1I11I1II1 % i1IIi
def oOOOoo ( ) :
 if 78 - 78: I11i + II111iiii % o0oOOo0O0Ooo
 I1Iii11iI = xbmcgui . DialogProgress ( )
 I1Iii11iI . create ( ooO ( "areswizard" ) , ooO ( "pleasewait" ) )
 I1Iii11iI . update ( 1 )
 if 17 - 17: i11iIiiIii + oO0o * iii1I1I . II111iiii
 if 44 - 44: I1ii11iIi11i
 III1iII1I1ii = xbmc . translatePath ( 'special://Database' )
 ooooo0 = glob . glob ( os . path . join ( III1iII1I1ii , 'Textures*.db' ) )
 for o0o0Ooo0 in ooooo0 :
  try :
   os . remove ( o0o0Ooo0 )
  except :
   o0OooooOooO ( o0o0Ooo0 )
   if 39 - 39: iii1I1I + Oo0Ooo / oO0o
   if 95 - 95: O0oo0OO0 * oO0o / Oo0ooO0oo0oO . Ii1I . OoOoOO00
   if 99 - 99: I1IiiI * II111iiii
 for O0000ooO0OOo , OoiIiI1IiIII , ooooo0 in os . walk ( ii1111iII ) :
  for o0o0Ooo0 in ooooo0 :
   try :
    if o0o0Ooo0 == "kodi.log" or o0o0Ooo0 == "build.zip" :
     pass
    else :
     III1iII1I1ii = os . path . join ( O0000ooO0OOo , o0o0Ooo0 )
     if 'script.areswizard' not in III1iII1I1ii and 'script.module.pyxbmct' not in III1iII1I1ii and 'script.module.elementtree' not in III1iII1I1ii :
      I1Iii11iI . update ( 1 , '' , '' , 'Deleting: ' + o0o0Ooo0 )
      os . unlink ( III1iII1I1ii )
      print 'from HOMEDIR deleted: ' + O0000ooO0OOo + o0o0Ooo0
   except :
    pass
  for O00oo00oO in OoiIiI1IiIII :
   try :
    if O00oo00oO == "Database" or O00oo00oO == "addon_data" or O00oo00oO == "userdata" or O00oo00oO == "packages" or O00oo00oO == "addons" or O00oo00oO == "Thumbnails" or O00oo00oO == "temp" or O00oo00oO == "script.areswizard" or O00oo00oO == "script.module.pyxbmct" or O00oo00oO == "script.module.elementtree" :
     pass
    else :
     III1iII1I1ii = os . path . join ( O0000ooO0OOo , O00oo00oO )
     if 'script.areswizard' not in III1iII1I1ii and 'script.module.pyxbmct' not in III1iII1I1ii and 'script.module.elementtree' not in III1iII1I1ii :
      I1Iii11iI . update ( 1 , '' , '' , 'Deleting: ' + O00oo00oO )
      shutil . rmtree ( os . path . join ( O0000ooO0OOo , O00oo00oO ) )
      print 'from HOMEDIR removed folder: ' + os . path . join ( O0000ooO0OOo , O00oo00oO )
   except :
    pass
    if 84 - 84: II111iiii - I1IiiI
    if 41 - 41: iIii1I11I1II1 % O0oo0OO0 % OoOoOO00
 I1Iii11iI . update ( 30 )
 if 35 - 35: I11i + i1IIi
 if 85 - 85: Ii1I * Ii1I . OoOoOO00 / Oo0Ooo
 if 97 - 97: oO0o % iIii1I11I1II1
 if 87 - 87: II111iiii % I1IiiI + oO0o - I11i / I11i
 if 16 - 16: I1IiiI
 for O0000ooO0OOo , OoiIiI1IiIII , ooooo0 in os . walk ( iiiiI ) :
  for o0o0Ooo0 in ooooo0 :
   try :
    I1Iii11iI . update ( 30 , '' , '' , 'Deleting: ' + o0o0Ooo0 )
    III1iII1I1ii = os . path . join ( O0000ooO0OOo , o0o0Ooo0 )
    if 'script.areswizard' not in III1iII1I1ii :
     os . unlink ( os . path . join ( O0000ooO0OOo , o0o0Ooo0 ) )
     print 'from ADDONDATA deleted: ' + O0000ooO0OOo + o0o0Ooo0
   except :
    pass
  for O00oo00oO in OoiIiI1IiIII :
   try :
    I1Iii11iI . update ( 30 , '' , '' , 'Deleting: ' + O00oo00oO )
    III1iII1I1ii = os . path . join ( O0000ooO0OOo , O00oo00oO )
    if 'script.areswizard' not in III1iII1I1ii :
     shutil . rmtree ( os . path . join ( O0000ooO0OOo , O00oo00oO ) )
     print 'from ADDONDATA removed folder: ' + os . path . join ( O0000ooO0OOo , O00oo00oO )
   except :
    pass
    if 39 - 39: Oo0ooO0oo0oO * II111iiii
    if 90 - 90: OoooooooOO * Oo0ooO0oo0oO
 I1Iii11iI . update ( 50 )
 if 14 - 14: I1IiiI % i1IIi
 if 35 - 35: Oo0ooO0oo0oO % o0oOOo0O0Ooo % Oo0ooO0oo0oO
 for O0000ooO0OOo , OoiIiI1IiIII , ooooo0 in os . walk ( oooOo0OOOoo0 ) :
  for o0o0Ooo0 in ooooo0 :
   try :
    I1Iii11iI . update ( 50 , '' , '' , 'Deleting: ' + o0o0Ooo0 )
    III1iII1I1ii = os . path . join ( O0000ooO0OOo , o0o0Ooo0 )
    if 'script.areswizard' not in III1iII1I1ii :
     os . unlink ( os . path . join ( O0000ooO0OOo , o0o0Ooo0 ) )
     print 'from DELFOLDER1 deleted: ' + O0000ooO0OOo + o0o0Ooo0
   except :
    pass
  for O00oo00oO in OoiIiI1IiIII :
   try :
    if O00oo00oO == "Database" or O00oo00oO == "addon_data" or O00oo00oO == "Thumbnails" :
     pass
    else :
     I1Iii11iI . update ( 50 , '' , '' , 'Deleting: ' + O00oo00oO )
     III1iII1I1ii = os . path . join ( O0000ooO0OOo , O00oo00oO )
     if 'script.areswizard' not in III1iII1I1ii :
      shutil . rmtree ( os . path . join ( O0000ooO0OOo , O00oo00oO ) )
      print 'from DELFOLDER1 removed folder: ' + os . path . join ( O0000ooO0OOo , O00oo00oO )
   except :
    pass
    if 77 - 77: OOooOOo % O0oo0OO0 / i11iIiiIii . i1IIi % OOooOOo
    if 55 - 55: i1IIi
 I1Iii11iI . update ( 65 )
 if 64 - 64: oO0o . OOooOOo * i11iIiiIii + O0oo0OO0
 if 88 - 88: O0
 if 75 - 75: iii1I1I - Oo0Ooo / OoooooooOO - O0
 for O0000ooO0OOo , OoiIiI1IiIII , ooooo0 in os . walk ( OOoO ) :
  for o0o0Ooo0 in ooooo0 :
   try :
    if o0o0Ooo0 == "kodi.log" or o0o0Ooo0 == "build.zip" :
     pass
    else :
     I1Iii11iI . update ( 50 , '' , '' , 'Deleting: ' + o0o0Ooo0 )
     os . unlink ( os . path . join ( O0000ooO0OOo , o0o0Ooo0 ) )
     print 'from DELFOLDER1 deleted: ' + O0000ooO0OOo + o0o0Ooo0
   except :
    pass
  for O00oo00oO in OoiIiI1IiIII :
   try :
    I1Iii11iI . update ( 50 , '' , '' , 'Deleting: ' + O00oo00oO )
    shutil . rmtree ( os . path . join ( O0000ooO0OOo , O00oo00oO ) )
    print 'from DELFOLDER2 removed folder: ' + os . path . join ( O0000ooO0OOo , O00oo00oO )
   except :
    pass
    if 36 - 36: OoO0O00 % Ii1I . Oo0Ooo
    if 90 - 90: i11iIiiIii - iii1I1I * oO0o
 I1Iii11iI . update ( 70 )
 if 79 - 79: O00oOoOoO0o0O
 if 38 - 38: O0oo0OO0
 if 56 - 56: i11iIiiIii
 if 58 - 58: i11iIiiIii / OoOoOO00
 for O0000ooO0OOo , OoiIiI1IiIII , ooooo0 in os . walk ( Ii1I1Ii ) :
  for o0o0Ooo0 in ooooo0 :
   try :
    if o0o0Ooo0 == "kodi.log" or o0o0Ooo0 == "build.zip" :
     pass
    else :
     I1Iii11iI . update ( 50 , '' , '' , 'Deleting: ' + o0o0Ooo0 )
     os . unlink ( os . path . join ( O0000ooO0OOo , o0o0Ooo0 ) )
     print 'from PACKAGES deleted: ' + O0000ooO0OOo + o0o0Ooo0
   except :
    pass
  for O00oo00oO in OoiIiI1IiIII :
   try :
    I1Iii11iI . update ( 50 , '' , '' , 'Deleting: ' + O00oo00oO )
    shutil . rmtree ( os . path . join ( O0000ooO0OOo , O00oo00oO ) )
    print 'from PACKAGES removed folder: ' + os . path . join ( O0000ooO0OOo , O00oo00oO )
   except :
    pass
    if 23 - 23: I1IiiI % iIii1I11I1II1 - oO0o - iii1I1I - o0oOOo0O0Ooo
    if 39 - 39: Oo0Ooo . OoO0O00
 I1Iii11iI . update ( 75 )
 if 74 - 74: I1IiiI . O0 . O00oOoOoO0o0O + O00oOoOoO0o0O - O00oOoOoO0o0O
 if 100 - 100: Oo0ooO0oo0oO / OoooooooOO
 for O0000ooO0OOo , OoiIiI1IiIII , ooooo0 in os . walk ( Oo0O00O000 ) :
  for o0o0Ooo0 in ooooo0 :
   try :
    I1Iii11iI . update ( 75 , '' , '' , 'Deleting: ' + o0o0Ooo0 )
    os . unlink ( os . path . join ( O0000ooO0OOo , o0o0Ooo0 ) )
    print 'from THUMBS deleted: ' + O0000ooO0OOo + o0o0Ooo0
   except :
    pass
  for O00oo00oO in OoiIiI1IiIII :
   try :
    I1Iii11iI . update ( 75 , '' , '' , 'Deleting: ' + O00oo00oO )
    shutil . rmtree ( os . path . join ( O0000ooO0OOo , O00oo00oO ) )
    print 'from THUMBS removed folder: ' + os . path . join ( O0000ooO0OOo , O00oo00oO )
   except :
    pass
    if 73 - 73: i11iIiiIii - Oo0Ooo
    if 100 - 100: iIii1I11I1II1 + O0oo0OO0
    if 51 - 51: o0oOOo0O0Ooo * I11i
 I1Iii11iI . update ( 85 )
 if 42 - 42: OOooOOo % I11i
 if 84 - 84: Oo0Ooo * OoOoOO00 / Ii1I / O00oOoOoO0o0O / o0oOOo0O0Ooo . I1ii11iIi11i
 for O0000ooO0OOo , OoiIiI1IiIII , ooooo0 in os . walk ( I1I1i1I ) :
  for o0o0Ooo0 in ooooo0 :
   try :
    if o0o0Ooo0 == "kodi.log" or o0o0Ooo0 == "build.zip" :
     pass
    else :
     III1iII1I1ii = os . path . join ( O0000ooO0OOo , o0o0Ooo0 )
     if 'script.areswizard' not in III1iII1I1ii and 'script.module.pyxbmct' not in III1iII1I1ii and 'script.module.elementtree' not in III1iII1I1ii :
      I1Iii11iI . update ( 85 , '' , '' , 'Deleting: ' + o0o0Ooo0 )
      os . unlink ( III1iII1I1ii )
      print 'from MAINADDONDIR deleted: ' + O0000ooO0OOo + o0o0Ooo0
   except :
    pass
  for O00oo00oO in OoiIiI1IiIII :
   try :
    if O00oo00oO == "packages" or O00oo00oO == "script.areswizard" or O00oo00oO == "script.module.pyxbmct" or O00oo00oO == "script.module.elementtree" :
     pass
    else :
     if 'script.areswizard' not in III1iII1I1ii and 'script.module.pyxbmct' not in III1iII1I1ii and 'script.module.elementtree' not in III1iII1I1ii :
      I1Iii11iI . update ( 85 , '' , '' , 'Deleting: ' + O00oo00oO )
      shutil . rmtree ( os . path . join ( O0000ooO0OOo , O00oo00oO ) )
      print 'from MAINADDONDIR removed folder: ' + os . path . join ( O0000ooO0OOo , O00oo00oO )
   except :
    pass
    if 81 - 81: I1IiiI
    if 82 - 82: O0oo0OO0 - OoooooooOO - Ii1I
    if 34 - 34: OOooOOo . iIii1I11I1II1 / I1IiiI . Oo0Ooo - iIii1I11I1II1
    if 83 - 83: iii1I1I - I1ii11iIi11i + iii1I1I
    if 4 - 4: o0oOOo0O0Ooo % iIii1I11I1II1 + I11i
 os . unlink ( OOoO0 )
 OooOO000 . setSetting ( "buildname" , " " )
 OooOO000 . setSetting ( "buildcanupdate" , " " )
 OooOO000 . setSetting ( "lastbuildcheck" , " " )
 OooOO000 . setSetting ( "buildinstalledversion" , " " )
 OooOO000 . setSetting ( "buildlatestversion" , " " )
 if 60 - 60: I1ii11iIi11i / O0oo0OO0 % i11iIiiIii % oO0o % I1IiiI . Oo0Ooo
 I1Iii11iI . close
 if 20 - 20: O00oOoOoO0o0O - OOooOOo + OoOoOO00
 oO00o ( )
 xbmc . executebuiltin ( "UpdateLocalAddons" )
 if 83 - 83: OoooooooOO / I1IiiI + iii1I1I - iIii1I11I1II1 % Oo0ooO0oo0oO
 I1i ( )
 if 74 - 74: OoO0O00
 if 13 - 13: I1ii11iIi11i / OoO0O00
 if 90 - 90: iIii1I11I1II1 - OoO0O00 . i1IIi / o0oOOo0O0Ooo + O0
 if 94 - 94: O00oOoOoO0o0O * i1IIi
 if 90 - 90: O0 % I1IiiI . o0oOOo0O0Ooo % Oo0ooO0oo0oO % I1IiiI
def I1i ( ) :
 if 16 - 16: OoO0O00 / OOooOOo / iIii1I11I1II1 / OoooooooOO . oO0o - O0oo0OO0
 OOooo = xbmcgui . Dialog ( )
 OOooo . ok ( ooO ( "areswizard" ) , ooO ( "closekodi" ) )
 if 43 - 43: OoOoOO00 % OOooOOo / I1IiiI + I1IiiI
 oO00o ( )
 if 40 - 40: OOooOOo . O0oo0OO0 + O0oo0OO0
 if 4 - 4: iIii1I11I1II1 - iIii1I11I1II1 * I11i
 print '----------------------------------'
 print '--> attempting to close kodi  <--'
 print '-----------------------------------'
 if 32 - 32: I1IiiI + II111iiii * iii1I1I + O0 / O0 * Oo0Ooo
 if xbmc . getCondVisibility ( 'system.platform.osx' ) :
  try : os . system ( 'killall -9 XBMC' )
  except : pass
  try : os . system ( 'killall -9 Kodi' )
  except : pass
  if 64 - 64: i11iIiiIii / iii1I1I + i11iIiiIii . I11i
  if 66 - 66: i1IIi
  if 98 - 98: Oo0Ooo / iIii1I11I1II1
 elif xbmc . getCondVisibility ( 'system.platform.linux' ) :
  if 33 - 33: O0 - iii1I1I
  if 40 - 40: iii1I1I * I11i
  try : os . system ( 'killall XBMC' )
  except : pass
  try : os . system ( 'killall Kodi' )
  except : pass
  try : os . system ( 'killall -9 xbmc.bin' )
  except : pass
  try : os . system ( 'killall -9 kodi.bin' )
  except : pass
  if 25 - 25: O0 * o0oOOo0O0Ooo % Oo0ooO0oo0oO % I1IiiI
  if 87 - 87: OoOoOO00
 elif xbmc . getCondVisibility ( 'system.platform.android' ) :
  if 30 - 30: O00oOoOoO0o0O % OoOoOO00 + O0oo0OO0
  I1111Iii11i1 = 0
  if 89 - 89: I1IiiI / OoOoOO00 % Oo0Ooo - OoOoOO00 * O0
  while I1111Iii11i1 < 100 :
   if 83 - 83: I11i . OoO0O00 + I1ii11iIi11i * i11iIiiIii % I11i * OoO0O00
   I1111Iii11i1 = I1111Iii11i1 + 1
   print 'Android force close - attempt no: ' + str ( I1111Iii11i1 )
   if 95 - 95: Oo0Ooo - I11i * iIii1I11I1II1
   try : os . system ( 'adb shell am force-stop org.xbmc.kodi' )
   except : pass
   try : os . system ( 'adb shell am force-stop org.kodi' )
   except : pass
   try : os . system ( 'adb shell am force-stop org.xbmc.xbmc' )
   except : pass
   try : os . system ( 'adb shell am force-stop org.xbmc' )
   except : pass
   if 77 - 77: iIii1I11I1II1 / I11i
   if 7 - 7: Ii1I . I1ii11iIi11i / o0oOOo0O0Ooo - I1ii11iIi11i / Ii1I
   if 6 - 6: O0
   if 67 - 67: O0oo0OO0
 elif xbmc . getCondVisibility ( 'system.platform.windows' ) :
  if 49 - 49: O00oOoOoO0o0O / i1IIi . OOooOOo
  if 64 - 64: O0
  try : os . system ( 'tskill Kodi.exe' )
  except : pass
  if 10 - 10: I1ii11iIi11i % Oo0ooO0oo0oO * O00oOoOoO0o0O - iIii1I11I1II1
  try : os . system ( 'TASKKILL /im Kodi.exe /f' )
  except : pass
  if 42 - 42: iii1I1I
  if 96 - 96: OoO0O00 + o0oOOo0O0Ooo . Oo0ooO0oo0oO
 else :
  try : os . system ( 'killall AppleTV' )
  except : pass
  try : os . system ( 'sudo initctl stop kodi' )
  except : pass
  try : os . system ( 'sudo initctl stop xbmc' )
  except : pass
  if 44 - 44: I11i * iIii1I11I1II1 . I1ii11iIi11i
 oO00o ( )
 if 9 - 9: o0oOOo0O0Ooo
 if 23 - 23: Oo0ooO0oo0oO * OoO0O00 + O0 % O0oo0OO0
 if 21 - 21: Ii1I * OoOoOO00
def ooo00O ( numblocks , blocksize , filesize , dp , start_time ) :
 try :
  ii11 = min ( numblocks * blocksize * 100 / filesize , 100 )
  o0OoI1 = float ( numblocks ) * blocksize / ( 1024 * 1024 )
  oO0ooooooOo = numblocks * blocksize / ( time . time ( ) - start_time )
  if oO0ooooooOo > 0 :
   i1iiIiiiI1 = ( filesize - numblocks * blocksize ) / oO0ooooooOo
  else :
   i1iiIiiiI1 = 0
  oO0ooooooOo = oO0ooooooOo / 1024
  Iii1Ii1I = float ( filesize ) / ( 1024 * 1024 )
  if 12 - 12: OoOoOO00 * I1ii11iIi11i - Ii1I / O0oo0OO0 * O0oo0OO0 - Oo0ooO0oo0oO
  if 28 - 28: Ii1I
  if 6 - 6: i1IIi + Oo0Ooo % I11i . OOooOOo + oO0o
  if 92 - 92: OoOoOO00 / OoOoOO00 / i1IIi + I1IiiI . i1IIi
  if 81 - 81: Ii1I * O00oOoOoO0o0O / OoO0O00 . iii1I1I % I11i . Oo0ooO0oo0oO
  if 63 - 63: Oo0Ooo * O0oo0OO0 % Ii1I
  if 88 - 88: O00oOoOoO0o0O - i1IIi * OoO0O00 * OoOoOO00 % I1IiiI
  if 10 - 10: OOooOOo * I1ii11iIi11i / I11i * o0oOOo0O0Ooo % O0 * i11iIiiIii
  if 68 - 68: I11i . Ii1I + I11i / O00oOoOoO0o0O . I11i / iIii1I11I1II1
  ooiI1IiII = '%.02f MB of %.02f MB' % ( o0OoI1 , Iii1Ii1I )
  ii111I1iIiIi111I = 'Speed: %.02d Kb/s ' % oO0ooooooOo
  ii111I1iIiIi111I += 'ETA: %02d:%02d' % divmod ( i1iiIiiiI1 , 60 )
  dp . update ( ii11 , ooiI1IiII , ii111I1iIiIi111I )
  if 72 - 72: o0oOOo0O0Ooo + I1IiiI * I11i - OoOoOO00
 except :
  ii11 = 100
  dp . update ( ii11 )
 if dp . iscanceled ( ) :
  dp . close ( )
  raise II1Iiii1111i ( 'Stopped Downloading' )
  if 74 - 74: OoOoOO00 % O00oOoOoO0o0O . O0
  if 92 - 92: O0 / O0 * I11i + O0oo0OO0
  if 80 - 80: Oo0Ooo - O00oOoOoO0o0O . I11i * I11i
  if 21 - 21: OoOoOO00
  if 52 - 52: OoO0O00 - Oo0ooO0oo0oO * I1ii11iIi11i
  if 31 - 31: i1IIi
  if 95 - 95: oO0o / O00oOoOoO0o0O * II111iiii * Ii1I . OoO0O00 . OoO0O00
def o0OooooOooO ( dbPath ) :
 try :
  OO0o = xbmc . translatePath ( dbPath )
  i11IO000o0Oo = sqlite3 . connect ( OO0o , timeout = 10 , detect_types = sqlite3 . PARSE_DECLTYPES , check_same_thread = False )
  IIi1III = i11IO000o0Oo . cursor ( )
  if 12 - 12: I1IiiI * OoO0O00 - II111iiii . i1IIi
  IIi1III . execute ( "DELETE FROM texture WHERE id > 0" )
  IIi1III . execute ( "VACUUM" )
  if 86 - 86: OOooOOo / OoooooooOO - O00oOoOoO0o0O
  i11IO000o0Oo . commit ( )
  IIi1III . close ( )
 except :
  pass
  if 56 - 56: I1ii11iIi11i - i1IIi * OoooooooOO * O0 * I1IiiI - O0oo0OO0
  if 32 - 32: OoooooooOO . OOooOOo . OoO0O00 . O00oOoOoO0o0O / I11i % i1IIi
  if 21 - 21: O0 . OoO0O00 * I1ii11iIi11i % iii1I1I + OoooooooOO
  if 8 - 8: oO0o * iii1I1I * I11i
  if 30 - 30: O0oo0OO0
  if 61 - 61: iii1I1I
def oOO0o0o ( settingid , value ) :
 if 50 - 50: Ii1I / I1IiiI . O0
 if 49 - 49: O0oo0OO0 . OoO0O00 % O0
 if not os . path . isfile ( OOoO0 ) :
  open ( OOoO0 , 'w' ) . close ( )
  if 15 - 15: I11i - Oo0Ooo / O0oo0OO0 . Oo0ooO0oo0oO % I1IiiI
  if 62 - 62: II111iiii + Oo0ooO0oo0oO + I1IiiI
  if 70 - 70: o0oOOo0O0Ooo + Ii1I . OoO0O00 * Ii1I + OOooOOo + Oo0ooO0oo0oO
  if 13 - 13: I1ii11iIi11i
  if 97 - 97: oO0o - Oo0Ooo . i11iIiiIii % Oo0ooO0oo0oO * i11iIiiIii - OoooooooOO
 with open ( OOoO0 , 'r' , 0 ) as o0o0Ooo0 :
  try :
   OoO000O = json . load ( o0o0Ooo0 )
  except :
   OoO000O = ""
   if 44 - 44: I11i % OoooooooOO / iii1I1I - i11iIiiIii * i1IIi * o0oOOo0O0Ooo
   if 51 - 51: Ii1I + O00oOoOoO0o0O / I1ii11iIi11i + O0 % Ii1I
   if 55 - 55: iii1I1I % o0oOOo0O0Ooo - oO0o % OoooooooOO
 try :
  iiI1Ii1I = OoO000O [ 'buildname' ]
 except :
  iiI1Ii1I = "0"
  if 38 - 38: o0oOOo0O0Ooo % II111iiii % OOooOOo + I1IiiI + iIii1I11I1II1 . I11i
  if 42 - 42: iIii1I11I1II1 * iIii1I11I1II1
 try :
  IiiIii = OoO000O [ 'buildurl' ]
 except :
  IiiIii = "0"
  if 80 - 80: II111iiii . Oo0Ooo * oO0o % II111iiii / I1ii11iIi11i
  if 66 - 66: iii1I1I / OoO0O00 / i11iIiiIii
 try :
  oOOoooO0O0 = OoO000O [ 'guisettingssize' ]
 except :
  oOOoooO0O0 = "0"
  if 28 - 28: i1IIi - Oo0Ooo - i1IIi + O00oOoOoO0o0O
  if 79 - 79: oO0o % o0oOOo0O0Ooo / o0oOOo0O0Ooo % iii1I1I
 try :
  oo0 = OoO000O [ 'canupdate' ]
 except :
  oo0 = "0"
  if 56 - 56: Oo0Ooo % I1ii11iIi11i
  if 53 - 53: OoO0O00 . I11i - Oo0ooO0oo0oO
  if 11 - 11: I11i + i11iIiiIii / oO0o % oO0o * o0oOOo0O0Ooo / OoOoOO00
 try :
  I1i111I = OoO000O [ 'installedversion' ]
 except :
  I1i111I = "0"
  if 74 - 74: oO0o . O0oo0OO0 . II111iiii
  if 92 - 92: O0oo0OO0 % OoooooooOO * O0oo0OO0
 try :
  OOIIiiiI = OoO000O [ 'wizardname' ]
 except :
  OOIIiiiI = "0"
  if 46 - 46: o0oOOo0O0Ooo % OoO0O00 + I11i % o0oOOo0O0Ooo + oO0o . Oo0Ooo
  if 58 - 58: O0oo0OO0 + I1ii11iIi11i
  if 57 - 57: OOooOOo + II111iiii
  if 67 - 67: II111iiii
  if 39 - 39: i1IIi
 if settingid == "buildname" :
  iiI1Ii1I = value
  if 16 - 16: OoOoOO00 % iIii1I11I1II1 + Ii1I - o0oOOo0O0Ooo . Oo0Ooo + i1IIi
 if settingid == "buildurl" :
  IiiIii = value
  if 59 - 59: i1IIi
 if settingid == "guisettingssize" :
  oOOoooO0O0 = value
  if 37 - 37: OoO0O00 / I1ii11iIi11i / OoOoOO00
  if 15 - 15: I1IiiI % iIii1I11I1II1 . O0oo0OO0
 if settingid == "canupdate" :
  oo0 = value
  if 71 - 71: I11i - Ii1I + i11iIiiIii % I1ii11iIi11i - OoO0O00 - OOooOOo
 if settingid == "installedversion" :
  I1i111I = value
  if 71 - 71: OOooOOo
  if 27 - 27: OOooOOo * O0 * i11iIiiIii / OoOoOO00 - i1IIi
 if settingid == "wizardname" :
  OOIIiiiI = value
  if 73 - 73: iii1I1I / I1IiiI * Oo0ooO0oo0oO
  if 85 - 85: I11i + I11i + oO0o - OoOoOO00
  if 15 - 15: OoO0O00
 OoO000O = { 'buildname' : iiI1Ii1I , 'buildurl' : IiiIii , 'guisettingssize' : oOOoooO0O0 , 'canupdate' : oo0 , 'installedversion' : I1i111I , 'wizardname' : OOIIiiiI }
 if 88 - 88: Ii1I % i1IIi / O0oo0OO0
 if 2 - 2: Ii1I . O00oOoOoO0o0O % OoOoOO00
 if 42 - 42: OoOoOO00 * OoO0O00 * O00oOoOoO0o0O - O00oOoOoO0o0O % Oo0Ooo . O00oOoOoO0o0O
 with open ( OOoO0 , 'w' ) as o0o0Ooo0 :
  json . dump ( OoO000O , o0o0Ooo0 )
  o0o0Ooo0 . close
  if 38 - 38: O0oo0OO0 . O00oOoOoO0o0O - Oo0ooO0oo0oO . i11iIiiIii
  if 35 - 35: i11iIiiIii
  if 62 - 62: O0 - o0oOOo0O0Ooo + O0oo0OO0 * I1ii11iIi11i / OOooOOo
  if 87 - 87: Oo0Ooo / OoooooooOO + O0 / o0oOOo0O0Ooo % II111iiii - O0
  if 63 - 63: OOooOOo - OoO0O00 * i1IIi - I1ii11iIi11i . I1IiiI
  if 59 - 59: i11iIiiIii . OOooOOo % Oo0Ooo + O0
  if 84 - 84: O0oo0OO0 / O0 - O00oOoOoO0o0O . I11i / o0oOOo0O0Ooo
  if 12 - 12: i11iIiiIii / Ii1I + i1IIi
  if 54 - 54: I1IiiI
  if 55 - 55: I1ii11iIi11i % O00oOoOoO0o0O % o0oOOo0O0Ooo + i1IIi * OoooooooOO % II111iiii
  if 37 - 37: Oo0Ooo
  if 33 - 33: OoooooooOO - O0 . O0 - o0oOOo0O0Ooo % o0oOOo0O0Ooo % OoO0O00
def I1iI1I1IIiI1i1 ( username , name , mac , deviceid ) :
 if 26 - 26: i11iIiiIii - OoooooooOO + i11iIiiIii
 if 79 - 79: Oo0Ooo * oO0o . oO0o / Oo0Ooo * O00oOoOoO0o0O
 ii1I1 = [ "1" , "2" , "3" , "4" , "5" ]
 if 14 - 14: Ii1I % I1IiiI / oO0o + OoO0O00 * Oo0ooO0oo0oO . Oo0Ooo
 OO0ooOo0o = xbmcgui . Dialog ( ) . select ( "How many stars?" , ii1I1 )
 if 99 - 99: O00oOoOoO0o0O * OOooOOo - OoOoOO00 + O00oOoOoO0o0O
 if 22 - 22: Oo0ooO0oo0oO - O0oo0OO0 - II111iiii / O00oOoOoO0o0O + iii1I1I
 if 5 - 5: O0 * Ii1I
 if 78 - 78: iii1I1I * iIii1I11I1II1 . OoO0O00 . OoOoOO00 % O0oo0OO0
 if 77 - 77: OOooOOo / OoooooooOO
 IiI1iIiI = int ( ii1I1 [ OO0ooOo0o ] )
 if 56 - 56: Ii1I * O0oo0OO0 . O0 - Oo0ooO0oo0oO / i1IIi
 iI1i1IIi1i1 = 4
 OoOoo00Oo0OoO = '' . join ( random . choice ( string . ascii_uppercase ) for _ in range ( iI1i1IIi1i1 ) )
 if 54 - 54: I1IiiI . OoooooooOO / o0oOOo0O0Ooo * OoooooooOO / Oo0Ooo
 iiII1i1 = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=rateaddon&user=' + username + '&mac=' + mac + '&name=' + name + '&deviceid=' + deviceid + '&points=' + str ( IiI1iIiI ) + '&code=' + OoOoo00Oo0OoO
 if 32 - 32: Oo0Ooo * i11iIiiIii % I1IiiI - i11iIiiIii - O0oo0OO0 % I1ii11iIi11i
 if o000oo == "true" :
  print '@ares_rate_url -->'
  print ' '
  print iiII1i1
  if 35 - 35: o0oOOo0O0Ooo % iii1I1I / O0 * I1IiiI . o0oOOo0O0Ooo / OOooOOo
 iiII1i1 = iiII1i1 . replace ( " " , "%20" )
 if 81 - 81: I1ii11iIi11i - i11iIiiIii
 if o000oo == "true" :
  print '@ares_rate_url -->'
  print ' '
  print iiII1i1
  if 49 - 49: iii1I1I * I11i - II111iiii . o0oOOo0O0Ooo
  if 52 - 52: Ii1I + Ii1I - II111iiii . O0 + I1ii11iIi11i
  if 60 - 60: i11iIiiIii + O00oOoOoO0o0O
  if 41 - 41: O0oo0OO0 * o0oOOo0O0Ooo + Oo0Ooo
 o0OOO = iIii111Ii ( iiII1i1 , '' )
 if 81 - 81: oO0o + I1ii11iIi11i + OoooooooOO
 if o000oo == "true" :
  print '@ares_rate_result -->'
  print ' '
  print o0OOO
  if 23 - 23: iIii1I11I1II1 % O00oOoOoO0o0O
  if 57 - 57: Oo0Ooo / o0oOOo0O0Ooo * oO0o / Oo0Ooo - O00oOoOoO0o0O / o0oOOo0O0Ooo
 if o0OOO == "Inserted" :
  if 24 - 24: O0oo0OO0 + OOooOOo
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Thanks" , "Your rating was accepted" , "" , "" )
  if 76 - 76: O0 - OoooooooOO
  return
  if 68 - 68: iii1I1I + O0oo0OO0
  if 90 - 90: o0oOOo0O0Ooo
 if o0OOO == "Duplicate" :
  if 48 - 48: iii1I1I + Ii1I
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Already rated" , "You already rated this addon" , "" , "" )
  if 45 - 45: oO0o / iIii1I11I1II1 % O0 % O00oOoOoO0o0O % I1ii11iIi11i
  return
  if 89 - 89: OOooOOo - O0oo0OO0 - iii1I1I
 else :
  if 67 - 67: oO0o
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Sorry, there was a problem" , "An error occurred: \n\n -" + o0OOO , "" , "" )
  if o000oo == "true" :
   print '@ares: url: ' + str ( iiII1i1 )
   if 76 - 76: I1IiiI % I1IiiI - O00oOoOoO0o0O / OoOoOO00 / I1ii11iIi11i
  return
  if 42 - 42: I1IiiI + I1ii11iIi11i + Oo0Ooo * i1IIi - II111iiii
  if 15 - 15: o0oOOo0O0Ooo
  if 60 - 60: I1ii11iIi11i / O0oo0OO0
  if 13 - 13: O0oo0OO0
  if 52 - 52: II111iiii / OoO0O00 . Ii1I
def o0o0oo0O00o ( username , name , mac , deviceid ) :
 if 82 - 82: OoO0O00 . Oo0Ooo % O0oo0OO0
 if 100 - 100: OoooooooOO + Oo0ooO0oo0oO + II111iiii
 if i1I1ii11i1Iii == "yes" :
  if 73 - 73: II111iiii
  ii1I1 = [ "1" , "2" , "3" , "4" , "5" ]
  if 63 - 63: i11iIiiIii . Oo0Ooo . OOooOOo - II111iiii
  OO0ooOo0o = xbmcgui . Dialog ( ) . select ( "How many stars?" , ii1I1 )
  if 35 - 35: II111iiii + O00oOoOoO0o0O
  if 66 - 66: o0oOOo0O0Ooo % O00oOoOoO0o0O
  if 39 - 39: O00oOoOoO0o0O
  if 18 - 18: iii1I1I % o0oOOo0O0Ooo - i1IIi
  if 53 - 53: o0oOOo0O0Ooo + O00oOoOoO0o0O - Oo0ooO0oo0oO % i11iIiiIii - i11iIiiIii - O0oo0OO0
  IiI1iIiI = int ( ii1I1 [ OO0ooOo0o ] )
  if 79 - 79: II111iiii + i11iIiiIii . OOooOOo . I11i / iIii1I11I1II1
  iI1i1IIi1i1 = 4
  OoOoo00Oo0OoO = '' . join ( random . choice ( string . ascii_uppercase ) for _ in range ( iI1i1IIi1i1 ) )
  if 62 - 62: O0
  iiII1i1 = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=ratebuild&user=' + username + '&mac=' + mac + '&name=' + name + '&deviceid=' + deviceid + '&points=' + str ( IiI1iIiI ) + '&code=' + OoOoo00Oo0OoO
  if 52 - 52: OoooooooOO . oO0o
  iiII1i1 = iiII1i1 . replace ( " " , "%20" )
  if 38 - 38: Oo0ooO0oo0oO . i1IIi / iii1I1I + I1IiiI - II111iiii
  if 21 - 21: i11iIiiIii + II111iiii - i1IIi / OoooooooOO * OOooOOo % Oo0Ooo
  if 59 - 59: Ii1I
  if 77 - 77: I1ii11iIi11i * Ii1I * O0 * I1IiiI % OoO0O00 - iIii1I11I1II1
  o0OOO = iIii111Ii ( iiII1i1 , '' )
  if 6 - 6: i11iIiiIii . I11i - OoooooooOO
  if 26 - 26: I1IiiI
  if o0OOO == "Inserted" :
   if 26 - 26: O00oOoOoO0o0O . Ii1I / O00oOoOoO0o0O - OoO0O00 % OoO0O00
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Thanks" , "Your rating was accepted" , "" , "" )
   if 72 - 72: OoooooooOO * II111iiii + OoO0O00 % iIii1I11I1II1 . I1ii11iIi11i % OoooooooOO
   return
   if 19 - 19: OoOoOO00 + O0oo0OO0
   if 19 - 19: I1ii11iIi11i / O0oo0OO0 + OoooooooOO - O0
  if o0OOO == "Duplicate" :
   if 49 - 49: I1ii11iIi11i / OoOoOO00 - I1IiiI + iii1I1I . OOooOOo % oO0o
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Already rated" , "You already rated this build" , "" , "" )
   if 34 - 34: OoO0O00 - I1IiiI + OoOoOO00
   return
   if 22 - 22: iIii1I11I1II1 . i1IIi . OOooOOo % Oo0Ooo - i1IIi
  else :
   if 78 - 78: I1IiiI / i1IIi % II111iiii % I1IiiI % Ii1I
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Sorry, there was a problem" , "An error occurred: \n\n -" + o0OOO , "" , "" )
   if o000oo == "true" :
    print '@ares: url: ' + str ( iiII1i1 )
    if 29 - 29: i1IIi % o0oOOo0O0Ooo + OOooOOo / Oo0Ooo
   return
 else :
  if 38 - 38: O00oOoOoO0o0O . O0oo0OO0
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Ares Wizard" , "Statistics currently unavailable" )
  if 69 - 69: Oo0ooO0oo0oO + OoOoOO00 + II111iiii % O0oo0OO0 + Ii1I . Oo0ooO0oo0oO
  if 73 - 73: I11i % I11i . Oo0ooO0oo0oO + OoOoOO00
  if 33 - 33: i11iIiiIii . i11iIiiIii * i11iIiiIii / iIii1I11I1II1 / I1ii11iIi11i . Oo0ooO0oo0oO
  if 11 - 11: iii1I1I
  if 60 - 60: I1ii11iIi11i / O0oo0OO0
def IIii11iiiIIii ( username , name , mac , deviceid ) :
 if 84 - 84: OoO0O00 - iii1I1I - Ii1I
 if 97 - 97: Ii1I - OoooooooOO . OoooooooOO - I11i * Oo0Ooo
 if 34 - 34: OOooOOo + I11i / I1ii11iIi11i % i11iIiiIii / O00oOoOoO0o0O
 if 35 - 35: OoOoOO00
 if 18 - 18: II111iiii . OoOoOO00 + I1ii11iIi11i * oO0o + OoooooooOO
 ii1I1 = [ "1" , "2" , "3" , "4" , "5" ]
 if 39 - 39: I1IiiI * Oo0ooO0oo0oO / i11iIiiIii - oO0o - oO0o + O0
 OO0ooOo0o = xbmcgui . Dialog ( ) . select ( "How many stars?" , ii1I1 )
 if 73 - 73: OOooOOo
 if 44 - 44: I1ii11iIi11i * i1IIi - iIii1I11I1II1 - oO0o - oO0o * II111iiii
 if 98 - 98: Oo0Ooo + Oo0ooO0oo0oO / OOooOOo . iIii1I11I1II1 . I1IiiI . OoOoOO00
 if 92 - 92: i1IIi + OoOoOO00 * i1IIi / O00oOoOoO0o0O
 if 4 - 4: oO0o % OoO0O00 + O00oOoOoO0o0O + o0oOOo0O0Ooo
 IiI1iIiI = int ( ii1I1 [ OO0ooOo0o ] )
 if 82 - 82: O0 / O0oo0OO0 + OOooOOo . O00oOoOoO0o0O + Ii1I
 iI1i1IIi1i1 = 4
 OoOoo00Oo0OoO = '' . join ( random . choice ( string . ascii_uppercase ) for _ in range ( iI1i1IIi1i1 ) )
 if 31 - 31: i1IIi * OoO0O00 - Ii1I + I11i
 iiII1i1 = i11i1 + iiiiiIIii + O000OO0 + OOO00 + '?action=raterepo&user=' + username + '&mac=' + mac + '&name=' + name + '&deviceid=' + deviceid + '&points=' + str ( IiI1iIiI ) + '&code=' + OoOoo00Oo0OoO
 if 8 - 8: O0 + i1IIi . O0
 iiII1i1 = iiII1i1 . replace ( " " , "%20" )
 if 67 - 67: I1IiiI
 if 42 - 42: Oo0ooO0oo0oO - o0oOOo0O0Ooo % oO0o - Oo0ooO0oo0oO
 o0OOO = iIii111Ii ( iiII1i1 , '' )
 if 87 - 87: OoooooooOO / O0
 if 57 - 57: iIii1I11I1II1 / O00oOoOoO0o0O + OoO0O00 * oO0o + Ii1I
 if o0OOO == "Inserted" :
  if 76 - 76: i11iIiiIii . OOooOOo / I11i * oO0o % iIii1I11I1II1 . Oo0ooO0oo0oO
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Thanks" , "Your rating was accepted" , "" , "" )
  if 75 - 75: O0 + I1IiiI
  return
  if 67 - 67: OoOoOO00 % OoooooooOO / OoO0O00 - OoO0O00 / O0
  if 19 - 19: iIii1I11I1II1 / OOooOOo % I11i % I1IiiI / I1ii11iIi11i
 if o0OOO == "Duplicate" :
  if 73 - 73: II111iiii
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Already rated" , "You already rated this repo" , "" , "" )
  if 26 - 26: II111iiii . iIii1I11I1II1 - O0oo0OO0 % OOooOOo
  return
  if 83 - 83: OOooOOo + OoooooooOO % O0oo0OO0 % O00oOoOoO0o0O + i11iIiiIii
 else :
  if 10 - 10: OoooooooOO . Ii1I % O0oo0OO0 + O00oOoOoO0o0O
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Sorry, there was a problem" , "An error occurred: \n\n -" + o0OOO , "" , "" )
  if o000oo == "true" :
   print '@ares: url: ' + str ( iiII1i1 )
   if 78 - 78: OoOoOO00 - oO0o . I1ii11iIi11i * i11iIiiIii
  return
  if 44 - 44: iIii1I11I1II1 * iii1I1I
  if 32 - 32: OoOoOO00
  if 65 - 65: iIii1I11I1II1 + iii1I1I
  if 90 - 90: i11iIiiIii - Oo0Ooo
  if 31 - 31: OoOoOO00 + OoOoOO00 + OoooooooOO % O0
  if 14 - 14: i1IIi / OoooooooOO . I1IiiI * O0oo0OO0 + OoO0O00
  if 45 - 45: OoooooooOO * O0oo0OO0
II1iI11ii1 = pyxbmct . Image ( os . path . join ( IIiIi1iI , 'back.png' ) )
Iii11iI1I . placeControl ( II1iI11ii1 , - 50 , - 2 , 655 , 178 )
if 7 - 7: O0
if 42 - 42: o0oOOo0O0Ooo / Ii1I
if 31 - 31: OOooOOo
if 20 - 20: i11iIiiIii * oO0o * Oo0ooO0oo0oO
if 65 - 65: I1ii11iIi11i / Oo0Ooo / I1IiiI + O00oOoOoO0o0O
if 71 - 71: OoO0O00 . O0oo0OO0 + OoooooooOO
if 9 - 9: OoooooooOO / iIii1I11I1II1 % I1IiiI . I1IiiI / I11i - iii1I1I
if 60 - 60: I11i - OoO0O00 - OoOoOO00 * Oo0ooO0oo0oO - i1IIi
iiii1ii1 = 90
if 18 - 18: Oo0ooO0oo0oO + i11iIiiIii + O0 + OOooOOo / Ii1I
if 65 - 65: I1IiiI . Oo0ooO0oo0oO
if 51 - 51: O0oo0OO0
global Ii1I1
Ii1I1 = pyxbmct . Slider ( textureback = OOoO00 )
Iii11iI1I . placeControl ( Ii1I1 , 180 , 90 , 25 , 60 )
Ii1I1 . setPercent ( iiii1ii1 )
Ii1I1 . setVisible ( False )
if 89 - 89: Oo0Ooo
Iii11iI1I . connectEventList ( [ pyxbmct . ACTION_MOVE_LEFT ,
 pyxbmct . ACTION_MOVE_RIGHT ,
 pyxbmct . ACTION_MOUSE_DRAG ,
 pyxbmct . ACTION_MOUSE_LEFT_CLICK ] ,
 OoOiII11IiIi )
if 15 - 15: OOooOOo * II111iiii - OOooOOo * iIii1I11I1II1
if 95 - 95: O0oo0OO0 / OoooooooOO * I11i * OoooooooOO
if 88 - 88: I1IiiI / Oo0Ooo / oO0o + oO0o % OOooOOo + Oo0Ooo
if 63 - 63: o0oOOo0O0Ooo + i11iIiiIii % OOooOOo % iIii1I11I1II1 / I1ii11iIi11i - iii1I1I
if 72 - 72: iii1I1I % oO0o . O00oOoOoO0o0O + I1ii11iIi11i . O00oOoOoO0o0O . II111iiii
if 10 - 10: I11i . Oo0ooO0oo0oO + I11i * Ii1I
OO0ooO0 = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "cachetweakfloowingsettings" ) + '[/COLOR]' , 'font14' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( OO0ooO0 , 80 , 70 , 60 , 100 )
OO0ooO0 . setVisible ( False )
if 55 - 55: OOooOOo / iii1I1I + OoooooooOO - OoooooooOO
if 51 - 51: O0 % Ii1I % Oo0Ooo - O0
Iiii1I = pyxbmct . Label ( '[COLOR=lightgray]' + ooO ( "videocachesize" ) + '[/COLOR]' , 'font14' )
Iii11iI1I . placeControl ( Iiii1I , 148 , 106 , 10 , 30 )
Iiii1I . setVisible ( False )
if 94 - 94: OoooooooOO - Oo0ooO0oo0oO % I1ii11iIi11i + O0oo0OO0
if 51 - 51: I1ii11iIi11i . iii1I1I / i1IIi * Oo0ooO0oo0oO % I11i
OoOooOO0oOOo0O = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "currentsetting" ) + '[/COLOR]' )
Iii11iI1I . placeControl ( OoOooOO0oOOo0O , 195 , 87 , 10 , 30 )
OoOooOO0oOOo0O . setVisible ( False )
if 82 - 82: O0 % OoOoOO00 . iii1I1I . i1IIi . iii1I1I - Oo0Ooo
global i1i1iiIIiiiII
i1i1iiIIiiiII = pyxbmct . Label ( str ( iiii1ii1 ) , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( i1i1iiIIiiiII , 214 , 107 )
i1i1iiIIiiiII . setVisible ( False )
if 58 - 58: O0 * OOooOOo
Ooo000000 = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "recommendedsetting" ) + '[/COLOR]' )
Iii11iI1I . placeControl ( Ooo000000 , 195 , 123 , 10 , 35 )
Ooo000000 . setVisible ( False )
if 60 - 60: Oo0ooO0oo0oO
if 47 - 47: i11iIiiIii
if 21 - 21: i1IIi - oO0o - Oo0Ooo
if 11 - 11: i1IIi
if 77 - 77: I11i + i1IIi * OoOoOO00 % OoooooooOO
if 56 - 56: O0oo0OO0 * i1IIi % i11iIiiIii
if 56 - 56: Ii1I . iii1I1I
if 76 - 76: I1IiiI / Ii1I % OoOoOO00 + O00oOoOoO0o0O / i11iIiiIii . o0oOOo0O0Ooo
if 31 - 31: oO0o * oO0o % o0oOOo0O0Ooo . O0 + iii1I1I
if 52 - 52: i11iIiiIii
if 1 - 1: i1IIi * iIii1I11I1II1
if 29 - 29: I11i
if 12 - 12: oO0o % i1IIi - oO0o / Oo0ooO0oo0oO * II111iiii % Oo0ooO0oo0oO
if 6 - 6: O00oOoOoO0o0O / OoO0O00
if 83 - 83: O00oOoOoO0o0O - iIii1I11I1II1 * Oo0ooO0oo0oO - oO0o
if 77 - 77: Ii1I
iII1ii = 50
if 9 - 9: OOooOOo / OoooooooOO + iii1I1I
if 52 - 52: O00oOoOoO0o0O / OOooOOo * iIii1I11I1II1 + o0oOOo0O0Ooo
if 20 - 20: O0oo0OO0
global OOO0O00Oo
OOO0O00Oo = pyxbmct . Slider ( textureback = OOoO00 )
Iii11iI1I . placeControl ( OOO0O00Oo , 270 , 90 , 25 , 60 )
OOO0O00Oo . setPercent ( iII1ii )
OOO0O00Oo . setVisible ( False )
if 33 - 33: i11iIiiIii / O0oo0OO0 + O00oOoOoO0o0O / II111iiii + I11i
Iii11iI1I . connectEventList ( [ pyxbmct . ACTION_MOVE_LEFT ,
 pyxbmct . ACTION_MOVE_RIGHT ,
 pyxbmct . ACTION_MOUSE_DRAG ,
 pyxbmct . ACTION_MOUSE_LEFT_CLICK ] ,
 OoOiII11IiIi )
if 13 - 13: i1IIi % iii1I1I + OoOoOO00 / Ii1I . Ii1I + II111iiii
if 44 - 44: OoOoOO00 / OoooooooOO % O0 * Ii1I * O00oOoOoO0o0O
if 84 - 84: o0oOOo0O0Ooo * O00oOoOoO0o0O * OOooOOo * iii1I1I
if 56 - 56: iii1I1I * II111iiii . OoooooooOO . I11i
if 25 - 25: Oo0ooO0oo0oO % o0oOOo0O0Ooo - i11iIiiIii
if 79 - 79: iii1I1I - I1IiiI % O0 / Oo0Ooo + OoOoOO00 . Oo0Ooo
ii1oOOO0ooOO = pyxbmct . Label ( '[COLOR=lightgray]' + ooO ( "curltimelabeltext" ) + '[/COLOR]' , 'font14' )
Iii11iI1I . placeControl ( ii1oOOO0ooOO , 238 , 109 , 10 , 30 )
ii1oOOO0ooOO . setVisible ( False )
if 59 - 59: I1ii11iIi11i * OoOoOO00 / Ii1I
if 80 - 80: O00oOoOoO0o0O - Oo0ooO0oo0oO / OoOoOO00 / I11i * O0 + oO0o
i11 = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "currentsetting" ) + '[/COLOR]' )
Iii11iI1I . placeControl ( i11 , 285 , 87 , 10 , 30 )
i11 . setVisible ( False )
if 77 - 77: Oo0ooO0oo0oO + I1ii11iIi11i * o0oOOo0O0Ooo / i1IIi * I11i
global IiI1iiI11
IiI1iiI11 = pyxbmct . Label ( '[COLOR=darkgray]' + str ( iII1ii ) + '[/COLOR]' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( IiI1iiI11 , 304 , 107 )
IiI1iiI11 . setVisible ( False )
if 70 - 70: oO0o / iii1I1I * i1IIi / II111iiii / OoOoOO00 + oO0o
OOoOOOO00 = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "recommendedsettingcurl" ) + '[/COLOR]' )
Iii11iI1I . placeControl ( OOoOOOO00 , 285 , 123 , 10 , 35 )
OOoOOOO00 . setVisible ( False )
if 30 - 30: i1IIi - iii1I1I - i11iIiiIii . OoOoOO00 . o0oOOo0O0Ooo
if 74 - 74: i11iIiiIii / II111iiii
if 62 - 62: O0
if 63 - 63: Oo0Ooo + Oo0Ooo
if 48 - 48: Oo0Ooo * I1ii11iIi11i % II111iiii
if 42 - 42: O0oo0OO0 - Oo0ooO0oo0oO % o0oOOo0O0Ooo * I1IiiI . o0oOOo0O0Ooo
if 84 - 84: iIii1I11I1II1
if 39 - 39: Ii1I . II111iiii / I1IiiI
if 44 - 44: Ii1I / Ii1I / OoO0O00 % Oo0ooO0oo0oO / I11i . I1ii11iIi11i
if 41 - 41: I1ii11iIi11i * Oo0ooO0oo0oO * I11i + O0 * O0 - O0
if 81 - 81: O0oo0OO0 % OoO0O00 / O0
if 55 - 55: i1IIi - O0oo0OO0 + I11i
if 93 - 93: I1IiiI % O00oOoOoO0o0O . OoOoOO00 + iii1I1I
if 81 - 81: Oo0ooO0oo0oO / O0oo0OO0 + OOooOOo / Oo0Ooo / OoOoOO00
Ii1i111iI = 50
if 34 - 34: Oo0ooO0oo0oO * iIii1I11I1II1 % i11iIiiIii * OOooOOo - OOooOOo
if 63 - 63: Oo0Ooo / oO0o + iii1I1I % OoooooooOO * I11i
if 34 - 34: I1IiiI + O0oo0OO0 % Oo0ooO0oo0oO
global OoooooOo
OoooooOo = pyxbmct . Slider ( textureback = OOoO00 )
Iii11iI1I . placeControl ( OoooooOo , 360 , 90 , 25 , 60 )
OoooooOo . setPercent ( Ii1i111iI )
OoooooOo . setVisible ( False )
if 24 - 24: Ii1I % II111iiii - i11iIiiIii
Iii11iI1I . connectEventList ( [ pyxbmct . ACTION_MOVE_LEFT ,
 pyxbmct . ACTION_MOVE_RIGHT ,
 pyxbmct . ACTION_MOUSE_DRAG ,
 pyxbmct . ACTION_MOUSE_LEFT_CLICK ] ,
 OoOiII11IiIi )
if 52 - 52: OoO0O00
if 76 - 76: Oo0ooO0oo0oO - iii1I1I % Oo0ooO0oo0oO / oO0o . OOooOOo
if 50 - 50: O00oOoOoO0o0O . i11iIiiIii % I11i
if 22 - 22: i1IIi - II111iiii - OoOoOO00 . iii1I1I
if 43 - 43: O0oo0OO0 * OOooOOo - O00oOoOoO0o0O . i11iIiiIii
if 34 - 34: iii1I1I . OoOoOO00
if 49 - 49: I1ii11iIi11i % oO0o - O0oo0OO0 . I1ii11iIi11i % II111iiii
OooOo = pyxbmct . Label ( '[COLOR=lightgray]' + ooO ( "readbufferfactorlabel" ) + '[/COLOR]' , 'font14' )
Iii11iI1I . placeControl ( OooOo , 328 , 105 , 10 , 30 )
OooOo . setVisible ( False )
if 20 - 20: I1ii11iIi11i . iIii1I11I1II1 - Ii1I % OoO0O00
if 27 - 27: iIii1I11I1II1 / O0oo0OO0 - I11i . OoO0O00 + Oo0ooO0oo0oO
oOo0 = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "currentsetting" ) + '[/COLOR]' )
Iii11iI1I . placeControl ( oOo0 , 375 , 87 , 10 , 30 )
oOo0 . setVisible ( False )
if 89 - 89: I1IiiI % I11i - OOooOOo
global I1Ii11i
I1Ii11i = pyxbmct . Label ( '[COLOR=darkgray]' + str ( Ii1i111iI ) + '[/COLOR]' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( I1Ii11i , 394 , 107 )
I1Ii11i . setVisible ( False )
if 71 - 71: OOooOOo % Oo0Ooo - o0oOOo0O0Ooo / O0oo0OO0 - O0 - oO0o
I1iIiiiI1 = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "recommendedrbfsetting" ) + '[/COLOR]' )
Iii11iI1I . placeControl ( I1iIiiiI1 , 375 , 123 , 10 , 35 )
I1iIiiiI1 . setVisible ( False )
if 10 - 10: I1IiiI
if 17 - 17: i11iIiiIii % o0oOOo0O0Ooo . Oo0ooO0oo0oO
OoooooOo . setVisible ( False )
OooOo . setVisible ( False )
oOo0 . setVisible ( False )
I1Ii11i . setVisible ( False )
I1iIiiiI1 . setVisible ( False )
if 34 - 34: OoooooooOO / iii1I1I / O0
if 75 - 75: I11i % OOooOOo - OoO0O00 * I11i * O00oOoOoO0o0O
if 11 - 11: I1ii11iIi11i . O0 - iii1I1I * O00oOoOoO0o0O . i1IIi . iii1I1I
global oOOoo
oOOoo = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "speedtestprevlabel" ) + '[/COLOR]' )
Iii11iI1I . placeControl ( oOOoo , 360 , 108 , 10 , 34 )
oOOoo . setVisible ( False )
if 82 - 82: i1IIi * I11i * Ii1I - O00oOoOoO0o0O . i11iIiiIii
if 40 - 40: OOooOOo - OoooooooOO
if 36 - 36: i1IIi % OoOoOO00 - i1IIi
if 5 - 5: I1IiiI . I1IiiI % II111iiii - O0oo0OO0
if 97 - 97: I11i . Oo0ooO0oo0oO
if 87 - 87: oO0o / iIii1I11I1II1 - I11i + OoooooooOO
ooOOo0o = pyxbmct . Label ( '[COLOR=lightgray]' + ooO ( "buffermodelabel" ) + '[/COLOR]' , 'font14' )
Iii11iI1I . placeControl ( ooOOo0o , 418 , 108 , columnspan = 25 , rowspan = 30 )
ooOOo0o . setVisible ( False )
if 79 - 79: I1ii11iIi11i * O00oOoOoO0o0O . I1ii11iIi11i
if 65 - 65: iii1I1I - Ii1I - II111iiii * O0 + I1ii11iIi11i . iIii1I11I1II1
IiiiIi1iI1iI = pyxbmct . RadioButton ( '[COLOR=goldenrod]1[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( IiiiIi1iI1iI , 458 , 83 , columnspan = 13 , rowspan = 40 )
Iii11iI1I . connect ( IiiiIi1iI1iI , iiIiIo0Ooo0O00 )
IiiiIi1iI1iI . setVisible ( False )
if 76 - 76: OoO0O00 * Oo0ooO0oo0oO
if 32 - 32: O0 . oO0o * o0oOOo0O0Ooo . Ii1I + O00oOoOoO0o0O
OO00o = pyxbmct . RadioButton ( '[COLOR=goldenrod]2->(Recommended)[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( OO00o , 458 , 95 , columnspan = 35 , rowspan = 40 )
Iii11iI1I . connect ( OO00o , iIi1IIiI )
OO00o . setVisible ( False )
if 98 - 98: iii1I1I . II111iiii % O0
OOOOoOO0O = pyxbmct . RadioButton ( '[COLOR=goldenrod]3[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( OOOOoOO0O , 458 , 129 , columnspan = 13 , rowspan = 40 )
Iii11iI1I . connect ( OOOOoOO0O , Ii1iIi111i1i1 )
OOOOoOO0O . setVisible ( False )
if 43 - 43: OOooOOo % O0oo0OO0 . O00oOoOoO0o0O % OoO0O00 + O0oo0OO0 % OoooooooOO
ii11I = pyxbmct . RadioButton ( '[COLOR=goldenrod]4[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( ii11I , 458 , 141 , columnspan = 13 , rowspan = 40 )
Iii11iI1I . connect ( ii11I , i1iIIIiiiI )
ii11I . setVisible ( False )
if 17 - 17: OoooooooOO - i1IIi * I11i
if 33 - 33: i1IIi . Oo0Ooo + I11i
if 97 - 97: OOooOOo / O00oOoOoO0o0O / Oo0ooO0oo0oO / OoooooooOO
if 78 - 78: O0oo0OO0 + O0oo0OO0
o0OO0O00o = pyxbmct . RadioButton ( '[COLOR=goldenrod]' + ooO ( "automaintenanceradio" ) + '[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( o0OO0O00o , 410 , 6 , columnspan = 78 , rowspan = 43 )
Iii11iI1I . connect ( o0OO0O00o , OOoO00ooO )
o0OO0O00o . setVisible ( False )
if 43 - 43: O0oo0OO0 * o0oOOo0O0Ooo + i1IIi
if 19 - 19: Ii1I
i1II1iii1i = pyxbmct . RadioButton ( '[COLOR=goldenrod]' + ooO ( "automaintenancefreqeverytime" ) + '[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( i1II1iii1i , 505 , 6 , columnspan = 22 , rowspan = 43 )
Iii11iI1I . connect ( i1II1iii1i , oOO )
i1II1iii1i . setVisible ( False )
i1II1iii1i . setEnabled ( False )
if 51 - 51: oO0o
if 57 - 57: i11iIiiIii - Oo0Ooo + O0oo0OO0 * OoO0O00
iiI1I1IIi11i1 = pyxbmct . RadioButton ( '[COLOR=goldenrod]Daily[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( iiI1I1IIi11i1 , 505 , 27 , columnspan = 18 , rowspan = 43 )
Iii11iI1I . connect ( iiI1I1IIi11i1 , IiIiiI11i1Ii )
iiI1I1IIi11i1 . setVisible ( False )
iiI1I1IIi11i1 . setEnabled ( False )
if 35 - 35: o0oOOo0O0Ooo % II111iiii + O0
if 70 - 70: I1ii11iIi11i . II111iiii
i1I = pyxbmct . RadioButton ( '[COLOR=goldenrod]Weekly[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( i1I , 505 , 45 , columnspan = 19 , rowspan = 43 )
Iii11iI1I . connect ( i1I , I1i1I )
i1I . setVisible ( False )
i1I . setEnabled ( False )
if 54 - 54: OOooOOo
if 67 - 67: I1IiiI . o0oOOo0O0Ooo / i1IIi * I1ii11iIi11i . Oo0Ooo + II111iiii
III1ii = pyxbmct . RadioButton ( '[COLOR=goldenrod]Monthly[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( III1ii , 505 , 64 , columnspan = 18 , rowspan = 43 )
Iii11iI1I . connect ( III1ii , OO0oOOo0o )
III1ii . setVisible ( False )
III1ii . setEnabled ( False )
if 63 - 63: OoOoOO00 - OoOoOO00
if 31 - 31: I1ii11iIi11i % O0 - i11iIiiIii * o0oOOo0O0Ooo . Oo0ooO0oo0oO * Oo0ooO0oo0oO
if 18 - 18: OoO0O00 - OoO0O00 . o0oOOo0O0Ooo
if 80 - 80: I11i + O0oo0OO0 / I1IiiI * OOooOOo % iii1I1I
if 48 - 48: iIii1I11I1II1 + i1IIi . I1IiiI % OoO0O00 - iIii1I11I1II1 / i1IIi
if 14 - 14: O00oOoOoO0o0O . I11i
if 13 - 13: OoOoOO00 - I11i . OOooOOo % OoO0O00
if 79 - 79: iii1I1I / Ii1I % i11iIiiIii . I1IiiI % OoO0O00 / i11iIiiIii
iI1 = pyxbmct . RadioButton ( '[COLOR=goldenrod]' + ooO ( "fullautomaintenanceradio" ) + '[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( iI1 , 410 , 90 , columnspan = 78 , rowspan = 43 )
Iii11iI1I . connect ( iI1 , oo0ooooO )
iI1 . setVisible ( False )
if 100 - 100: OOooOOo + Oo0Ooo . iIii1I11I1II1 . Oo0ooO0oo0oO * Oo0Ooo
if 16 - 16: Oo0Ooo % OoOoOO00 + O0oo0OO0 % O0oo0OO0
if 12 - 12: O0oo0OO0 . Ii1I / iIii1I11I1II1 + i1IIi
IIii1I1I1I = pyxbmct . RadioButton ( '[COLOR=goldenrod]Cache[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( IIii1I1I1I , 475 , 90 , columnspan = 26 , rowspan = 43 )
Iii11iI1I . connect ( IIii1I1I1I , o0oO0Oo )
IIii1I1I1I . setVisible ( False )
IIii1I1I1I . setEnabled ( False )
if 9 - 9: iIii1I11I1II1
o00IIIIII1II1I = pyxbmct . RadioButton ( '[COLOR=goldenrod]Packages[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( o00IIIIII1II1I , 475 , 115 , columnspan = 27 , rowspan = 43 )
Iii11iI1I . connect ( o00IIIIII1II1I , o0O0oo0o )
o00IIIIII1II1I . setVisible ( False )
o00IIIIII1II1I . setEnabled ( False )
if 75 - 75: I11i . II111iiii * I1IiiI * O00oOoOoO0o0O
ooo00OOOo000O = pyxbmct . RadioButton ( '[COLOR=goldenrod]Thumbnails[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( ooo00OOOo000O , 475 , 141 , columnspan = 26 , rowspan = 43 )
Iii11iI1I . connect ( ooo00OOOo000O , Ii111IIi )
ooo00OOOo000O . setVisible ( False )
ooo00OOOo000O . setEnabled ( False )
if 36 - 36: OOooOOo / I1ii11iIi11i / oO0o / Oo0ooO0oo0oO / I11i
if 7 - 7: OoO0O00 - I11i - o0oOOo0O0Ooo / o0oOOo0O0Ooo + i11iIiiIii
if 28 - 28: OoOoOO00 % Oo0ooO0oo0oO . I1IiiI + II111iiii
if 34 - 34: iIii1I11I1II1
if 65 - 65: II111iiii - iii1I1I / o0oOOo0O0Ooo
if 35 - 35: i11iIiiIii - Oo0Ooo . I1ii11iIi11i % OoOoOO00
if 20 - 20: OoO0O00
iII = pyxbmct . RadioButton ( '[COLOR=goldenrod]Week[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( iII , 537 , 90 , columnspan = 26 , rowspan = 43 )
Iii11iI1I . connect ( iII , Ii1Iii11 )
iII . setVisible ( False )
iII . setEnabled ( False )
if 93 - 93: Oo0ooO0oo0oO + o0oOOo0O0Ooo - I1ii11iIi11i
OoOOOo0 = pyxbmct . RadioButton ( '[COLOR=goldenrod]Month[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( OoOOOo0 , 537 , 115 , columnspan = 27 , rowspan = 43 )
Iii11iI1I . connect ( OoOOOo0 , oO0O )
OoOOOo0 . setVisible ( False )
OoOOOo0 . setEnabled ( False )
if 56 - 56: Ii1I / Oo0Ooo
oOoOo0OOOOO = pyxbmct . RadioButton ( '[COLOR=goldenrod]Quarter[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( oOoOo0OOOOO , 537 , 141 , columnspan = 26 , rowspan = 43 )
Iii11iI1I . connect ( oOoOo0OOOOO , I11i11i1 )
oOoOo0OOOOO . setVisible ( False )
oOoOo0OOOOO . setEnabled ( False )
if 96 - 96: o0oOOo0O0Ooo . II111iiii
if 14 - 14: OoooooooOO - i1IIi / i11iIiiIii - OOooOOo - i11iIiiIii . Oo0ooO0oo0oO
if 8 - 8: oO0o * O0 - II111iiii + I1IiiI
if 85 - 85: OoooooooOO % i11iIiiIii / O00oOoOoO0o0O % OoOoOO00 + O0
if 6 - 6: OoooooooOO
IIi1II = pyxbmct . RadioButton ( '[COLOR=goldenrod]Genesis[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( IIi1II , 215 , 122 , columnspan = 23 , rowspan = 40 )
Iii11iI1I . connect ( IIi1II , O0OoOo )
IIi1II . setVisible ( False )
if 97 - 97: II111iiii + o0oOOo0O0Ooo * II111iiii
OOo0iiIii1IIi = pyxbmct . RadioButton ( '[COLOR=goldenrod]Navi-X[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( OOo0iiIii1IIi , 215 , 144 , columnspan = 23 , rowspan = 40 )
Iii11iI1I . connect ( OOo0iiIii1IIi , I1I111IIIi1 )
OOo0iiIii1IIi . setVisible ( False )
if 17 - 17: o0oOOo0O0Ooo / Oo0ooO0oo0oO + i1IIi
if 78 - 78: iIii1I11I1II1 * o0oOOo0O0Ooo * Oo0Ooo - OoO0O00 / OoO0O00
if 89 - 89: o0oOOo0O0Ooo % o0oOOo0O0Ooo
if 8 - 8: Ii1I % oO0o - o0oOOo0O0Ooo
if 14 - 14: OOooOOo * O00oOoOoO0o0O
if 15 - 15: o0oOOo0O0Ooo + OoooooooOO - OOooOOo - o0oOOo0O0Ooo . iIii1I11I1II1 / Ii1I
i111IIIiI = pyxbmct . RadioButton ( '[COLOR=goldenrod]Youtube[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( i111IIIiI , 251 , 122 , columnspan = 23 , rowspan = 40 )
Iii11iI1I . connect ( i111IIIiI , IIIII11Ii )
i111IIIiI . setVisible ( False )
if 33 - 33: OoO0O00
I1Ii1 = pyxbmct . RadioButton ( '[COLOR=goldenrod]iVue[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( I1Ii1 , 251 , 144 , columnspan = 23 , rowspan = 40 )
Iii11iI1I . connect ( I1Ii1 , OO0OOOOOo )
I1Ii1 . setVisible ( False )
if 91 - 91: I11i % I11i % iii1I1I
if 19 - 19: I11i / I11i + I1IiiI * OoO0O00 - iii1I1I . Oo0Ooo
oOOo00O0OOOo = pyxbmct . RadioButton ( '[COLOR=goldenrod]' + ooO ( "salts" ) + '[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( oOOo00O0OOOo , 287 , 122 , columnspan = 23 , rowspan = 40 )
Iii11iI1I . connect ( oOOo00O0OOOo , iIo00oo )
oOOo00O0OOOo . setVisible ( False )
if 76 - 76: iii1I1I % OOooOOo / OoooooooOO . I1IiiI % OoO0O00 % i1IIi
if 95 - 95: Oo0Ooo - O0 / I1ii11iIi11i . I1IiiI / o0oOOo0O0Ooo % OoOoOO00
IiI = pyxbmct . RadioButton ( '[COLOR=goldenrod]Pulsar[/COLOR]' , noFocusTexture = i1Iii1i1I , _alignment = 6 )
Iii11iI1I . placeControl ( IiI , 287 , 144 , columnspan = 23 , rowspan = 40 )
Iii11iI1I . connect ( IiI , oOOooI1I1i11 )
IiI . setVisible ( False )
if 38 - 38: OoOoOO00 % OoooooooOO . oO0o - OoooooooOO + I11i
if 18 - 18: OoooooooOO + Oo0ooO0oo0oO * OoOoOO00 - OoO0O00
if 42 - 42: oO0o % OoOoOO00 - oO0o + I11i / i11iIiiIii
if 74 - 74: OoO0O00 - II111iiii - Oo0ooO0oo0oO % i1IIi
if 42 - 42: i11iIiiIii / O0
if 8 - 8: O0oo0OO0
if 51 - 51: i11iIiiIii
if 1 - 1: iIii1I11I1II1 . i1IIi . i11iIiiIii % I1ii11iIi11i
if 58 - 58: i11iIiiIii * i11iIiiIii - OoO0O00
oooo00oO0O = pyxbmct . Button ( '[COLOR=goldenrod]' + ooO ( "browsebuildsbutton" ) + '[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( oooo00oO0O , 30 , 2 , columnspan = 25 , rowspan = 50 )
Iii11iI1I . connect ( oooo00oO0O , lambda :
 oo0oO0O0o ( ) )
if 8 - 8: i11iIiiIii * OoOoOO00 . o0oOOo0O0Ooo
if 27 - 27: I1ii11iIi11i + Ii1I % O0oo0OO0
if 20 - 20: Oo0Ooo
if 33 - 33: oO0o - OoOoOO00 - i11iIiiIii + O0oo0OO0 + iIii1I11I1II1
if 2 - 2: OoooooooOO + O00oOoOoO0o0O / iii1I1I . iIii1I11I1II1 * OoOoOO00
if 84 - 84: OOooOOo
ii1O0oOOo = pyxbmct . Button ( '[COLOR=goldenrod]' + ooO ( "browseaddonsbutton" ) + '[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( ii1O0oOOo , 30 , 26 , columnspan = 25 , rowspan = 50 )
Iii11iI1I . connect ( ii1O0oOOo , lambda :
 ooO0ooO00o ( ) )
if 68 - 68: O0oo0OO0
if 92 - 92: oO0o * Ii1I / OoO0O00 % II111iiii
if 54 - 54: oO0o + I11i - OoO0O00
iiIiIi1I1 = pyxbmct . Button ( '[COLOR=goldenrod]Maintenance[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( iiIiIi1I1 , 30 , 50 , columnspan = 25 , rowspan = 50 )
Iii11iI1I . connect ( iiIiIi1I1 , lambda :
 OOOooOO00O ( ) )
if 86 - 86: OoooooooOO
if 51 - 51: i11iIiiIii
iiIIii1iIiIi = pyxbmct . Button ( '[COLOR=goldenrod]Backup[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( iiIIii1iIiIi , 30 , 74 , columnspan = 25 , rowspan = 50 )
Iii11iI1I . connect ( iiIIii1iIiIi , lambda :
 oo0oI1IIii ( ) )
if 91 - 91: OOooOOo
if 22 - 22: OoooooooOO + OoOoOO00 - Ii1I . iii1I1I / OoooooooOO / I1IiiI
if 73 - 73: i1IIi - Ii1I + oO0o * iIii1I11I1II1
Oo0OOo = pyxbmct . Button ( '[COLOR=goldenrod]Tweaks[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( Oo0OOo , 30 , 98 , columnspan = 25 , rowspan = 50 )
Iii11iI1I . connect ( Oo0OOo , lambda :
 II1I1ii1i1iiI ( ) )
if 100 - 100: i11iIiiIii / iIii1I11I1II1 + Oo0Ooo + OoO0O00 - iii1I1I
ii11I1IIII11 = pyxbmct . Button ( '[COLOR=goldenrod]More[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( ii11I1IIII11 , 30 , 122 , columnspan = 25 , rowspan = 50 )
Iii11iI1I . connect ( ii11I1IIII11 , lambda :
 O0OO ( ) )
if 8 - 8: i11iIiiIii . O0 + o0oOOo0O0Ooo * oO0o + II111iiii
iiI1II11I1iI = pyxbmct . Button ( '[COLOR=goldenrod]Settings[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( iiI1II11I1iI , 30 , 146 , columnspan = 25 , rowspan = 50 )
Iii11iI1I . connect ( iiI1II11I1iI , lambda :
 xbmcaddon . Addon ( ) . openSettings ( ) )
if 61 - 61: Oo0ooO0oo0oO / Oo0ooO0oo0oO
if 51 - 51: iIii1I11I1II1 / oO0o * O0oo0OO0 + i1IIi
if 96 - 96: Oo0Ooo + oO0o - Oo0Ooo - OoOoOO00 % OOooOOo . iIii1I11I1II1
if 93 - 93: iIii1I11I1II1 % OoooooooOO
if 6 - 6: II111iiii / oO0o - OOooOOo . O0 - o0oOOo0O0Ooo
if 72 - 72: iIii1I11I1II1 / OoooooooOO * Oo0ooO0oo0oO / Oo0ooO0oo0oO % O0 + O00oOoOoO0o0O
if 96 - 96: iii1I1I / i11iIiiIii + Oo0Ooo . I1IiiI + iii1I1I % OoOoOO00
if 19 - 19: i11iIiiIii . Oo0Ooo . OoOoOO00 - I1IiiI
if 85 - 85: I11i - OoO0O00 % iIii1I11I1II1 . iii1I1I + Oo0ooO0oo0oO . Oo0Ooo
if 87 - 87: iii1I1I
if 86 - 86: O00oOoOoO0o0O - I11i
if 99 - 99: i1IIi + I1ii11iIi11i
if 24 - 24: Oo0ooO0oo0oO / OoooooooOO % I1ii11iIi11i * Oo0ooO0oo0oO
if 14 - 14: I1ii11iIi11i + OoO0O00 - I1IiiI - Oo0Ooo
ooooo0O0 = pyxbmct . Button ( '[COLOR=goldenrod]Fresh Start[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( ooooo0O0 , 120 , 71 , columnspan = 24 , rowspan = 50 )
ooooo0O0 . setVisible ( False )
Iii11iI1I . connect ( ooooo0O0 , lambda : O0o00O00oo0oO ( ) )
if 44 - 44: II111iiii / I1ii11iIi11i
if 39 - 39: OoooooooOO % OoO0O00
if 83 - 83: OOooOOo % I1IiiI + O0 % OoooooooOO
if 84 - 84: I11i - Oo0Ooo % Oo0ooO0oo0oO - II111iiii
if 29 - 29: O00oOoOoO0o0O
if 4 - 4: II111iiii * o0oOOo0O0Ooo - O00oOoOoO0o0O * iii1I1I
i1III1iI = pyxbmct . Button ( '[COLOR=goldenrod]Install[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( i1III1iI , 180 , 71 , columnspan = 24 , rowspan = 50 )
i1III1iI . setVisible ( False )
Iii11iI1I . connect ( i1III1iI , lambda : I11I111Ii1II ( ) )
if 91 - 91: O0oo0OO0 * iii1I1I * OoO0O00
if 79 - 79: iii1I1I + oO0o
if 19 - 19: O0oo0OO0 - OOooOOo . Oo0ooO0oo0oO . O0 + II111iiii . OoooooooOO
ooOo000OoO0o = pyxbmct . Button ( '[COLOR=goldenrod]Repair[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( ooOo000OoO0o , 240 , 71 , columnspan = 24 , rowspan = 50 )
ooOo000OoO0o . setVisible ( False )
Iii11iI1I . connect ( ooOo000OoO0o , lambda : OoOi111i ( ) )
if 97 - 97: O0 / OoOoOO00 / Oo0ooO0oo0oO
if 11 - 11: II111iiii . i11iIiiIii - Ii1I . O00oOoOoO0o0O
if 10 - 10: OOooOOo * OoooooooOO
if 12 - 12: II111iiii - O0 . i1IIi % oO0o % OoooooooOO
O0Oo0 = pyxbmct . Button ( '[COLOR=goldenrod]Install[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( O0Oo0 , 120 , 71 , columnspan = 24 , rowspan = 50 )
O0Oo0 . setVisible ( False )
Iii11iI1I . connect ( O0Oo0 , lambda : OOOO0OOo0oOoo ( ) )
if 36 - 36: O00oOoOoO0o0O * OoOoOO00 - iIii1I11I1II1 + II111iiii
if 65 - 65: I1IiiI * I11i . O0oo0OO0 % I1ii11iIi11i + O0
if 91 - 91: OoooooooOO % O0oo0OO0 * OoO0O00 - OoOoOO00
if 5 - 5: iIii1I11I1II1 * I11i - oO0o % oO0o % o0oOOo0O0Ooo . i1IIi
iIIIi1IiI11I1 = pyxbmct . Button ( '[COLOR=goldenrod]Rate[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( iIIIi1IiI11I1 , 180 , 71 , columnspan = 24 , rowspan = 50 )
iIIIi1IiI11I1 . setVisible ( False )
Iii11iI1I . connect ( iIIIi1IiI11I1 , lambda : I1iI1I1IIiI1i1 ( o00O0 , I1 , OOO00O , oOooOOOoOo ) )
if 95 - 95: Oo0Ooo * I1ii11iIi11i + iii1I1I - o0oOOo0O0Ooo - Oo0Ooo . OoO0O00
if 62 - 62: I11i
if 58 - 58: I11i . OoOoOO00 + iii1I1I . iii1I1I
if 43 - 43: O0oo0OO0 + O0oo0OO0 % Oo0Ooo % OoO0O00 - Oo0ooO0oo0oO
O0OOO00 = pyxbmct . Button ( '[COLOR=goldenrod]Rate[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( O0OOO00 , 180 , 71 , columnspan = 24 , rowspan = 50 )
O0OOO00 . setVisible ( False )
Iii11iI1I . connect ( O0OOO00 , lambda : IIii11iiiIIii ( o00O0 , I1 , OOO00O , oOooOOOoOo ) )
if 61 - 61: OoOoOO00 + Ii1I % i11iIiiIii - I1IiiI * OoO0O00 % iIii1I11I1II1
IiII1i1iI = pyxbmct . Button ( '[COLOR=goldenrod]Rate[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( IiII1i1iI , 300 , 71 , columnspan = 24 , rowspan = 50 )
IiII1i1iI . setVisible ( False )
Iii11iI1I . connect ( IiII1i1iI , lambda : o0o0oo0O00o ( o00O0 , I1II1 , OOO00O , oOooOOOoOo ) )
if 66 - 66: iii1I1I + i1IIi
if 24 - 24: O0 / OoooooooOO - OoOoOO00
if 51 - 51: OoO0O00 + o0oOOo0O0Ooo - II111iiii * I11i + Ii1I
if 16 - 16: O0oo0OO0 * i1IIi . I1IiiI . OOooOOo % Ii1I - o0oOOo0O0Ooo
oooOoO = pyxbmct . Button ( '[COLOR=goldenrod]Uninstall[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( oooOoO , 240 , 71 , columnspan = 24 , rowspan = 50 )
oooOoO . setVisible ( False )
Iii11iI1I . connect ( oooOoO , lambda : i1i1i1II111I ( ) )
if 89 - 89: Ii1I * I1ii11iIi11i * I1IiiI % iii1I1I % Ii1I + O0
if 53 - 53: i11iIiiIii % I1ii11iIi11i
if 59 - 59: OOooOOo
if 61 - 61: OoooooooOO + O0 - i1IIi % oO0o / I1ii11iIi11i
global I1II
I1II = pyxbmct . Button ( '[COLOR=goldenrod]Add[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( I1II , 300 , 71 , columnspan = 24 , rowspan = 50 )
I1II . setVisible ( False )
Iii11iI1I . connect ( I1II , lambda :
 ii11i ( 'add' , o00O0 , oOooOOOoOo , OOO00O ) )
if 50 - 50: oO0o + II111iiii * OoOoOO00 % OoO0O00 . II111iiii % o0oOOo0O0Ooo
if 32 - 32: i1IIi / Ii1I + i11iIiiIii % oO0o
global iIIi1Ii1III
iIIi1Ii1III = pyxbmct . Button ( '[COLOR=goldenrod]Update[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( iIIi1Ii1III , 360 , 71 , columnspan = 24 , rowspan = 50 )
iIIi1Ii1III . setVisible ( False )
Iii11iI1I . connect ( iIIi1Ii1III , lambda :
 ii11i ( 'update' , o00O0 , oOooOOOoOo , OOO00O ) )
if 11 - 11: Ii1I - Oo0ooO0oo0oO % i11iIiiIii / OoooooooOO - O0 - O00oOoOoO0o0O
if 25 - 25: O00oOoOoO0o0O + O0 + oO0o % iIii1I11I1II1 - II111iiii . I1IiiI
if 62 - 62: O00oOoOoO0o0O . O0 + oO0o - Oo0ooO0oo0oO * iIii1I11I1II1
if 8 - 8: I1ii11iIi11i
if 65 - 65: i11iIiiIii
if 92 - 92: oO0o * II111iiii + O0oo0OO0
if 49 - 49: II111iiii * I1IiiI * O0 / Oo0ooO0oo0oO * O00oOoOoO0o0O
if 94 - 94: OoO0O00 - I1IiiI * oO0o
if 35 - 35: OOooOOo / i1IIi + OoO0O00
if 31 - 31: OoO0O00 . i1IIi / OoooooooOO
if 81 - 81: Oo0ooO0oo0oO . Oo0Ooo . OoOoOO00 + OOooOOo % iii1I1I - oO0o
if 68 - 68: iii1I1I - O0 / Ii1I
if 15 - 15: O0oo0OO0 / I1ii11iIi11i / I1IiiI % i11iIiiIii + II111iiii . Oo0ooO0oo0oO
global iiIIiI11II1
iiIIiI11II1 = pyxbmct . Button ( '[COLOR=goldenrod]' + ooO ( "deletethumbnailsbutton" ) + '[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( iiIIiI11II1 , 335 , 10 , columnspan = 30 , rowspan = 50 )
iiIIiI11II1 . setVisible ( False )
Iii11iI1I . connect ( iiIIiI11II1 , lambda : iii1iIiiI1 ( ) )
if 74 - 74: o0oOOo0O0Ooo
if 4 - 4: I1ii11iIi11i * II111iiii - Oo0Ooo % i1IIi % O0 * i11iIiiIii
global IiIi1Ii
IiIi1Ii = pyxbmct . Button ( '[COLOR=goldenrod]' + ooO ( "deletepackagesbutton" ) + '[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( IiIi1Ii , 335 , 51 , columnspan = 30 , rowspan = 50 )
IiIi1Ii . setVisible ( False )
Iii11iI1I . connect ( IiIi1Ii , lambda : i1ii1111II1 ( ) )
if 62 - 62: OoO0O00 * O0oo0OO0 * Ii1I / Oo0ooO0oo0oO
if 27 - 27: oO0o . iii1I1I . oO0o
global OooooOo
OooooOo = pyxbmct . Button ( '[COLOR=goldenrod]' + ooO ( "deletecachebutton" ) + '[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( OooooOo , 335 , 92 , columnspan = 30 , rowspan = 50 )
OooooOo . setVisible ( False )
Iii11iI1I . connect ( OooooOo , lambda : i11i1i1i1I ( ) )
if 37 - 37: Oo0Ooo . I1ii11iIi11i / OoooooooOO % Oo0ooO0oo0oO / I1IiiI + Oo0ooO0oo0oO
if 14 - 14: I11i + Oo0ooO0oo0oO . oO0o * I11i
if 98 - 98: Ii1I . i1IIi * OoO0O00 * Ii1I * iIii1I11I1II1
global I1ii1Ii1OoO
I1ii1Ii1OoO = pyxbmct . Button ( '[COLOR=goldenrod]Next[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( I1ii1Ii1OoO , 510 , 108 , columnspan = 30 , rowspan = 50 )
I1ii1Ii1OoO . setVisible ( False )
Iii11iI1I . connect ( I1ii1Ii1OoO , lambda :
 I11I1 ( ) )
if 22 - 22: OoooooooOO - OoO0O00 + OoOoOO00 - OOooOOo + i11iIiiIii - oO0o
if 9 - 9: O0oo0OO0 - i1IIi . Oo0ooO0oo0oO
if 33 - 33: I11i
global oO
oO = pyxbmct . Button ( '[COLOR=goldenrod]' + ooO ( "tweakcache_page2button" ) + '[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( oO , 510 , 105 , columnspan = 35 , rowspan = 50 )
oO . setVisible ( False )
Iii11iI1I . connect ( oO , lambda :
 o00i1ii11IiiiIiI ( ) )
if 37 - 37: Oo0Ooo
if 36 - 36: O00oOoOoO0o0O % I11i
global iI111I1III
iI111I1III = pyxbmct . Button ( '[COLOR=goldenrod]' + ooO ( "applycachetweakbutton" ) + '[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( iI111I1III , 510 , 103 , columnspan = 35 , rowspan = 50 )
iI111I1III . setVisible ( False )
Iii11iI1I . connect ( iI111I1III , lambda :
 O00iIi ( i1I1IiiIi1i , iiI11ii1I1 , Ooo0OOoOoO0 , II1i11I ) )
if 72 - 72: oO0o % I11i % OOooOOo * iIii1I11I1II1 - OOooOOo % O0
if 84 - 84: oO0o - o0oOOo0O0Ooo / II111iiii . o0oOOo0O0Ooo
if 82 - 82: OoooooooOO
if 14 - 14: OoO0O00 / oO0o - OOooOOo
if 100 - 100: O00oOoOoO0o0O - I11i . iIii1I11I1II1 / iIii1I11I1II1
global ii1iI11
ii1iI11 = pyxbmct . Button ( '[COLOR=goldenrod]Login[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( ii1iI11 , - 30 , 2 , columnspan = 25 , rowspan = 50 )
ii1iI11 . setVisible ( False )
Iii11iI1I . connect ( ii1iI11 , lambda : ooOI1ii ( ) )
ii1iI11 . setVisible ( False )
if 16 - 16: O00oOoOoO0o0O + Oo0Ooo % I11i
if 16 - 16: Oo0ooO0oo0oO / O0oo0OO0
global O0OoO
O0OoO = pyxbmct . Button ( '[COLOR=goldenrod]Activate[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( O0OoO , - 30 , 2 , columnspan = 25 , rowspan = 50 )
O0OoO . setVisible ( False )
Iii11iI1I . connect ( O0OoO , lambda : Iii1 ( ) )
O0OoO . setVisible ( False )
if 78 - 78: OoOoOO00 - II111iiii - OOooOOo + I1IiiI + O0 / I1IiiI
if 59 - 59: OOooOOo . I1IiiI / i1IIi / II111iiii . II111iiii
if 54 - 54: iIii1I11I1II1 % Oo0ooO0oo0oO
global iIIi1IIIi111I
iIIi1IIIi111I = pyxbmct . Button ( '[COLOR=goldenrod]Logout[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( iIIi1IIIi111I , - 30 , 2 , columnspan = 25 , rowspan = 50 )
iIIi1IIIi111I . setVisible ( False )
Iii11iI1I . connect ( iIIi1IIIi111I , lambda : IiI1oo ( ) )
iIIi1IIIi111I . setVisible ( False )
if 37 - 37: OOooOOo % OoOoOO00 - II111iiii * o0oOOo0O0Ooo . I1IiiI . OoOoOO00
if 92 - 92: I11i + OoO0O00 . OoooooooOO
global iii111iI
iii111iI = pyxbmct . Button ( '[COLOR=goldenrod]Close[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( iii111iI , - 30 , 146 , columnspan = 25 , rowspan = 50 )
iii111iI . setVisible ( True )
Iii11iI1I . connect ( iii111iI , lambda : OOoO0O0O0ooo ( ) )
iii111iI . setVisible ( True )
if 3 - 3: OoO0O00 % iIii1I11I1II1
if 62 - 62: OoooooooOO * o0oOOo0O0Ooo
if 59 - 59: iIii1I11I1II1
if 18 - 18: Oo0ooO0oo0oO % I1IiiI / iIii1I11I1II1 + O0
global I11i1I1ii1i1
I11i1I1ii1i1 = pyxbmct . Button ( '[COLOR=goldenrod]' + ooO ( "unblockurlbutton" ) + '[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( I11i1I1ii1i1 , 390 , 108 , columnspan = 30 , rowspan = 50 )
I11i1I1ii1i1 . setVisible ( False )
Iii11iI1I . connect ( I11i1I1ii1i1 , lambda : ooIiiI1i1 ( ) )
if 99 - 99: i11iIiiIii - o0oOOo0O0Ooo + o0oOOo0O0Ooo . OoooooooOO * iii1I1I . Oo0Ooo
if 63 - 63: I11i
if 60 - 60: I1IiiI / I1ii11iIi11i / I11i / Ii1I + iIii1I11I1II1
if 85 - 85: O0 / OOooOOo . OoOoOO00 / I1ii11iIi11i
global OOOOOo
OOOOOo = pyxbmct . Button ( '[COLOR=goldenrod]Start Test[/COLOR]' , focusTexture = II1I , noFocusTexture = ooOOoooooo )
Iii11iI1I . placeControl ( OOOOOo , 302 , 108 , columnspan = 24 , rowspan = 50 )
OOOOOo . setVisible ( False )
Iii11iI1I . connect ( OOOOOo , lambda : IiiiIiII11 ( ) )
if 80 - 80: I1ii11iIi11i * iii1I1I % i1IIi * OOooOOo % II111iiii % i1IIi
if 44 - 44: OoooooooOO
if 18 - 18: i11iIiiIii
if 65 - 65: i1IIi . iIii1I11I1II1 % iIii1I11I1II1
if 35 - 35: iIii1I11I1II1 - o0oOOo0O0Ooo + I1ii11iIi11i * iii1I1I - OOooOOo . o0oOOo0O0Ooo
if 12 - 12: iIii1I11I1II1 % OoO0O00 * Oo0Ooo
if 5 - 5: I11i - II111iiii * iIii1I11I1II1 / iIii1I11I1II1 % O00oOoOoO0o0O * i1IIi
if 30 - 30: i1IIi % I1IiiI . OOooOOo % iIii1I11I1II1 . I1ii11iIi11i / o0oOOo0O0Ooo
i1I11ii = pyxbmct . List ( 'font14' , '' , buttonTexture = i1Iii1i1I , _space = 5 , _itemHeight = 35 , _alignmentY = 6 )
Iii11iI1I . placeControl ( i1I11ii , 110 , 3 , 500 , 65 )
i1I11ii . setVisible ( False )
Iii11iI1I . connect ( i1I11ii , lambda : o0OoO0 ( ) )
if 53 - 53: OOooOOo % Oo0ooO0oo0oO
if 94 - 94: OOooOOo - O0 - O0oo0OO0 / OoooooooOO - iii1I1I
if 83 - 83: OOooOOo * I1ii11iIi11i * iii1I1I * I1ii11iIi11i . OoO0O00
ii111 = pyxbmct . List ( 'font14' , '' , buttonTexture = i1Iii1i1I , _space = 5 , _itemHeight = 35 , _alignmentY = 6 )
Iii11iI1I . placeControl ( ii111 , 110 , 3 , 500 , 65 )
ii111 . setVisible ( False )
Iii11iI1I . connect ( ii111 , lambda : i1111 ( ) )
if 87 - 87: Oo0ooO0oo0oO . O0 - oO0o
if 75 - 75: Oo0Ooo
if 22 - 22: oO0o * O0oo0OO0 . II111iiii / Ii1I * O0
O0o0O = pyxbmct . List ( 'font14' , '' , buttonTexture = i1Iii1i1I , _space = 5 , _itemHeight = 35 , _alignmentY = 6 )
Iii11iI1I . placeControl ( O0o0O , 110 , 3 , 500 , 65 )
O0o0O . setVisible ( False )
Iii11iI1I . connect ( O0o0O , lambda : OO00oO ( ) )
if 33 - 33: oO0o * i1IIi + Oo0ooO0oo0oO * OOooOOo - O0 - iIii1I11I1II1
if 35 - 35: O0oo0OO0
o0ooO00O0O = pyxbmct . List ( 'font14' , '' , buttonTexture = i1Iii1i1I , _space = 5 , _itemHeight = 35 , _alignmentY = 6 )
Iii11iI1I . placeControl ( o0ooO00O0O , 110 , 3 , 500 , 65 )
o0ooO00O0O . setVisible ( False )
Iii11iI1I . connect ( o0ooO00O0O , lambda : Iii11iI1I . setFocus ( O0Oo0 ) )
if 12 - 12: Ii1I % I1IiiI - I11i / iIii1I11I1II1 . I1IiiI % I1ii11iIi11i
if 12 - 12: Oo0Ooo + I1IiiI
OOOOO0o0OOo = pyxbmct . List ( 'font14' , '' , buttonTexture = i1Iii1i1I , _space = 5 , _itemHeight = 35 , _alignmentY = 6 )
Iii11iI1I . placeControl ( OOOOO0o0OOo , 110 , 3 , 500 , 65 )
OOOOO0o0OOo . setVisible ( False )
Iii11iI1I . connect ( OOOOO0o0OOo , lambda : Ii111 ( ) )
if 12 - 12: OoOoOO00 / II111iiii
if 100 - 100: I1ii11iIi11i % iIii1I11I1II1 . O00oOoOoO0o0O . OoooooooOO / II111iiii
I11I11I11IiIi = pyxbmct . List ( 'font14' , '' , buttonTexture = i1Iii1i1I , _space = 5 , _itemHeight = 35 , _alignmentY = 6 )
Iii11iI1I . placeControl ( I11I11I11IiIi , 110 , 3 , 500 , 65 )
I11I11I11IiIi . setVisible ( False )
Iii11iI1I . connect ( I11I11I11IiIi , lambda : Iii11iI1I . setFocus ( O0Oo0 ) )
if 28 - 28: I1IiiI
if 27 - 27: I1IiiI % oO0o - iIii1I11I1II1 - o0oOOo0O0Ooo - O00oOoOoO0o0O - O0
if 46 - 46: II111iiii
if 24 - 24: i11iIiiIii * i1IIi - I11i + o0oOOo0O0Ooo
i1111iI1 = pyxbmct . List ( 'font14' , '' , buttonTexture = i1Iii1i1I , _space = 5 , _itemHeight = 35 , _alignmentY = 6 )
Iii11iI1I . placeControl ( i1111iI1 , 110 , 3 , 500 , 65 )
i1111iI1 . setVisible ( False )
Iii11iI1I . connect ( i1111iI1 , lambda : oOOO ( ) )
if 60 - 60: Oo0ooO0oo0oO
if 62 - 62: i11iIiiIii
O00ooooo00 = pyxbmct . List ( 'font14' , '' , buttonTexture = i1Iii1i1I , _space = 5 , _itemHeight = 35 , _alignmentY = 6 )
Iii11iI1I . placeControl ( O00ooooo00 , 110 , 3 , 500 , 65 )
O00ooooo00 . setVisible ( False )
Iii11iI1I . connect ( O00ooooo00 , lambda : O0o0OO ( ) )
if 88 - 88: i11iIiiIii
if 59 - 59: oO0o - OoooooooOO % Oo0ooO0oo0oO
if 90 - 90: OoOoOO00
if 96 - 96: II111iiii % Ii1I
if 84 - 84: I1IiiI . I1IiiI
if 82 - 82: OoO0O00 - iIii1I11I1II1 . iIii1I11I1II1 + I1ii11iIi11i
if 45 - 45: iii1I1I . oO0o * iii1I1I
if 3 - 3: OoOoOO00 / Oo0Ooo - Oo0Ooo
if 54 - 54: Oo0Ooo . OoO0O00 * I1IiiI % O00oOoOoO0o0O
if 97 - 97: o0oOOo0O0Ooo + Ii1I
if 77 - 77: I11i - oO0o . Ii1I
if 75 - 75: I11i * OoooooooOO % OoOoOO00 . i1IIi - Ii1I + iIii1I11I1II1
global OOii1ii1i11I1I
OOii1ii1i11I1I = pyxbmct . Image ( '' )
Iii11iI1I . placeControl ( OOii1ii1i11I1I , 110 , 98 , 265 , 70 )
if 74 - 74: Oo0ooO0oo0oO
global iiiI1iI1
iiiI1iI1 = pyxbmct . Image ( '' )
Iii11iI1I . placeControl ( iiiI1iI1 , 110 , 98 , 265 , 70 )
if 18 - 18: iIii1I11I1II1 - I11i - oO0o
global I1oOoO0OOO00O
I1oOoO0OOO00O = pyxbmct . Image ( '' )
Iii11iI1I . placeControl ( I1oOoO0OOO00O , 110 , 98 , 265 , 70 )
if 12 - 12: O0 + O0 + Oo0ooO0oo0oO . I1IiiI * II111iiii
if 47 - 47: i11iIiiIii % OOooOOo / Oo0ooO0oo0oO . O00oOoOoO0o0O - I1IiiI
global i11ii
i11ii = pyxbmct . Image ( O0i1II1Iiii1I11 )
Iii11iI1I . placeControl ( i11ii , 439 , 109 , 10 , 8 )
i11ii . setVisible ( False )
if 10 - 10: Oo0Ooo / Oo0ooO0oo0oO / I1ii11iIi11i
global oOOOOO0Ooooo
oOOOOO0Ooooo = pyxbmct . Image ( O0i1II1Iiii1I11 )
Iii11iI1I . placeControl ( oOOOOO0Ooooo , 439 , 115 , 10 , 8 )
oOOOOO0Ooooo . setVisible ( False )
if 98 - 98: O0 - O0oo0OO0 - i11iIiiIii
global o0o000Oo
o0o000Oo = pyxbmct . Image ( O0i1II1Iiii1I11 )
Iii11iI1I . placeControl ( o0o000Oo , 439 , 121 , 10 , 8 )
o0o000Oo . setVisible ( False )
if 85 - 85: II111iiii - I1ii11iIi11i % I1IiiI . I1IiiI - OoooooooOO - I11i
global oO0o0O0o0OO00
oO0o0O0o0OO00 = pyxbmct . Image ( O0i1II1Iiii1I11 )
Iii11iI1I . placeControl ( oO0o0O0o0OO00 , 439 , 127 , 10 , 8 )
oO0o0O0o0OO00 . setVisible ( False )
if 38 - 38: i1IIi + oO0o * Oo0ooO0oo0oO % Ii1I % Oo0ooO0oo0oO
global iIiiiIi
iIiiiIi = pyxbmct . Image ( O0i1II1Iiii1I11 )
Iii11iI1I . placeControl ( iIiiiIi , 439 , 133 , 10 , 8 )
iIiiiIi . setVisible ( False )
if 80 - 80: OoO0O00 + OoOoOO00 % iii1I1I % OoooooooOO - Oo0ooO0oo0oO
global O0ooOoOO0
O0ooOoOO0 = pyxbmct . Image ( IiI111111IIII )
Iii11iI1I . placeControl ( O0ooOoOO0 , 180 , 40 , 350 , 100 )
O0ooOoOO0 . setVisible ( False )
if 25 - 25: OoOoOO00 % i11iIiiIii - I1IiiI * iIii1I11I1II1 - Oo0Ooo . O0
if 48 - 48: I1IiiI + oO0o % i11iIiiIii % iIii1I11I1II1
if 14 - 14: iIii1I11I1II1
global ooOoo000oO
ooOoo000oO = pyxbmct . Image ( i1Ii )
Iii11iI1I . placeControl ( ooOoo000oO , 100 , 0 , 500 , 175 )
ooOoo000oO . setVisible ( False )
if 78 - 78: O0oo0OO0 / Oo0Ooo - O0oo0OO0
if 1 - 1: OoO0O00 - I1IiiI * o0oOOo0O0Ooo
if 84 - 84: OoO0O00 % OoooooooOO
global ooo0oo00O00Oo
ooo0oo00O00Oo = pyxbmct . Image ( ii111iI1iIi1 )
Iii11iI1I . placeControl ( ooo0oo00O00Oo , 120 , 38 , 70 , 5 )
ooo0oo00O00Oo . setVisible ( False )
if 66 - 66: OoOoOO00 . iii1I1I
global I1i11I
I1i11I = pyxbmct . Image ( OOO )
Iii11iI1I . placeControl ( I1i11I , 120 , 38 , 70 , 5 )
I1i11I . setVisible ( False )
if 1 - 1: iii1I1I * i1IIi . iIii1I11I1II1 % O0 - OoooooooOO
global iI1I1I1i1i
iI1I1I1i1i = pyxbmct . Image ( oo0OOo0 )
Iii11iI1I . placeControl ( iI1I1I1i1i , 120 , 38 , 70 , 5 )
iI1I1I1i1i . setVisible ( False )
if 87 - 87: iii1I1I . Oo0Ooo * i11iIiiIii % o0oOOo0O0Ooo + Ii1I
if 72 - 72: Ii1I / II111iiii + o0oOOo0O0Ooo
if 33 - 33: O0oo0OO0 * OoOoOO00 - OoooooooOO
if 11 - 11: O0oo0OO0 - Oo0Ooo / iIii1I11I1II1 - OoooooooOO
if 71 - 71: Oo0Ooo + Ii1I - OoooooooOO + I11i - iIii1I11I1II1 / O0
global IiIiIIiii1I
IiIiIIiii1I = pyxbmct . Image ( ii111iI1iIi1 )
Iii11iI1I . placeControl ( IiIiIIiii1I , 120 , 80 , 70 , 5 )
IiIiIIiii1I . setVisible ( False )
if 76 - 76: i11iIiiIii % o0oOOo0O0Ooo . O0 * I11i
if 90 - 90: II111iiii + OOooOOo % O0oo0OO0 * iIii1I11I1II1 % iIii1I11I1II1
global OOOOOOoo0oO
OOOOOOoo0oO = pyxbmct . Image ( OOO )
Iii11iI1I . placeControl ( OOOOOOoo0oO , 120 , 80 , 70 , 5 )
OOOOOOoo0oO . setVisible ( False )
if 55 - 55: II111iiii % O0 * O0 - II111iiii * I1IiiI % Oo0Ooo
if 48 - 48: I1ii11iIi11i + OoooooooOO % i1IIi
if 46 - 46: OoOoOO00
global Ii1I1I111iI
Ii1I1I111iI = pyxbmct . Image ( oo0OOo0 )
Iii11iI1I . placeControl ( Ii1I1I111iI , 120 , 80 , 70 , 5 )
Ii1I1I111iI . setVisible ( False )
if 75 - 75: I1IiiI
if 37 - 37: iIii1I11I1II1 % OoO0O00 * Oo0ooO0oo0oO + I11i % Oo0ooO0oo0oO / i11iIiiIii
if 14 - 14: i1IIi / Oo0ooO0oo0oO
if 10 - 10: Oo0ooO0oo0oO / OoooooooOO - Oo0ooO0oo0oO % O0 + oO0o - oO0o
global oOo0Oo0O0O
oOo0Oo0O0O = pyxbmct . Image ( ii111iI1iIi1 )
Iii11iI1I . placeControl ( oOo0Oo0O0O , 120 , 163 , 70 , 5 )
oOo0Oo0O0O . setVisible ( False )
if 16 - 16: O0
global i1I1iIoOOoO
i1I1iIoOOoO = pyxbmct . Image ( OOO )
Iii11iI1I . placeControl ( i1I1iIoOOoO , 120 , 163 , 70 , 5 )
i1I1iIoOOoO . setVisible ( False )
if 14 - 14: Ii1I . Ii1I . OOooOOo - O0 / OoO0O00 % II111iiii
global ooo00Oo00O0
ooo00Oo00O0 = pyxbmct . Image ( oo0OOo0 )
Iii11iI1I . placeControl ( ooo00Oo00O0 , 120 , 163 , 70 , 5 )
ooo00Oo00O0 . setVisible ( False )
if 5 - 5: iIii1I11I1II1 % OoOoOO00 % OOooOOo % O0 * oO0o . iIii1I11I1II1
if 96 - 96: i11iIiiIii + oO0o / I1ii11iIi11i . O00oOoOoO0o0O % o0oOOo0O0Ooo
if 41 - 41: o0oOOo0O0Ooo . i1IIi - OOooOOo
if 19 - 19: o0oOOo0O0Ooo % O0oo0OO0 % I11i
global ooo0O0o0OoOO
ooo0O0o0OoOO = pyxbmct . Image ( '' )
Iii11iI1I . placeControl ( ooo0O0o0OoOO , 80 , 85 , 230 , 70 )
ooo0O0o0OoOO . setVisible ( False )
if 1 - 1: I1IiiI / o0oOOo0O0Ooo - O0oo0OO0
if 50 - 50: I11i - OoOoOO00 + I1IiiI % Oo0Ooo / OoooooooOO - I1ii11iIi11i
global iIi11i
iIi11i = pyxbmct . Image ( '' )
Iii11iI1I . placeControl ( iIi11i , 400 , 71 , 172 , 50 )
iIi11i . setVisible ( False )
if 26 - 26: O00oOoOoO0o0O . Ii1I
if 35 - 35: I1ii11iIi11i + OOooOOo
global o0o00o0Oo
o0o00o0Oo = pyxbmct . Image ( '' )
Iii11iI1I . placeControl ( o0o00o0Oo , 400 , 120 , 172 , 50 )
o0o00o0Oo . setVisible ( False )
if 88 - 88: O0
if 4 - 4: OoOoOO00 % iIii1I11I1II1 % OoooooooOO . oO0o
global iiiii1I1III1
iiiii1I1III1 = pyxbmct . Image ( I11IiI )
Iii11iI1I . placeControl ( iiiii1I1III1 , 555 , 29 , 30 , 15 )
iiiii1I1III1 . setVisible ( False )
if 27 - 27: II111iiii - OoOoOO00
if 81 - 81: o0oOOo0O0Ooo - Oo0Ooo % O00oOoOoO0o0O - Oo0ooO0oo0oO / O0
if 27 - 27: Oo0Ooo
global ooOO0ooo0o
ooOO0ooo0o = pyxbmct . Image ( '' )
Iii11iI1I . placeControl ( ooOO0ooo0o , 500 , 75 , 90 , 95 )
ooOO0ooo0o . setVisible ( False )
ooOO0ooo0o . setImage ( IIII )
if 15 - 15: iIii1I11I1II1 . OoOoOO00 % Ii1I / i1IIi . o0oOOo0O0Ooo
if 45 - 45: iIii1I11I1II1 - i1IIi % I1IiiI - O0oo0OO0 + oO0o
if 15 - 15: iIii1I11I1II1 - OoooooooOO / Oo0ooO0oo0oO
if 83 - 83: O00oOoOoO0o0O + O0oo0OO0 / OoOoOO00 * O00oOoOoO0o0O . oO0o
if 22 - 22: O0 + Oo0ooO0oo0oO + O0oo0OO0
if 57 - 57: OOooOOo . Oo0ooO0oo0oO - OoooooooOO - I1ii11iIi11i * O0
if 85 - 85: I1IiiI * OoO0O00
if 63 - 63: I1IiiI - i11iIiiIii
if 4 - 4: OOooOOo + iIii1I11I1II1 / I1IiiI * Ii1I
if 64 - 64: OoOoOO00
global i1IiiiiIi1I
i1IiiiiIi1I = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "totalfilesdeleted" ) + '[/COLOR]' , 'font14' )
Iii11iI1I . placeControl ( i1IiiiiIi1I , 75 , 14 , 190 , 75 )
i1IiiiiIi1I . setVisible ( False )
if 94 - 94: OOooOOo * OoooooooOO * o0oOOo0O0Ooo / O0oo0OO0 . II111iiii
if 37 - 37: O0 * II111iiii * I1IiiI - O0 - I11i / i1IIi
if 27 - 27: i11iIiiIii + iIii1I11I1II1
if 15 - 15: oO0o
if 69 - 69: II111iiii * O0 . Oo0ooO0oo0oO * O00oOoOoO0o0O
if 25 - 25: I11i - I1ii11iIi11i . O0oo0OO0 . OoooooooOO
global ii1i
ii1i = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "totalspacegained" ) + '[/COLOR]' , 'font14' )
Iii11iI1I . placeControl ( ii1i , 75 , 95 , 190 , 75 )
ii1i . setVisible ( False )
if 4 - 4: O00oOoOoO0o0O * OoO0O00 % I1ii11iIi11i * Ii1I . iii1I1I
if 41 - 41: OoooooooOO % I11i . O0 + O0oo0OO0
if 67 - 67: OoOoOO00 * OOooOOo / OOooOOo / OoooooooOO
if 67 - 67: I11i - i1IIi . OoooooooOO / iIii1I11I1II1
global iII1iI1IIiI
iII1iI1IIiI = pyxbmct . Label ( '' , 'font14' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( iII1iI1IIiI , 20 , 85 , 190 , 75 )
iII1iI1IIiI . setVisible ( False )
if 34 - 34: OoO0O00 * II111iiii
if 43 - 43: OoOoOO00 . I1IiiI
global O00oo
O00oo = pyxbmct . Label ( '' , 'font14' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( O00oo , 55 , 75 , 260 , 100 )
O00oo . setVisible ( False )
if 44 - 44: O0 / o0oOOo0O0Ooo
if 19 - 19: I11i
if 91 - 91: OOooOOo * OoooooooOO
if 89 - 89: i1IIi / iii1I1I . O0oo0OO0
if 74 - 74: I1ii11iIi11i % iii1I1I / OoooooooOO / I1ii11iIi11i % i11iIiiIii % Oo0ooO0oo0oO
if 82 - 82: OoooooooOO . o0oOOo0O0Ooo * I1ii11iIi11i % I1ii11iIi11i * Ii1I
if 83 - 83: I11i - Oo0Ooo + i11iIiiIii - i11iIiiIii
global oOOOOOo
oOOOOOo = pyxbmct . Label ( '' , 'font16' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( oOOOOOo , 120 , 20 , 10 , 135 )
if 64 - 64: O00oOoOoO0o0O % I1IiiI / Oo0ooO0oo0oO
if 74 - 74: OoooooooOO
global iiII1iiiiiii
iiII1iiiiiii = pyxbmct . Label ( ' ' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( iiII1iiiiiii , 385 , 98 , 10 , 70 )
iiII1iiiiiii . setVisible ( False )
if 22 - 22: II111iiii . O0 * O0oo0OO0 % OoO0O00 / OoooooooOO + O0oo0OO0
global iiIiii
iiIiii = pyxbmct . Label ( ' ' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( iiIiii , 410 , 98 , 10 , 70 )
iiIiii . setVisible ( False )
if 71 - 71: Oo0ooO0oo0oO . oO0o * OoooooooOO + iii1I1I - O0oo0OO0 . I1ii11iIi11i
if 100 - 100: I11i + O0 - o0oOOo0O0Ooo * I1ii11iIi11i
global IiIi1i
IiIi1i = pyxbmct . Label ( '[COLOR=darkgray]Rating:[/COLOR]' )
Iii11iI1I . placeControl ( IiIi1i , 435 , 98 , 10 , 13 )
IiIi1i . setVisible ( False )
if 94 - 94: Oo0Ooo . O00oOoOoO0o0O / Ii1I / oO0o - I1IiiI
if 77 - 77: i11iIiiIii . Ii1I - Ii1I
if 47 - 47: iii1I1I % OOooOOo . I1ii11iIi11i + I1ii11iIi11i . O0oo0OO0
if 20 - 20: oO0o - o0oOOo0O0Ooo + I1IiiI % OoOoOO00
global i11i
i11i = pyxbmct . Label ( '[COLOR=darkgray]Downloads:[/COLOR]' )
Iii11iI1I . placeControl ( i11i , 466 , 98 , 10 , 20 )
i11i . setVisible ( False )
if 41 - 41: oO0o . Oo0ooO0oo0oO
if 59 - 59: iIii1I11I1II1 - I1IiiI . Oo0ooO0oo0oO
if 58 - 58: I1IiiI * O0oo0OO0 + iii1I1I + iIii1I11I1II1 + I1IiiI
global I1IiiIiii1
I1IiiIiii1 = pyxbmct . Label ( ' ' )
Iii11iI1I . placeControl ( I1IiiIiii1 , 466 , 115 , 10 , 50 )
I1IiiIiii1 . setVisible ( False )
if 78 - 78: Oo0Ooo + Oo0ooO0oo0oO
if 56 - 56: OoO0O00 / i1IIi + Oo0ooO0oo0oO . Oo0ooO0oo0oO . iii1I1I
if 37 - 37: iIii1I11I1II1 * OoOoOO00 . OoOoOO00 + OoooooooOO + OoO0O00
global o0OOo00oO0oOO
o0OOo00oO0oOO = pyxbmct . Label ( '[COLOR=darkgray]Total Downloads: [/COLOR]' )
Iii11iI1I . placeControl ( o0OOo00oO0oOO , 406 , 115 , 10 , 30 )
o0OOo00oO0oOO . setVisible ( False )
if 25 - 25: I1IiiI / O00oOoOoO0o0O . OOooOOo . I1ii11iIi11i % i1IIi
if 12 - 12: O0 % O0
global i1IiI1I
i1IiI1I = pyxbmct . Label ( ' ' )
Iii11iI1I . placeControl ( i1IiI1I , 406 , 139 , 10 , 13 )
i1IiI1I . setVisible ( False )
if 9 - 9: O0 . I1IiiI + I1ii11iIi11i / OOooOOo * I1ii11iIi11i
if 10 - 10: O00oOoOoO0o0O % o0oOOo0O0Ooo / O0 / II111iiii
if 81 - 81: Ii1I / o0oOOo0O0Ooo % OoOoOO00 . I1ii11iIi11i
global ooO00o
ooO00o = pyxbmct . Label ( '[COLOR=darkgray]Downloads this week: [/COLOR]' )
Iii11iI1I . placeControl ( ooO00o , 436 , 110 , 10 , 30 )
ooO00o . setVisible ( False )
if 47 - 47: II111iiii + OOooOOo / II111iiii . OOooOOo
if 68 - 68: OoooooooOO
global oooO00Oo
oooO00Oo = pyxbmct . Label ( ' ' )
Iii11iI1I . placeControl ( oooO00Oo , 436 , 139 , 10 , 20 )
oooO00Oo . setVisible ( False )
if 63 - 63: I1IiiI
if 80 - 80: oO0o + iIii1I11I1II1
if 87 - 87: I1ii11iIi11i % Ii1I . Ii1I
if 71 - 71: OoO0O00 - O00oOoOoO0o0O . i1IIi * I1IiiI % I11i
global o0o00O0oOooO0
o0o00O0oOooO0 = pyxbmct . Label ( '[COLOR=darkgray]Can Ares check for build update?: [/COLOR]' )
Iii11iI1I . placeControl ( o0o00O0oOooO0 , 466 , 95 , 10 , 48 )
o0o00O0oOooO0 . setVisible ( False )
if 36 - 36: O00oOoOoO0o0O * OoooooooOO . i11iIiiIii * i1IIi
if 52 - 52: O00oOoOoO0o0O + Oo0ooO0oo0oO - II111iiii - OoooooooOO * OoO0O00 - iIii1I11I1II1
global o0oO0OO00ooOO
o0oO0OO00ooOO = pyxbmct . Label ( ' ' )
Iii11iI1I . placeControl ( o0oO0OO00ooOO , 466 , 139 , 10 , 13 )
o0oO0OO00ooOO . setVisible ( False )
if 38 - 38: II111iiii % iIii1I11I1II1 * O00oOoOoO0o0O * OoOoOO00 % II111iiii . I1IiiI
if 35 - 35: OoooooooOO - i11iIiiIii * i11iIiiIii % Ii1I - OOooOOo . iIii1I11I1II1
if 96 - 96: OOooOOo
if 18 - 18: oO0o . I1ii11iIi11i % oO0o
if 43 - 43: oO0o / Oo0ooO0oo0oO . o0oOOo0O0Ooo . iIii1I11I1II1
if 63 - 63: iii1I1I * iii1I1I
if 78 - 78: iIii1I11I1II1 % iIii1I11I1II1 . iIii1I11I1II1 / Ii1I . O0 + i1IIi
if 53 - 53: Ii1I . I1ii11iIi11i - OOooOOo - Oo0ooO0oo0oO
if 17 - 17: OoooooooOO / I1IiiI * Oo0ooO0oo0oO % I1ii11iIi11i . OoO0O00
if 5 - 5: OoO0O00 % O0oo0OO0 . oO0o . Ii1I + I1IiiI
if 95 - 95: II111iiii . iii1I1I - iIii1I11I1II1 / I11i + Oo0ooO0oo0oO * O0oo0OO0
if 92 - 92: iii1I1I * OoooooooOO % I1IiiI / OOooOOo
if 46 - 46: OoOoOO00
global IIi11iI1Iii
IIi11iI1Iii = pyxbmct . Label ( '[COLOR=darkgray]Votes:[/COLOR]' )
Iii11iI1I . placeControl ( IIi11iI1Iii , 435 , 150 , 10 , 13 )
IIi11iI1Iii . setVisible ( False )
if 52 - 52: o0oOOo0O0Ooo - OoO0O00 % i1IIi / Ii1I % O00oOoOoO0o0O
if 100 - 100: oO0o . i11iIiiIii - Oo0ooO0oo0oO
global O0Ooo000
O0Ooo000 = pyxbmct . Label ( ' ' )
Iii11iI1I . placeControl ( O0Ooo000 , 435 , 160 , 10 , 13 )
O0Ooo000 . setVisible ( False )
if 49 - 49: Oo0Ooo % Oo0ooO0oo0oO % o0oOOo0O0Ooo + Oo0ooO0oo0oO * O0oo0OO0 % I1IiiI
if 85 - 85: i1IIi / i1IIi
global oo0o0ooooo
oo0o0ooooo = pyxbmct . Label ( '[COLOR=darkgray]Size(MB):[/COLOR]' )
Iii11iI1I . placeControl ( oo0o0ooooo , 495 , 101 , 10 , 18 )
oo0o0ooooo . setVisible ( False )
if 77 - 77: i1IIi . Oo0ooO0oo0oO % Oo0ooO0oo0oO - Ii1I
if 6 - 6: OOooOOo % Ii1I + Oo0ooO0oo0oO
global i1oO00O
i1oO00O = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "pressonbuild" ) + '[/COLOR]' )
Iii11iI1I . placeControl ( i1oO00O , 495 , 115 , 10 , 40 )
i1oO00O . setVisible ( False )
if 17 - 17: iIii1I11I1II1 * O0oo0OO0 % oO0o + o0oOOo0O0Ooo . Ii1I * Oo0Ooo
if 16 - 16: I1IiiI % OoO0O00 . Oo0ooO0oo0oO / OoooooooOO
if 8 - 8: O0oo0OO0 % OoO0O00 . I1IiiI - OoOoOO00 + i1IIi / iIii1I11I1II1
global iiii1i1II1
iiii1i1II1 = pyxbmct . Label ( '[COLOR=darkgray]Version: [/COLOR]' )
Iii11iI1I . placeControl ( iiii1i1II1 , 495 , 148 , 10 , 18 )
iiii1i1II1 . setVisible ( False )
if 89 - 89: II111iiii / Ii1I % Ii1I
if 57 - 57: I11i
global IiIIiii11II1
IiIIiii11II1 = pyxbmct . Label ( ' ' )
Iii11iI1I . placeControl ( IiIIiii11II1 , 495 , 160 , 10 , 50 )
IiIIiii11II1 . setVisible ( False )
if 95 - 95: OoOoOO00 + I11i * i1IIi - Oo0ooO0oo0oO % Oo0ooO0oo0oO
if 58 - 58: OOooOOo
if 74 - 74: i1IIi . O00oOoOoO0o0O / Oo0ooO0oo0oO + I11i % i11iIiiIii % iii1I1I
if 62 - 62: i1IIi % O0oo0OO0
if 94 - 94: i1IIi + iii1I1I
if 25 - 25: O0oo0OO0 . Ii1I - Ii1I . o0oOOo0O0Ooo - O00oOoOoO0o0O
global O0OooOO
O0OooOO = pyxbmct . Label ( '[COLOR=darkgray]Status:[/COLOR]' )
Iii11iI1I . placeControl ( O0OooOO , 495 , 98 , 10 , 13 )
O0OooOO . setVisible ( False )
if 91 - 91: o0oOOo0O0Ooo % I1ii11iIi11i % OoOoOO00 * iIii1I11I1II1
global iiI1ii
iiI1ii = pyxbmct . Label ( ' ' )
Iii11iI1I . placeControl ( iiI1ii , 495 , 108 , 10 , 40 )
iiI1ii . setVisible ( False )
if 18 - 18: OoOoOO00 * I1ii11iIi11i . i1IIi * iii1I1I
if 67 - 67: O00oOoOoO0o0O + i11iIiiIii . II111iiii / OoOoOO00 + OoooooooOO + i11iIiiIii
global o0oOoOo0
o0oOoOo0 = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "recversiontextlabel" ) + '[/COLOR]' )
Iii11iI1I . placeControl ( o0oOoOo0 , 520 , 113 , 10 , 34 )
o0oOoOo0 . setVisible ( False )
if 23 - 23: Oo0Ooo
global i1i1
i1i1 = pyxbmct . Label ( '' )
Iii11iI1I . placeControl ( i1i1 , 520 , 144 , 10 , 34 )
i1i1 . setVisible ( False )
if 7 - 7: Oo0Ooo / oO0o . O0oo0OO0 % I11i
if 85 - 85: II111iiii / o0oOOo0O0Ooo . iIii1I11I1II1 . OoooooooOO / Ii1I
global o0OOOOOo0
o0OOOOOo0 = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "installedversiontextlabel" ) + '[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( o0OOOOOo0 , 495 , 120 , 10 , 34 )
o0OOOOOo0 . setVisible ( False )
if 18 - 18: i11iIiiIii + o0oOOo0O0Ooo . i11iIiiIii
global III1IiI1i1i
III1IiI1i1i = pyxbmct . Label ( '' )
Iii11iI1I . placeControl ( III1IiI1i1i , 495 , 154 , 10 , 34 )
III1IiI1i1i . setVisible ( False )
if 50 - 50: O00oOoOoO0o0O / OoooooooOO . I11i
if 93 - 93: OOooOOo / OoooooooOO % iii1I1I % Ii1I / O0oo0OO0 % OOooOOo
global OO0OOoooo0o
OO0OOoooo0o = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "deletepackageslabel" ) + '[/COLOR]' , 'font14' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( OO0OOoooo0o , 80 , 72 , 250 , 102 )
OO0OOoooo0o . setVisible ( False )
if 25 - 25: i1IIi % Oo0Ooo . i1IIi * OoOoOO00 . Ii1I % OoO0O00
if 47 - 47: o0oOOo0O0Ooo - i11iIiiIii / OoooooooOO
global oooOo
oooOo = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "deletethumbnailslabel" ) + '[/COLOR]' , 'font14' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( oooOo , 80 , 72 , 310 , 102 )
oooOo . setVisible ( False )
if 93 - 93: I1IiiI * II111iiii * O0 % o0oOOo0O0Ooo + oO0o / Oo0ooO0oo0oO
if 79 - 79: OoO0O00 + Oo0ooO0oo0oO / oO0o % I1ii11iIi11i
global IIIiiiIiI
IIIiiiIiI = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "deletecachelabel" ) + '[/COLOR]' , 'font14' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( IIIiiiIiI , 80 , 72 , 430 , 102 )
IIIiiiIiI . setVisible ( False )
if 77 - 77: Ii1I / Ii1I / I1ii11iIi11i
if 92 - 92: O0 * i11iIiiIii . OoOoOO00 * O00oOoOoO0o0O / o0oOOo0O0Ooo * Oo0ooO0oo0oO
global iIi1i1I
iIi1i1I = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "maintenancelabel" ) + '[/COLOR]' , 'font14' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( iIi1i1I , 80 , 64 , 460 , 115 )
iIi1i1I . setVisible ( False )
if 74 - 74: O0 - o0oOOo0O0Ooo
if 68 - 68: O0oo0OO0
global OOoO0O000O
OOoO0O000O = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "tweakcachelabel1" ) + '[/COLOR]' , 'font14' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( OOoO0O000O , 80 , 64 , 450 , 115 )
OOoO0O000O . setVisible ( False )
if 19 - 19: o0oOOo0O0Ooo
if 63 - 63: OoooooooOO % Oo0ooO0oo0oO
global iI
iI = pyxbmct . Label ( '' , 'font14' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( iI , 90 , 75 , 440 , 100 )
iI . setVisible ( False )
if 26 - 26: OOooOOo + Oo0Ooo
global O0o
O0o = pyxbmct . Label ( '[COLOR=lightgray]' + ooO ( "tweakcachelabel3" ) + '[/COLOR]' , 'font14' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( O0o , 200 , 75 , 440 , 100 )
O0o . setVisible ( False )
if 97 - 97: O0oo0OO0 * O0oo0OO0 + iii1I1I % Ii1I / iii1I1I
if 73 - 73: OoOoOO00 % O0oo0OO0 . I1ii11iIi11i
if 45 - 45: iIii1I11I1II1 % Ii1I . OoOoOO00 . o0oOOo0O0Ooo - OoooooooOO
global oo000O0o
oo000O0o = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "automaintenancelabel1" ) + '[/COLOR]' , 'font14' )
Iii11iI1I . placeControl ( oo000O0o , 460 , 7 , 10 , 105 )
oo000O0o . setVisible ( False )
oo000O0o . setEnabled ( False )
if 46 - 46: I1ii11iIi11i
if 32 - 32: iii1I1I * i11iIiiIii / O00oOoOoO0o0O + i11iIiiIii + O0
global ooO0o0O0Oo
ooO0o0O0Oo = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "fullautomaintenancelabel1" ) + '[/COLOR]' , 'font14' )
Iii11iI1I . placeControl ( ooO0o0O0Oo , 443 , 110 , 10 , 105 )
ooO0o0O0Oo . setVisible ( False )
ooO0o0O0Oo . setEnabled ( False )
if 51 - 51: O0oo0OO0
global IiiIIi
IiiIIi = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "fullyautomaintenancelabel2" ) + '[/COLOR]' , 'font14' )
Iii11iI1I . placeControl ( IiiIIi , 505 , 123 , 10 , 105 )
IiiIIi . setVisible ( False )
IiiIIi . setEnabled ( False )
if 95 - 95: Ii1I / Ii1I * OoO0O00 . OoooooooOO . OoooooooOO * I11i
if 76 - 76: OoooooooOO - Ii1I + O00oOoOoO0o0O % OoOoOO00 / OoooooooOO
if 55 - 55: i11iIiiIii - O00oOoOoO0o0O * OOooOOo + II111iiii . I1ii11iIi11i / O0
if 16 - 16: II111iiii . Oo0Ooo * O0oo0OO0 + o0oOOo0O0Ooo - i11iIiiIii
if 98 - 98: II111iiii - i1IIi - Oo0ooO0oo0oO
if 36 - 36: O00oOoOoO0o0O + o0oOOo0O0Ooo
if 81 - 81: OOooOOo / I11i % oO0o + Oo0ooO0oo0oO
if 10 - 10: oO0o / i11iIiiIii
global O0Oo0O0
O0Oo0O0 = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "unblocklabel" ) + '[/COLOR]' , 'font14' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( O0Oo0O0 , 95 , 70 , 100 , 105 )
O0Oo0O0 . setVisible ( False )
if 73 - 73: OoO0O00 - i1IIi
global OO00oo
OO00oo = pyxbmct . Label ( '' , 'font14' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( OO00oo , 170 , 70 , 100 , 105 )
OO00oo . setVisible ( False )
if 52 - 52: I1ii11iIi11i
if 4 - 4: Ii1I - iii1I1I + i1IIi - O0oo0OO0 / iii1I1I . Oo0Ooo
global oOO0OOOo000o
oOO0OOOo000o = pyxbmct . Label ( '' , 'font14' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( oOO0OOOo000o , 200 , 70 , 100 , 105 )
oOO0OOOo000o . setVisible ( False )
if 18 - 18: oO0o % iIii1I11I1II1 + Oo0ooO0oo0oO
if 34 - 34: I1IiiI - OoooooooOO . O00oOoOoO0o0O - OOooOOo % O00oOoOoO0o0O
global iII11ii1ii
iII11ii1ii = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "unblocklabel4" ) + '[/COLOR]' , 'font14' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( iII11ii1ii , 270 , 70 , 100 , 105 )
iII11ii1ii . setVisible ( False )
if 19 - 19: O00oOoOoO0o0O + I1ii11iIi11i % Oo0Ooo
if 32 - 32: OOooOOo
global oO0ooooo0O00
oO0ooooo0O00 = pyxbmct . Label ( '' , 'font14' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( oO0ooooo0O00 , 300 , 70 , 100 , 105 )
oO0ooooo0O00 . setVisible ( False )
if 46 - 46: II111iiii . OoO0O00
if 97 - 97: oO0o
global OO00oIii
OO00oIii = pyxbmct . Label ( '' , 'font14' , alignment = pyxbmct . ALIGN_CENTER )
Iii11iI1I . placeControl ( OO00oIii , 170 , 70 , 100 , 105 )
OO00oIii . setVisible ( False )
if 45 - 45: i11iIiiIii / O00oOoOoO0o0O + OoO0O00
if 55 - 55: Ii1I / II111iiii - oO0o
if 58 - 58: i1IIi . OoooooooOO % iIii1I11I1II1 * o0oOOo0O0Ooo + O0 / oO0o
if 77 - 77: I11i . I1ii11iIi11i
if 92 - 92: i11iIiiIii + I11i % I1IiiI / Oo0ooO0oo0oO
if 28 - 28: i1IIi . I1IiiI
if 41 - 41: I1ii11iIi11i . O0oo0OO0 * OoOoOO00 . O0oo0OO0 / o0oOOo0O0Ooo
if 41 - 41: o0oOOo0O0Ooo / o0oOOo0O0Ooo . Oo0Ooo
global OOO000000OOO0
OOO000000OOO0 = pyxbmct . Label ( '[COLOR=darkgray]Thumbnails[/COLOR]' , 'font14' )
Iii11iI1I . placeControl ( OOO000000OOO0 , 138 , 18 , 30 , 40 )
OOO000000OOO0 . setVisible ( False )
if 4 - 4: O0oo0OO0
if 85 - 85: iIii1I11I1II1 % Oo0Ooo
global oo
oo = pyxbmct . Label ( '[COLOR=darkgray]Files:[/COLOR]' , 'font14' )
Iii11iI1I . placeControl ( oo , 205 , 17 , 30 , 40 )
oo . setVisible ( False )
if 20 - 20: O00oOoOoO0o0O + i11iIiiIii * OOooOOo
if 27 - 27: O0 * OoO0O00 * I1ii11iIi11i
global OoOOoooO000
OoOOoooO000 = pyxbmct . Label ( '[COLOR=darkgray]Size:[/COLOR]' , 'font14' )
Iii11iI1I . placeControl ( OoOOoooO000 , 235 , 17 , 30 , 40 )
OoOOoooO000 . setVisible ( False )
if 40 - 40: O0 + oO0o - Oo0ooO0oo0oO + I1IiiI - O00oOoOoO0o0O
if 60 - 60: O0oo0OO0 * OoO0O00 * oO0o + oO0o
global OoO0o000oOo
OoO0o000oOo = pyxbmct . Label ( '' , 'font14' )
Iii11iI1I . placeControl ( OoO0o000oOo , 205 , 25 , 30 , 40 )
OoO0o000oOo . setVisible ( False )
if 34 - 34: o0oOOo0O0Ooo
if 76 - 76: oO0o + OoooooooOO % OoOoOO00 / OoOoOO00
global Oo00OO00o0oO
Oo00OO00o0oO = pyxbmct . Label ( '' , 'font14' )
Iii11iI1I . placeControl ( Oo00OO00o0oO , 235 , 25 , 30 , 40 )
Oo00OO00o0oO . setVisible ( False )
if 51 - 51: II111iiii / OoOoOO00
if 69 - 69: i11iIiiIii
if 77 - 77: I1ii11iIi11i % OoooooooOO - Oo0Ooo - Ii1I + I11i
if 93 - 93: I1IiiI % O0 * OoO0O00 % OoOoOO00 . O0oo0OO0 * I1IiiI
if 95 - 95: O00oOoOoO0o0O + o0oOOo0O0Ooo - o0oOOo0O0Ooo
global ooooo0Oo0
ooooo0Oo0 = pyxbmct . Label ( '[COLOR=darkgray]Packages[/COLOR]' , 'font14' )
Iii11iI1I . placeControl ( ooooo0Oo0 , 138 , 61 , 30 , 40 )
ooooo0Oo0 . setVisible ( False )
if 83 - 83: Oo0ooO0oo0oO
if 59 - 59: I1ii11iIi11i
global o0
o0 = pyxbmct . Label ( '[COLOR=darkgray]Files:[/COLOR]' , 'font14' )
Iii11iI1I . placeControl ( o0 , 205 , 58 , 30 , 40 )
o0 . setVisible ( False )
if 26 - 26: I11i . Ii1I
if 94 - 94: Oo0ooO0oo0oO . I1IiiI + O00oOoOoO0o0O % I1IiiI / o0oOOo0O0Ooo % o0oOOo0O0Ooo
global I1IIIi11ii11
I1IIIi11ii11 = pyxbmct . Label ( '[COLOR=darkgray]Size:[/COLOR]' , 'font14' )
Iii11iI1I . placeControl ( I1IIIi11ii11 , 235 , 58 , 30 , 40 )
I1IIIi11ii11 . setVisible ( False )
if 21 - 21: O0 / OOooOOo - II111iiii + I1ii11iIi11i / OoooooooOO
if 81 - 81: i11iIiiIii / Oo0Ooo * i1IIi + OoO0O00 + O0 % I1ii11iIi11i
global O0o0oo0oOO0oO
O0o0oo0oOO0oO = pyxbmct . Label ( '' , 'font14' )
Iii11iI1I . placeControl ( O0o0oo0oOO0oO , 205 , 66 , 30 , 40 )
O0o0oo0oOO0oO . setVisible ( False )
if 3 - 3: i11iIiiIii * O00oOoOoO0o0O . Oo0Ooo % OoOoOO00 * I11i . iii1I1I
if 80 - 80: I11i - O00oOoOoO0o0O
global iIiIII1iI1111
iIiIII1iI1111 = pyxbmct . Label ( '' , 'font14' )
Iii11iI1I . placeControl ( iIiIII1iI1111 , 235 , 66 , 30 , 40 )
iIiIII1iI1111 . setVisible ( False )
if 40 - 40: OOooOOo * I1IiiI % I11i . O0oo0OO0 % O0 . O0
if 14 - 14: Oo0ooO0oo0oO . OoOoOO00 + Oo0ooO0oo0oO * OoOoOO00 . OoOoOO00 * Oo0Ooo
if 40 - 40: OoooooooOO
if 14 - 14: o0oOOo0O0Ooo / OOooOOo . OoOoOO00 % iIii1I11I1II1 % OoOoOO00
if 92 - 92: o0oOOo0O0Ooo + II111iiii
if 56 - 56: OoOoOO00 - OoOoOO00 / Ii1I
global III1II1i
III1II1i = pyxbmct . Label ( '[COLOR=darkgray]Cache[/COLOR]' , 'font14' )
Iii11iI1I . placeControl ( III1II1i , 125 , 123 , 30 , 40 )
III1II1i . setVisible ( False )
if 92 - 92: iIii1I11I1II1
if 21 - 21: I1IiiI
global iI1i1IiIIIIi
iI1i1IiIIIIi = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "cachelabeltemp" ) + '[/COLOR]' , 'font14' )
Iii11iI1I . placeControl ( iI1i1IiIIIIi , 145 , 116 , 30 , 40 )
iI1i1IiIIIIi . setVisible ( False )
if 69 - 69: OoooooooOO + iii1I1I
if 29 - 29: Oo0ooO0oo0oO * I1IiiI / Oo0Ooo / I1ii11iIi11i
global OooOooO0O0o0
OooOooO0O0o0 = pyxbmct . Label ( '[COLOR=darkgray]Files:[/COLOR]' , 'font14' )
Iii11iI1I . placeControl ( OooOooO0O0o0 , 205 , 98 , 30 , 40 )
OooOooO0O0o0 . setVisible ( False )
if 74 - 74: I1ii11iIi11i - Oo0ooO0oo0oO / OoOoOO00 - OoooooooOO * oO0o
if 45 - 45: o0oOOo0O0Ooo . O0oo0OO0 % Ii1I
global OOO0o0
OOO0o0 = pyxbmct . Label ( '[COLOR=darkgray]Size:[/COLOR]' , 'font14' )
Iii11iI1I . placeControl ( OOO0o0 , 235 , 98 , 30 , 40 )
OOO0o0 . setVisible ( False )
if 42 - 42: Oo0Ooo + i11iIiiIii - OOooOOo . I1ii11iIi11i % O0oo0OO0 . I1ii11iIi11i
if 59 - 59: OoooooooOO
global IIIIII111Ii
IIIIII111Ii = pyxbmct . Label ( '' , 'font14' )
Iii11iI1I . placeControl ( IIIIII111Ii , 205 , 106 , 30 , 40 )
IIIIII111Ii . setVisible ( False )
if 91 - 91: i11iIiiIii / Oo0Ooo % I11i / O0
if 80 - 80: II111iiii / I1ii11iIi11i % I1IiiI . Ii1I
global Ii1i1i
Ii1i1i = pyxbmct . Label ( '' , 'font14' )
Iii11iI1I . placeControl ( Ii1i1i , 235 , 106 , 30 , 40 )
Ii1i1i . setVisible ( False )
if 8 - 8: oO0o
global iIi1Ii1IIiI
iIi1Ii1IIiI = pyxbmct . Label ( '[COLOR=darkgray]' + ooO ( "cachelabelinclude" ) + '[/COLOR]' , 'font14' )
Iii11iI1I . placeControl ( iIi1Ii1IIiI , 184 , 131 , 30 , 40 )
iIi1Ii1IIiI . setVisible ( False )
if 21 - 21: oO0o + iii1I1I . i11iIiiIii - II111iiii
if 14 - 14: O0oo0OO0
if 81 - 81: II111iiii
if 55 - 55: O0 + o0oOOo0O0Ooo * I1IiiI - OoooooooOO
if 68 - 68: I11i + Oo0Ooo
if 15 - 15: O0
if 75 - 75: iii1I1I / OoOoOO00
if 2 - 2: i1IIi + oO0o % iii1I1I % I1ii11iIi11i + Oo0ooO0oo0oO . iii1I1I
if 26 - 26: I11i + o0oOOo0O0Ooo + Ii1I % I11i
if 95 - 95: O00oOoOoO0o0O - O0 * oO0o * O0
if 47 - 47: I1IiiI
if 20 - 20: O0oo0OO0
if 40 - 40: OoooooooOO / o0oOOo0O0Ooo + OoOoOO00
if 73 - 73: OOooOOo / Oo0Ooo
Ooo00O0 = pyxbmct . Label ( '[COLOR=lightgray]Kernel:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( Ooo00O0 , 90 , 20 , columnspan = 1 )
Ooo00O0 . setVisible ( False )
if 80 - 80: OoO0O00 + I1IiiI % i1IIi / I11i % i1IIi * i11iIiiIii
OoO0OOoO0 = pyxbmct . Label ( '[COLOR=lightgray]' + o00oOO0o + '[/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( OoO0OOoO0 , 90 , 31 , columnspan = 1 )
OoO0OOoO0 . setVisible ( False )
if 27 - 27: OoOoOO00 / O0oo0OO0 * O0 / I1IiiI - O00oOoOoO0o0O / o0oOOo0O0Ooo
iiI11i = pyxbmct . Label ( '[COLOR=lightgray]CPU Frequency:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( iiI11i , 120 , 8 , columnspan = 1 )
iiI11i . setVisible ( False )
if 70 - 70: I1ii11iIi11i
o0Oo = pyxbmct . Label ( '[COLOR=lightgray]' + OOoOO0oo0ooO + '[/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( o0Oo , 120 , 31 , columnspan = 1 )
o0Oo . setVisible ( False )
if 11 - 11: O0oo0OO0
iiI1i = pyxbmct . Label ( '[COLOR=lightgray]GPU:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( iiI1i , 150 , 22 , columnspan = 1 )
iiI1i . setVisible ( False )
if 70 - 70: Ii1I
i11I = pyxbmct . Label ( '[COLOR=lightgray]' + iii11 + '[/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( i11I , 150 , 31 , columnspan = 1 )
i11I . setVisible ( False )
if 22 - 22: Ii1I
o0oO0o0oo0O0 = pyxbmct . Label ( '[COLOR=lightgray] Kodi Version:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( o0oO0o0oo0O0 , 200 , 11 , columnspan = 1 )
o0oO0o0oo0O0 . setVisible ( False )
if 59 - 59: I1ii11iIi11i
O0oo00oOOO0o = pyxbmct . Label ( '[COLOR=lightgray]' + xbmc . getInfoLabel ( 'System.BuildVersion' ) + '[/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( O0oo00oOOO0o , 200 , 31 , columnspan = 1 )
O0oo00oOOO0o . setVisible ( False )
if 90 - 90: OOooOOo / iii1I1I
II1i = pyxbmct . Label ( '[COLOR=lightgray]Kodi Build Date:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( II1i , 230 , 8 , columnspan = 1 )
II1i . setVisible ( False )
if 70 - 70: o0oOOo0O0Ooo
I111iiIIiI1I = pyxbmct . Label ( '[COLOR=lightgray]' + xbmc . getInfoLabel ( 'System.BuildDate' ) + '[/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( I111iiIIiI1I , 230 , 31 , columnspan = 1 )
I111iiIIiI1I . setVisible ( False )
if 49 - 49: OOooOOo - I1IiiI + OoooooooOO % iii1I1I + o0oOOo0O0Ooo + OoOoOO00
ooO00Oo = pyxbmct . Label ( '[COLOR=lightgray]Screen Mode:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( ooO00Oo , 280 , 11 , columnspan = 1 )
ooO00Oo . setVisible ( False )
if 37 - 37: II111iiii % I1ii11iIi11i * OoOoOO00
Iiii1Ii1I = pyxbmct . Label ( '[COLOR=lightgray]' + xbmc . getInfoLabel ( 'System.ScreenMode' ) + '[/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( Iiii1Ii1I , 280 , 31 , columnspan = 1 )
Iiii1Ii1I . setVisible ( False )
if 35 - 35: i1IIi
oooOOOOO = pyxbmct . Label ( '[COLOR=lightgray]Network State:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( oooOOOOO , 330 , 10 , columnspan = 1 )
oooOOOOO . setVisible ( False )
if 81 - 81: OoO0O00
i1iIii = pyxbmct . Label ( '[COLOR=lightgray]' + xbmc . getInfoLabel ( 'Network.LinkState' ) + '[/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( i1iIii , 330 , 31 , columnspan = 1 )
i1iIii . setVisible ( False )
if 45 - 45: OoooooooOO . O0 * oO0o + O00oOoOoO0o0O
o0O0ooooooo00 = pyxbmct . Label ( '[COLOR=lightgray] Internal IP Address:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( o0O0ooooooo00 , 360 , 3 , columnspan = 1 )
o0O0ooooooo00 . setVisible ( False )
if 18 - 18: II111iiii . O0 - I11i / I11i
I1111ii11IIII = pyxbmct . Label ( '[COLOR=lightgray]' + xbmc . getInfoLabel ( 'Network.IPAddress' ) + '[/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( I1111ii11IIII , 360 , 31 , columnspan = 1 )
I1111ii11IIII . setVisible ( False )
if 71 - 71: OoOoOO00 + iIii1I11I1II1 - II111iiii / i1IIi
IiIi1II111I = pyxbmct . Label ( '[COLOR=lightgray]Mac Address:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( IiIi1II111I , 410 , 11 , columnspan = 1 )
IiIi1II111I . setVisible ( False )
if 39 - 39: Ii1I + O0oo0OO0 * Oo0Ooo + OoOoOO00 / O0oo0OO0 - Oo0ooO0oo0oO
o00o = pyxbmct . Label ( '[COLOR=lightgray]' + OOO00O + '[/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( o00o , 410 , 31 , columnspan = 1 )
o00o . setVisible ( False )
if 66 - 66: I11i * OoO0O00
IIi1i1 = pyxbmct . Label ( '[COLOR=lightgray]Gateway IP Address:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( IIi1i1 , 440 , 2 , columnspan = 1 )
IIi1i1 . setVisible ( False )
if 98 - 98: O00oOoOoO0o0O . Oo0Ooo + O0oo0OO0
o0O0Ooo = pyxbmct . Label ( '[COLOR=lightgray]' + xbmc . getInfoLabel ( 'Network.GatewayAddress' ) + '[/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( o0O0Ooo , 440 , 31 , columnspan = 1 )
o0O0Ooo . setVisible ( False )
if 63 - 63: oO0o * I1IiiI * oO0o
O0oO00oOOooO = pyxbmct . Label ( '[COLOR=lightgray]Network DNS Address:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( O0oO00oOOooO , 470 , 0 , columnspan = 1 )
O0oO00oOOooO . setVisible ( False )
if 56 - 56: oO0o - Ii1I % O0oo0OO0
IiIIii1iiI = pyxbmct . Label ( '[COLOR=lightgray]' + xbmc . getInfoLabel ( 'Network.DNS1Address' ) + '[/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( IiIIii1iiI , 470 , 31 , columnspan = 1 )
IiIIii1iiI . setVisible ( False )
if 100 - 100: OOooOOo * O00oOoOoO0o0O % O00oOoOoO0o0O / o0oOOo0O0Ooo * OoO0O00 % OoOoOO00
ii1IiiII = pyxbmct . Label ( '[COLOR=lightgray]Internet State:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( ii1IiiII , 520 , 11 , columnspan = 1 )
ii1IiiII . setVisible ( False )
if 12 - 12: I1IiiI
IiiI1II1II1i = pyxbmct . Label ( '[COLOR=lightgray]' + xbmc . getInfoLabel ( 'System.InternetState' ) + '[/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
if 32 - 32: O0oo0OO0
Iii11iI1I . placeControl ( IiiI1II1II1i , 520 , 31 , columnspan = 1 )
IiiI1II1II1i . setVisible ( False )
if 35 - 35: O0 + II111iiii + o0oOOo0O0Ooo - OoO0O00 - Ii1I
if 88 - 88: I1ii11iIi11i . O0 - o0oOOo0O0Ooo . I1ii11iIi11i * iii1I1I * I11i
iIO0OO0o0O00oO = pyxbmct . Label ( '[COLOR=lightgray]CPU Temp:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( iIO0OO0o0O00oO , 90 , 110 , columnspan = 1 )
iIO0OO0o0O00oO . setVisible ( False )
if 89 - 89: Oo0Ooo - oO0o + O0 / i11iIiiIii
o00O = pyxbmct . Label ( '[COLOR=lightgray]' + xbmc . getInfoLabel ( 'System.CPUTemperature' ) + '[/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( o00O , 90 , 127 , columnspan = 1 )
o00O . setVisible ( False )
if 64 - 64: OoO0O00 % OoOoOO00 % I1IiiI - Ii1I / O00oOoOoO0o0O * Ii1I
oO0o0oOo = pyxbmct . Label ( '[COLOR=lightgray]CPU Useage:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( oO0o0oOo , 120 , 108 , columnspan = 1 )
oO0o0oOo . setVisible ( False )
if 74 - 74: O00oOoOoO0o0O - O0 % OOooOOo % OoooooooOO - I11i
OoO0O0oo0o = pyxbmct . Label ( '[COLOR=lightgray]' + xbmc . getInfoLabel ( 'System.CpuUsage' ) + '[/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( OoO0O0oo0o , 120 , 127 , columnspan = 40 , rowspan = 1 )
OoO0O0oo0o . setVisible ( False )
if 4 - 4: i1IIi + OoOoOO00 + iIii1I11I1II1 - i1IIi * i11iIiiIii
iIi11I11 = pyxbmct . Label ( '[COLOR=lightgray]Free Storage Space:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( iIi11I11 , 170 , 99 , columnspan = 1 )
iIi11I11 . setVisible ( False )
if 99 - 99: I1ii11iIi11i - O0 % II111iiii + Oo0ooO0oo0oO % OoO0O00 * Ii1I
i1ioO = pyxbmct . Label ( '[COLOR=lightgray]' + xbmc . getInfoLabel ( 'System.FreeSpace' ) + ' (' + xbmc . getInfoLabel ( 'System.FreeSpacePercent' ) + ')' + '[/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( i1ioO , 170 , 127 , columnspan = 1 )
i1ioO . setVisible ( False )
if 8 - 8: OOooOOo
I11iiI = pyxbmct . Label ( '[COLOR=lightgray]Used Storage Space:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( I11iiI , 200 , 98 , columnspan = 1 )
I11iiI . setVisible ( False )
if 85 - 85: O0 % OOooOOo . Ii1I
i1iIii1i111 = pyxbmct . Label ( '[COLOR=lightgray]' + xbmc . getInfoLabel ( 'System.UsedSpace' ) + ' (' + xbmc . getInfoLabel ( 'System.UsedSpacePercent' ) + ')' + '[/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( i1iIii1i111 , 200 , 127 , columnspan = 1 )
i1iIii1i111 . setVisible ( False )
if 74 - 74: I1ii11iIi11i - O0oo0OO0 + i11iIiiIii / O0oo0OO0 / OoooooooOO + o0oOOo0O0Ooo
OOooo000OooO = pyxbmct . Label ( '[COLOR=lightgray]Total Storage Space:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( OOooo000OooO , 230 , 98 , columnspan = 1 )
OOooo000OooO . setVisible ( False )
if 23 - 23: Oo0Ooo
o0o0 = pyxbmct . Label ( '[COLOR=lightgray]' + xbmc . getInfoLabel ( 'System.TotalSpace' ) + '[/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( o0o0 , 230 , 127 , columnspan = 1 )
o0o0 . setVisible ( False )
if 91 - 91: O0oo0OO0
OoOo = pyxbmct . Label ( '[COLOR=lightgray] Free RAM Memory:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( OoOo , 280 , 100 , columnspan = 1 )
OoOo . setVisible ( False )
if 59 - 59: i1IIi % OOooOOo
IiI1 = pyxbmct . Label ( '[COLOR=lightgray]' + xbmc . getInfoLabel ( 'System.FreeMemory' ) + '[/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( IiI1 , 280 , 127 , columnspan = 1 )
IiI1 . setVisible ( False )
if 81 - 81: i11iIiiIii / OoO0O00 * OoOoOO00 % iii1I1I - iIii1I11I1II1 + I1ii11iIi11i
iiIiII = pyxbmct . Label ( '[COLOR=lightgray]External IP Address:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( iiIiII , 330 , 99 , columnspan = 1 )
iiIiII . setVisible ( False )
if 20 - 20: O0 . O0oo0OO0 * Ii1I * II111iiii
if 66 - 66: Ii1I % OoO0O00 % II111iiii - OOooOOo * o0oOOo0O0Ooo
IIiiiI1iI = pyxbmct . Label ( '[COLOR=lightgray][/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( IIiiiI1iI , 330 , 127 , columnspan = 1 )
IIiiiI1iI . setVisible ( False )
if 33 - 33: OoooooooOO / I11i
O0O0 = pyxbmct . Label ( '[COLOR=lightgray] ISP : [/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( O0O0 , 360 , 119 , columnspan = 1 )
O0O0 . setVisible ( False )
if 98 - 98: I1ii11iIi11i . Ii1I . iIii1I11I1II1 * I1ii11iIi11i / Ii1I
if 74 - 74: Oo0Ooo * O0oo0OO0
O0oO0o0OOOOOO = pyxbmct . Label ( '[COLOR=lightgray][/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( O0oO0o0OOOOOO , 360 , 127 , columnspan = 1 )
O0oO0o0OOOOOO . setVisible ( False )
if 72 - 72: OoOoOO00 + O0 - O00oOoOoO0o0O * Oo0ooO0oo0oO
IiI1i11IiIiii = pyxbmct . Label ( '[COLOR=lightgray]Country:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( IiI1i11IiIiii , 390 , 114 , columnspan = 1 )
IiI1i11IiIiii . setVisible ( False )
if 20 - 20: II111iiii % OoOoOO00 * i11iIiiIii
if 68 - 68: O00oOoOoO0o0O / Oo0ooO0oo0oO
I11iiI1I1 = pyxbmct . Label ( '[COLOR=lightgray][/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( I11iiI1I1 , 390 , 127 , columnspan = 1 )
I11iiI1I1 . setVisible ( False )
if 100 - 100: Oo0ooO0oo0oO / I1IiiI
o0i1Ii11II = pyxbmct . Label ( '[COLOR=lightgray]City:[/COLOR]' , alignment = pyxbmct . ALIGN_RIGHT )
Iii11iI1I . placeControl ( o0i1Ii11II , 420 , 119 , columnspan = 1 )
o0i1Ii11II . setVisible ( False )
if 69 - 69: Oo0ooO0oo0oO + OoO0O00 * o0oOOo0O0Ooo - Oo0ooO0oo0oO
if 66 - 66: OoooooooOO / iii1I1I / I1IiiI % Oo0ooO0oo0oO / OoO0O00 + OOooOOo
i1iiiiI11ii = pyxbmct . Label ( '[COLOR=lightgray][/COLOR]' , alignment = pyxbmct . ALIGN_LEFT )
Iii11iI1I . placeControl ( i1iiiiI11ii , 420 , 127 , columnspan = 1 )
i1iiiiI11ii . setVisible ( False )
if 64 - 64: i1IIi
if 26 - 26: OoOoOO00 / o0oOOo0O0Ooo . OOooOOo + I1IiiI + Ii1I . iii1I1I
if 89 - 89: O0oo0OO0 * I1IiiI . i1IIi - iIii1I11I1II1 * O0oo0OO0
if 5 - 5: OoOoOO00 % i1IIi
if 31 - 31: Oo0Ooo * O0 . OOooOOo . o0oOOo0O0Ooo + OoO0O00 + II111iiii
if 76 - 76: Oo0Ooo + I1IiiI - O0
if 58 - 58: O00oOoOoO0o0O * i1IIi . I1IiiI - iii1I1I
if 73 - 73: Oo0Ooo . OoOoOO00
if 50 - 50: O00oOoOoO0o0O / o0oOOo0O0Ooo
if 9 - 9: Oo0Ooo - OoO0O00 + iii1I1I / OoooooooOO
if 52 - 52: O0
if 34 - 34: OoooooooOO + OoOoOO00 - Oo0Ooo . OOooOOo * iIii1I11I1II1
if 93 - 93: i11iIiiIii / Oo0Ooo * OoOoOO00 / Oo0ooO0oo0oO + OoO0O00 * OOooOOo
if 81 - 81: O00oOoOoO0o0O * iii1I1I + i1IIi + O0oo0OO0 / OoO0O00
if 83 - 83: oO0o / OoO0O00
if 34 - 34: OoooooooOO - i1IIi * O0
if 83 - 83: I1IiiI + OoO0O00
if 41 - 41: Ii1I + II111iiii . OOooOOo * O0oo0OO0 / II111iiii
if 32 - 32: Oo0Ooo - Ii1I % o0oOOo0O0Ooo
if 15 - 15: iIii1I11I1II1 * I1ii11iIi11i / Oo0ooO0oo0oO * oO0o % OOooOOo
if 62 - 62: Ii1I / Oo0Ooo . OoO0O00 - OOooOOo
if 89 - 89: o0oOOo0O0Ooo % OoO0O00
Iii11iI1I . connectEventList (
 [ pyxbmct . ACTION_MOVE_DOWN ,
 pyxbmct . ACTION_MOVE_UP ,
 pyxbmct . ACTION_MOUSE_WHEEL_DOWN ,
 pyxbmct . ACTION_MOUSE_WHEEL_UP ,
 pyxbmct . ACTION_MOUSE_MOVE ] ,
 OoOiII11IiIi )
if 53 - 53: OoOoOO00 . Oo0ooO0oo0oO - OoO0O00
if 26 - 26: Oo0ooO0oo0oO - oO0o + OOooOOo * Ii1I - I11i % I1IiiI
if 73 - 73: Oo0ooO0oo0oO + Ii1I . O0 . iii1I1I
if 77 - 77: OOooOOo % I1IiiI - iii1I1I % O0oo0OO0
if 29 - 29: iIii1I11I1II1 / i11iIiiIii + Oo0Ooo
oooo00oO0O . controlLeft ( iiI1II11I1iI )
oooo00oO0O . controlRight ( ii1O0oOOo )
oooo00oO0O . controlDown ( i1I11ii )
ii1O0oOOo . controlLeft ( oooo00oO0O )
ii1O0oOOo . controlRight ( iiIiIi1I1 )
ii1O0oOOo . controlDown ( OOOOO0o0OOo )
iiIIii1iIiIi . controlLeft ( iiIiIi1I1 )
iiIIii1iIiIi . controlRight ( Oo0OOo )
iiIIii1iIiIi . controlDown ( I11I11I11IiIi )
iiIiIi1I1 . controlLeft ( ii1O0oOOo )
iiIiIi1I1 . controlRight ( iiIIii1iIiIi )
Oo0OOo . controlLeft ( iiIIii1iIiIi )
Oo0OOo . controlRight ( ii11I1IIII11 )
ii11I1IIII11 . controlLeft ( Oo0OOo )
ii11I1IIII11 . controlRight ( iiI1II11I1iI )
iiI1II11I1iI . controlLeft ( ii11I1IIII11 )
iiI1II11I1iI . controlRight ( oooo00oO0O )
i1I11ii . controlUp ( oooo00oO0O )
OOOOO0o0OOo . controlUp ( ii1O0oOOo )
o0ooO00O0O . controlUp ( ii1O0oOOo )
I11I11I11IiIi . controlUp ( ii1O0oOOo )
o0ooO00O0O . controlRight ( O0Oo0 )
O0Oo0 . controlLeft ( o0ooO00O0O )
O0Oo0 . controlUp ( ii1O0oOOo )
O0Oo0 . controlDown ( iIIIi1IiI11I1 )
iIIIi1IiI11I1 . controlUp ( O0Oo0 )
iIIIi1IiI11I1 . controlDown ( oooOoO )
iIIIi1IiI11I1 . controlLeft ( o0ooO00O0O )
oooOoO . controlUp ( iIIIi1IiI11I1 )
oooOoO . controlDown ( O0Oo0 )
oooOoO . controlLeft ( o0ooO00O0O )
iiI1II11I1iI . controlUp ( iii111iI )
iii111iI . controlDown ( iiI1II11I1iI )
IiII1i1iI . controlUp ( O0Oo0 )
IiII1i1iI . controlLeft ( i1I11ii )
O0OOO00 . controlLeft ( I11I11I11IiIi )
O0OOO00 . controlUp ( O0Oo0 )
O0OOO00 . controlDown ( oooOoO )
if 99 - 99: I1IiiI - iii1I1I * Ii1I - OoOoOO00 / i11iIiiIii - i1IIi
if 46 - 46: I1ii11iIi11i * Oo0ooO0oo0oO
if 4 - 4: O0oo0OO0 * II111iiii
if 4 - 4: Oo0ooO0oo0oO * Oo0Ooo - I1ii11iIi11i % Oo0ooO0oo0oO % OoOoOO00
if 18 - 18: OOooOOo / O0 . OoO0O00 - II111iiii * OOooOOo
if 13 - 13: OoO0O00 % i1IIi . i11iIiiIii / iii1I1I
if 28 - 28: i1IIi - iii1I1I + o0oOOo0O0Ooo / Oo0Ooo * oO0o
if 8 - 8: Oo0ooO0oo0oO + OOooOOo * Oo0ooO0oo0oO / i1IIi . I1ii11iIi11i
if 4 - 4: Ii1I - Oo0Ooo . i1IIi + iIii1I11I1II1
if 28 - 28: O0 / Oo0ooO0oo0oO / O00oOoOoO0o0O - I11i + O00oOoOoO0o0O + OoO0O00
if 84 - 84: Oo0Ooo + OoOoOO00 / iii1I1I . I1ii11iIi11i
if I1iIIiiIIi1i == "staff" or I1iIIiiIIi1i == "admin" or I1iIIiiIIi1i == "Registered" or I1iIIiiIIi1i == "donator" or I1iIIiiIIi1i == "free" or I1iIIiiIIi1i == "updater" :
 if 26 - 26: Oo0Ooo
 oOOOOOo . setLabel ( '[COLOR=darkgray]' + ooO ( "introlabel_loggedin" ) + '[/COLOR]' )
 Iii11iI1I . setFocus ( oooo00oO0O )
 O0ooOoOO0 . setVisible ( True )
 iIIi1IIIi111I . setVisible ( True )
 iii111iI . setVisible ( True )
 iIIi1IIIi111I . controlDown ( oooo00oO0O )
 oooo00oO0O . controlUp ( iIIi1IIIi111I )
 if 61 - 61: Ii1I * oO0o * i11iIiiIii + OoO0O00
 if I1iIIiiIIi1i == "free" :
  ii1iI11 . setVisible ( True )
  ii1iI11 . controlDown ( oooo00oO0O )
  iii111iI . controlDown ( iiI1II11I1iI )
  oooo00oO0O . controlUp ( ii1iI11 )
  iiI1II11I1iI . controlUp ( iii111iI )
  iIIi1IIIi111I . setVisible ( False )
  if 43 - 43: OoO0O00 * OoO0O00 * oO0o
  if 24 - 24: oO0o
  if 77 - 77: i11iIiiIii - O0oo0OO0 - I1ii11iIi11i * Oo0Ooo / i11iIiiIii
elif I1iIIiiIIi1i == "awaiting_activation" :
 if 79 - 79: Oo0Ooo % Oo0Ooo . oO0o + Oo0ooO0oo0oO * iii1I1I * I11i
 oOOOOOo . setLabel ( '[COLOR=darkgray]' + ooO ( "introlabel_awating_activation" ) + '[/COLOR]' )
 if 87 - 87: o0oOOo0O0Ooo + OoOoOO00 % o0oOOo0O0Ooo + I1IiiI
 if 89 - 89: II111iiii
 if 41 - 41: iIii1I11I1II1
 if 26 - 26: Oo0Ooo / i1IIi + Oo0Ooo
 if 76 - 76: I1ii11iIi11i * i1IIi % oO0o
 if 80 - 80: i1IIi * II111iiii . O0 % I1ii11iIi11i / Oo0ooO0oo0oO
 O0OoO . setVisible ( True )
 Iii11iI1I . setFocus ( O0OoO )
 O0OoO . controlDown ( oooo00oO0O )
 oooo00oO0O . controlUp ( O0OoO )
 O0ooOoOO0 . setVisible ( True )
 iii111iI . setVisible ( True )
 if 58 - 58: I1IiiI * I1ii11iIi11i - i1IIi % O0oo0OO0 % O0
 if 24 - 24: I11i + I11i % I11i
 if 63 - 63: i11iIiiIii + iIii1I11I1II1 / oO0o % O00oOoOoO0o0O - O0
 if 21 - 21: II111iiii
 if 89 - 89: OOooOOo % i11iIiiIii * OoOoOO00 % oO0o / O0 * i1IIi
 if 16 - 16: O00oOoOoO0o0O
 if 42 - 42: i1IIi / Ii1I * I1ii11iIi11i
else :
 oOOOOOo . setLabel ( '[COLOR=darkgray]' + ooO ( "introlabel_register" ) + '[/COLOR]' )
 oooo00oO0O . setEnabled ( False )
 ii1O0oOOo . setEnabled ( False )
 iiIIii1iIiIi . setEnabled ( False )
 iiIiIi1I1 . setEnabled ( False )
 Oo0OOo . setEnabled ( False )
 ii11I1IIII11 . setEnabled ( False )
 ii1iI11 . setVisible ( True )
 Iii11iI1I . setFocus ( ii1iI11 )
 ii1iI11 . controlDown ( oooo00oO0O )
 oooo00oO0O . controlUp ( ii1iI11 )
 if 9 - 9: I11i % i1IIi / i1IIi / OoO0O00
 if 46 - 46: O0oo0OO0 * II111iiii + II111iiii * O0 % II111iiii
oOOOOOo . setVisible ( True )
if 37 - 37: OOooOOo . iIii1I11I1II1 / O0 . Oo0ooO0oo0oO + OOooOOo - OoooooooOO
if 96 - 96: O0oo0OO0 / oO0o . I1ii11iIi11i % I1IiiI * OOooOOo
if 99 - 99: i11iIiiIii - O0oo0OO0
if 4 - 4: o0oOOo0O0Ooo - i11iIiiIii . iIii1I11I1II1 . OOooOOo % O00oOoOoO0o0O
if 68 - 68: I11i / iii1I1I - O00oOoOoO0o0O . iIii1I11I1II1 / o0oOOo0O0Ooo
if 54 - 54: II111iiii * I1IiiI
def ii1IIIIiI ( deviceid , mac , username ) :
 if 51 - 51: oO0o . O0oo0OO0 + O0 - II111iiii
 if 25 - 25: I11i % Oo0ooO0oo0oO / O0oo0OO0 * i11iIiiIii
 if 75 - 75: O00oOoOoO0o0O
 global oO00
 global ooO0oOOooOo0
 if 15 - 15: oO0o
 if 40 - 40: O0oo0OO0
 print '---- A R E S  C H E C K  U P D A T E ---'
 print ' '
 print '@ares: wizard version = ' + str ( oO00 )
 if 77 - 77: II111iiii - o0oOOo0O0Ooo . Ii1I
 iII11IIi1i = xbmcplugin . getSetting ( int ( sys . argv [ 1 ] ) , 'autoupdate' )
 if 87 - 87: OoOoOO00 % Ii1I
 if 55 - 55: O0oo0OO0
 if 69 - 69: I11i . O0oo0OO0 - I1ii11iIi11i + i11iIiiIii / iIii1I11I1II1 + OoO0O00
 print '@ares: autoupdatesetting = ' + str ( iII11IIi1i )
 if 17 - 17: I1IiiI * Ii1I . i11iIiiIii - oO0o . i11iIiiIii + Oo0Ooo
 if 42 - 42: iii1I1I
 if 51 - 51: I1IiiI - OoOoOO00 * O0oo0OO0 * iIii1I11I1II1
 if 5 - 5: i11iIiiIii / o0oOOo0O0Ooo
 iiII1i1 = i11i1 + OOoo0O0 + iiiIi1i1I + OOOO
 if 45 - 45: O0oo0OO0 + OoooooooOO + o0oOOo0O0Ooo * II111iiii
 if 12 - 12: I1ii11iIi11i / O0
 if 18 - 18: OoOoOO00 . i11iIiiIii + i1IIi / OoooooooOO - O00oOoOoO0o0O % OoO0O00
 o0O00o00Ooo = iIii111Ii ( iiII1i1 , 'no' )
 if 47 - 47: iii1I1I % O00oOoOoO0o0O + O0oo0OO0 * o0oOOo0O0Ooo * OoooooooOO
 if 100 - 100: Oo0Ooo / I1IiiI / iii1I1I / O0oo0OO0 / oO0o % o0oOOo0O0Ooo
 if 16 - 16: I1IiiI + I11i
 if o0O00o00Ooo == "downloadfailed" :
  if 66 - 66: OoooooooOO % II111iiii / O0oo0OO0 . i11iIiiIii
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Error" , "Update check failed. Ares may continue to work - please see our forum or facebook group.." )
  return ( )
  if 67 - 67: Ii1I + Oo0Ooo - I1IiiI - O00oOoOoO0o0O + oO0o + Oo0Ooo
  if 84 - 84: I1ii11iIi11i % oO0o - OOooOOo * Ii1I
  if 78 - 78: i1IIi / Oo0ooO0oo0oO / oO0o
  if 21 - 21: O00oOoOoO0o0O % Ii1I + OOooOOo + O00oOoOoO0o0O
  if 90 - 90: o0oOOo0O0Ooo
 II111 = IIIi11I11 ( o0O00o00Ooo , '<currentversion=' , '>' )
 I1OooO0o = IIIi11I11 ( o0O00o00Ooo , '<updatefile=' , '>' )
 I1i1ii111IIii1 = IIIi11I11 ( o0O00o00Ooo , '<filesize=' , '>' )
 OOo00OoOo000 = IIIi11I11 ( o0O00o00Ooo , '<online=' , '>' )
 o0oO00o00 = IIIi11I11 ( o0O00o00Ooo , '<message=' , '>' )
 I1i1ii111IIii1 = int ( I1i1ii111IIii1 )
 if 65 - 65: iIii1I11I1II1
 if o000oo == "true" :
  print '@ares: updateurl = ' + str ( iiII1i1 )
  if 58 - 58: O00oOoOoO0o0O % i1IIi . i11iIiiIii
 print '@ares: latestversion = ' + str ( II111 )
 if 5 - 5: OoOoOO00
 if 75 - 75: OOooOOo
 if 60 - 60: Oo0ooO0oo0oO - II111iiii - iIii1I11I1II1
 if 23 - 23: I1ii11iIi11i
 if 68 - 68: OoO0O00 . oO0o / O00oOoOoO0o0O - II111iiii % Oo0Ooo
 if 24 - 24: II111iiii / I1ii11iIi11i + oO0o / Ii1I + O00oOoOoO0o0O % oO0o
 if 86 - 86: I1IiiI
 if 83 - 83: I11i % Ii1I + O00oOoOoO0o0O % I11i / i1IIi . oO0o
 if 56 - 56: O0oo0OO0 - OOooOOo % o0oOOo0O0Ooo
 i1i1IiIiiI = os . path . join ( IIiIi1iI , 'back.png' )
 if 80 - 80: O0 / II111iiii . Oo0Ooo + o0oOOo0O0Ooo - OoO0O00
 try :
  iI11 = os . path . getsize ( i1i1IiIiiI )
 except :
  iI11 = 0
  if 24 - 24: i1IIi
  if 93 - 93: OoOoOO00 - Oo0Ooo + iIii1I11I1II1 % iIii1I11I1II1 / I1ii11iIi11i - O0oo0OO0
  if 9 - 9: I1ii11iIi11i - o0oOOo0O0Ooo / i11iIiiIii * iii1I1I / OoOoOO00 . I1IiiI
 if I1i1ii111IIii1 <> iI11 :
  if 23 - 23: I1IiiI . iii1I1I % i1IIi
  if o000oo == "true" :
   print '@ares: background filesize mismatch - localbacksize = ' + str ( iI11 )
   print '@ares: background filesize mismatch - pastebinbackfilesize = ' + str ( I1i1ii111IIii1 )
   print '@ares: background filesize mismatch - refreshing'
   if 92 - 92: o0oOOo0O0Ooo % i1IIi / OoooooooOO * OoooooooOO / iIii1I11I1II1
  try :
   iiII1i1 = urllib2 . urlopen ( IIIii1II1II + O0o0O00Oo0o0 + II11iIiIIIiI + oOooO0 + oOOo0O00o )
   I1I1 = open ( i1i1IiIiiI , 'wb' )
   I1I1 . write ( iiII1i1 . read ( ) )
   I1I1 . close ( )
  except :
   pass
   if 3 - 3: I1IiiI + Oo0Ooo / O0oo0OO0
   if 17 - 17: i11iIiiIii / Oo0Ooo . o0oOOo0O0Ooo / I1IiiI . OOooOOo
   if 10 - 10: I11i - OoOoOO00
   if 49 - 49: I1ii11iIi11i / II111iiii - Oo0ooO0oo0oO / O0oo0OO0 - oO0o
   if 91 - 91: iii1I1I % Ii1I . O00oOoOoO0o0O + Oo0ooO0oo0oO % i1IIi . II111iiii
   if 19 - 19: OoooooooOO + I1IiiI % Ii1I % II111iiii + o0oOOo0O0Ooo
   if 91 - 91: O00oOoOoO0o0O
   if 36 - 36: Oo0ooO0oo0oO - OoOoOO00 . iIii1I11I1II1 / oO0o % OoooooooOO * iii1I1I
 if oO00 <> II111 :
  if 42 - 42: oO0o
  if iII11IIi1i == "true" :
   if 71 - 71: i11iIiiIii . O0oo0OO0 % OoO0O00 % I1IiiI
   print '@ares: downloading update ' + str ( iII11IIi1i )
   print '@ares: updateurl =  ' + str ( I1OooO0o )
   if 46 - 46: O00oOoOoO0o0O + oO0o - Oo0ooO0oo0oO
   if 2 - 2: i1IIi / Ii1I % OoO0O00
   O00 ( 'Update' , I1OooO0o , 'script.areswizard' , 'Program' , deviceid , mac , username )
   if 85 - 85: i1IIi % iIii1I11I1II1
   try :
    os . remove ( iii )
   except :
    pass
    if 10 - 10: O0 . oO0o * I1IiiI
    if 21 - 21: OoooooooOO
   print '@ares: update finished '
   if 76 - 76: i1IIi * i11iIiiIii / OOooOOo + O0oo0OO0
   if 50 - 50: oO0o % OoOoOO00 + I1IiiI
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Restarted needed" , "Ares wizard has to be restarted to apply an update, press OK to exit." )
   sys . exit ( )
   if 15 - 15: II111iiii - iii1I1I / I1ii11iIi11i
  else :
   if 81 - 81: Ii1I - i1IIi % oO0o * Oo0Ooo * OoOoOO00
   print '@ares: update bypassed (auto-updates turned off)'
   if 79 - 79: oO0o + I1IiiI % iii1I1I + II111iiii % OoO0O00 % iii1I1I
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Update blocked" , "An update was found but you have Auto-Update turned off so it will not be installed." )
   if 46 - 46: o0oOOo0O0Ooo
   if 61 - 61: OoO0O00 . O0 + I1ii11iIi11i + OoO0O00
   if 44 - 44: I11i . oO0o
   if 65 - 65: I1ii11iIi11i * II111iiii % I11i + II111iiii . i1IIi / Oo0ooO0oo0oO
 if OOo00OoOo000 <> "yes" :
  if 74 - 74: OoOoOO00 % OoO0O00 . OoOoOO00
  ooO0oOOooOo0 = "no"
  if 16 - 16: OoO0O00 / Ii1I * i11iIiiIii / o0oOOo0O0Ooo + O0oo0OO0
  print ' '
  print '@ares: Offline mode triggered via update.txt'
  print ' '
  if 21 - 21: I11i % I1ii11iIi11i
  OOooo = xbmcgui . Dialog ( )
  OOooo . ok ( "Ares Wizard" , o0oO00o00 )
  if 8 - 8: OOooOOo % OoO0O00 + O0 - o0oOOo0O0Ooo
  if 46 - 46: Oo0Ooo . Oo0ooO0oo0oO + OoOoOO00 - I11i / i11iIiiIii . iii1I1I
  if 80 - 80: II111iiii + OoO0O00 % Oo0ooO0oo0oO + i11iIiiIii
  if 30 - 30: Ii1I / I1ii11iIi11i % O00oOoOoO0o0O - Oo0Ooo
  if 100 - 100: O00oOoOoO0o0O . O0oo0OO0 * oO0o % OoO0O00 . iIii1I11I1II1 * Oo0Ooo
  if 100 - 100: O00oOoOoO0o0O - OoOoOO00 % iii1I1I
  if 24 - 24: Oo0Ooo / OoO0O00 + i11iIiiIii
  if 81 - 81: i11iIiiIii . iIii1I11I1II1 - OoooooooOO
 print '@ares: autoupdate-exit '
 if 52 - 52: O0 - O0oo0OO0 + oO0o % Oo0ooO0oo0oO . oO0o
 if 60 - 60: oO0o + o0oOOo0O0Ooo - OOooOOo % o0oOOo0O0Ooo . I11i + OoO0O00
 if 27 - 27: i11iIiiIii - I1ii11iIi11i * O0oo0OO0 . I1IiiI / OoO0O00 * Oo0ooO0oo0oO
 if 42 - 42: OOooOOo
 if 36 - 36: OoooooooOO + Oo0ooO0oo0oO + iii1I1I
 if 30 - 30: i1IIi % Ii1I
ii1IIIIiI ( 'free' , 'free' , 'free' )
if 18 - 18: o0oOOo0O0Ooo % I1ii11iIi11i . Ii1I . O0 * II111iiii + I1ii11iIi11i
if 45 - 45: OoO0O00 / I1ii11iIi11i * Oo0ooO0oo0oO * OOooOOo % i11iIiiIii * iii1I1I
if 33 - 33: oO0o . iii1I1I + Oo0Ooo
if 33 - 33: Oo0ooO0oo0oO
if 46 - 46: OoOoOO00 / iii1I1I - OoO0O00 . o0oOOo0O0Ooo
if 50 - 50: O0oo0OO0 . O0 . OoOoOO00 + O0oo0OO0 + OoooooooOO . i11iIiiIii
if 65 - 65: I1IiiI % iIii1I11I1II1
try :
 if 52 - 52: I1IiiI
 with open ( iii , 'r' , 0 ) as o0o0Ooo0 :
  OoO000O = json . load ( o0o0Ooo0 )
  if 19 - 19: I1IiiI
 i1iIi1 = OoO000O [ 'buildupdate' ]
 if 3 - 3: oO0o * II111iiii . O0
 print '@ares: checkbuildupdate = ' + i1iIi1
 if 19 - 19: I1IiiI / I1IiiI / Oo0Ooo + oO0o + i1IIi
except :
 if 31 - 31: iii1I1I / OoooooooOO - O0oo0OO0 . iii1I1I
 i1iIi1 = "no"
 if 38 - 38: Oo0ooO0oo0oO . OoooooooOO - II111iiii * i11iIiiIii / i1IIi . OoooooooOO
 if 51 - 51: oO0o - I1ii11iIi11i + I1ii11iIi11i
 if 100 - 100: I11i - I1ii11iIi11i . i1IIi
 if 85 - 85: II111iiii
if i1iIi1 == "yes" :
 if 58 - 58: i1IIi - OoO0O00 + Oo0ooO0oo0oO
 if 6 - 6: O00oOoOoO0o0O % I1IiiI + OoooooooOO * oO0o . iii1I1I + oO0o
 try :
  if 4 - 4: I11i % I1IiiI
  with open ( OOoO0 , 'r' , 0 ) as o0o0Ooo0 :
   try :
    OoO000O = json . load ( o0o0Ooo0 )
   except :
    OoO000O = ""
    if 72 - 72: I1IiiI % II111iiii % iii1I1I / OoOoOO00
  try :
   iiI1Ii1I = OoO000O [ 'buildname' ]
   print '@ares: buildinstallconfig: buildname: ' + iiI1Ii1I
  except :
   iiI1Ii1I = "0"
   if 96 - 96: OoOoOO00 % Ii1I
   if 50 - 50: O00oOoOoO0o0O - II111iiii
  try :
   oo0 = OoO000O [ 'canupdate' ]
   print '@ares: buildinstallconfig: canupdate: ' + oo0
  except :
   oo0 = "0"
   if 10 - 10: OoooooooOO % Ii1I * OOooOOo + O00oOoOoO0o0O * oO0o
   if 13 - 13: II111iiii
  try :
   IiiIii = OoO000O [ 'buildurl' ]
   ooOooo0O00 = OoO000O [ 'buildurl' ]
   print '@ares: buildinstallconfig: buildurl: ' + IiiIii
  except :
   IiiIii = "0"
   if 14 - 14: i11iIiiIii . O00oOoOoO0o0O
   if 70 - 70: Oo0Ooo * OOooOOo + O0oo0OO0 % OoOoOO00 / O0
  try :
   I1i111I = str ( OoO000O [ 'installedversion' ] )
   print '@ares: buildinstallconfig: installedversion: ' + I1i111I
  except :
   I1i111I = "0"
   if 23 - 23: O0 * oO0o / I1IiiI + i1IIi * O0 % oO0o
 except :
  if 11 - 11: O0oo0OO0 . OoooooooOO * iIii1I11I1II1 / I1ii11iIi11i - Oo0ooO0oo0oO . iii1I1I
  print '@ares: could not find buildinstall info'
  if 71 - 71: i11iIiiIii + I11i / i11iIiiIii % Oo0Ooo / iIii1I11I1II1 * OoO0O00
  if 49 - 49: iii1I1I + OoOoOO00
  if 33 - 33: Oo0ooO0oo0oO
  if 19 - 19: O0oo0OO0 % O00oOoOoO0o0O
  if 94 - 94: O0oo0OO0 * I1ii11iIi11i * I1ii11iIi11i - o0oOOo0O0Ooo . i11iIiiIii
 if oo0 == "yes" or oo0 == "Yes" :
  if 16 - 16: i1IIi
  print '@ares: canupdate: ' + oo0
  if 88 - 88: OOooOOo
  oooO = oo0o0O0OO ( IiiIii , 'no' )
  if 79 - 79: oO0o
  if oooO <> "downloadfailed" :
   if 52 - 52: oO0o + OoO0O00 / OoooooooOO - iIii1I11I1II1 / iii1I1I - oO0o
   print '@ares: wizarddata ok'
   if 68 - 68: I1IiiI - OoOoOO00 - iIii1I11I1II1 % i11iIiiIii * OoOoOO00 * OoO0O00
   oooO = oooO . replace ( '\n' , '' ) . replace ( '\r' , '' )
   if 97 - 97: OoO0O00 - O00oOoOoO0o0O + Oo0ooO0oo0oO % iIii1I11I1II1 % iii1I1I
   print '@ares: scanning wizarddata...'
   if 100 - 100: O00oOoOoO0o0O - Ii1I * iIii1I11I1II1 . iii1I1I . i1IIi % Oo0Ooo
   Iiiii = re . compile ( 'name="(.+?)".+?rl="(.+?)".+?mg="(.+?)".+?anart="(.+?)".+?escription="(.+?)".+?ersion="(.+?)"' ) . findall ( oooO )
   if 11 - 11: I11i + oO0o % Ii1I
   for I1 , iiII1i1 , OoO , II11IiIi11 , ooOO , o0o0O00oOo in Iiiii :
    if 22 - 22: Oo0ooO0oo0oO
    if I1 == iiI1Ii1I :
     if 83 - 83: OOooOOo - i11iIiiIii - i1IIi / oO0o
     iI1I1iI = str ( o0o0O00oOo )
     IIi = str ( o0o0O00oOo )
     break
     if 33 - 33: oO0o * Oo0ooO0oo0oO * Ii1I * O00oOoOoO0o0O
   print '@ares: buildname found'
   print '@ares: installedversion: ' + I1i111I
   print '@ares: buildcurrentversion: ' + iI1I1iI
   print '@ares: newbuildurl: ' + iiII1i1
   if 39 - 39: i1IIi
   if I1i111I <> iI1I1iI :
    if 79 - 79: Oo0ooO0oo0oO - II111iiii - oO0o
    print '@ares: build update found'
    OOooo = xbmcgui . Dialog ( )
    o0O00o00Ooo = xbmcgui . Dialog ( ) . yesno ( "Ares Wizard" , "An update was found for your build. Update now?" )
    if 55 - 55: iii1I1I % iIii1I11I1II1 + Ii1I + oO0o . i11iIiiIii - OOooOOo
    if ( o0O00o00Ooo ) :
     print '@ares: build update started'
     IIi1III11I1Ii ( I1 , iiII1i1 , oOooOOOoOo , OOO00O , o00O0 , I1ii1Ii1 , 'none' )
    else :
     print '@ares: user chose not to update build'
     if 14 - 14: oO0o - i11iIiiIii / OoOoOO00 % o0oOOo0O0Ooo / O00oOoOoO0o0O * I1IiiI
   else :
    if 2 - 2: i1IIi / O0oo0OO0 + I1IiiI + I1ii11iIi11i - o0oOOo0O0Ooo + iIii1I11I1II1
    print '@ares: build up to date'
    if 78 - 78: I1ii11iIi11i % i1IIi . O0oo0OO0 + Oo0Ooo . o0oOOo0O0Ooo % II111iiii
  try :
   if 65 - 65: Ii1I . OoOoOO00 + O0 / iIii1I11I1II1 % Ii1I % O0oo0OO0
   Oo ( 'lastbuildcheck' , str ( datetime . date . today ( ) ) )
   Oo ( 'buildupdate' , "no" )
   if 31 - 31: o0oOOo0O0Ooo - Oo0Ooo
  except :
   if 15 - 15: O0 + OOooOOo
   OOooo = xbmcgui . Dialog ( )
   OOooo . ok ( "Error" , "Error writing config" , "" , "" )
   if 8 - 8: i11iIiiIii . O00oOoOoO0o0O . I1ii11iIi11i + i1IIi % O0oo0OO0
   if 64 - 64: I1IiiI . Oo0Ooo * OoO0O00
   if 87 - 87: i1IIi / OoooooooOO
Iii11iI1I . connect ( pyxbmct . ACTION_NAV_BACK , Iii11iI1I . close )
if 68 - 68: O0oo0OO0 / iIii1I11I1II1
Iii11iI1I . doModal ( )
if 8 - 8: Oo0ooO0oo0oO * O00oOoOoO0o0O * OOooOOo / I1IiiI
del Iii11iI1I
if 40 - 40: i11iIiiIii + OoooooooOO
# dd678faae9ac167bc83abf78e5cb2f3f0688d3a3
')